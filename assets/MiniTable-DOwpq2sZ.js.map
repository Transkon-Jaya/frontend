{"version":3,"file":"MiniTable-DOwpq2sZ.js","sources":["../../src/components/MiniTable.vue"],"sourcesContent":["<script setup>\r\nimport { ref, onMounted, computed } from 'vue';\r\nimport axios from 'axios';\r\n\r\nconst props = defineProps({\r\n  settings: Object,\r\n  urls: Object,\r\n  fields: Object\r\n});\r\n\r\nconst rawData = ref([]);\r\nconst searchQuery = ref('');\r\nconst columnFilters = ref({});\r\nconst uniqueValues = ref({});\r\nconst sort = ref({\r\n  column: null,\r\n  ascending: true\r\n});\r\n\r\nconst currentPage = ref(1);\r\nconst itemsPerPage = ref(10);\r\nconst itemsPerPageOptions = [10, 25, 50, 100];\r\n\r\nconst isDropdown = (columnName) => {\r\n  return props.fields.columns.some(col => col.column === columnName && col.dropdown);\r\n};\r\nconst checkType = (type, col) => {\r\n  return props.fields[type]?.includes(col) || false;\r\n};\r\n\r\nconst getMergedValue = (item, column) => {\r\n  const mergeDef = props.fields.merge.find(m => m.to === column);\r\n  if (mergeDef) {\r\n    for (let i = mergeDef.fields.length - 1; i >= 0; i--) {\r\n      const field = mergeDef.fields[i];\r\n      const value = item[field];\r\n      if (value !== null && value !== '') {\r\n        return value;\r\n      }\r\n    }\r\n    return '';\r\n  }\r\n  return item[column];\r\n};\r\n\r\nconst fetchData = async () => {\r\n  try {\r\n    const response = await axios.get(props.urls.data);\r\n    rawData.value = response.data;\r\n\r\n    // Build dropdown values\r\n    props.fields.columns.forEach(col => {\r\n      if (isDropdown(col.column)) {\r\n        uniqueValues.value[col.column] = [...new Set(rawData.value.map(item => item[col.column]))];\r\n      }\r\n    });\r\n  } catch (error) {\r\n    console.error(\"Fetch error:\", error);\r\n  }\r\n  // console.log(\"CHECKBOX \", isCheckbox(\"spare_exists\"));\r\n};\r\n\r\nconst filteredData = computed(() => {\r\n  let result = rawData.value.filter(item => {\r\n    const matchesSearch = searchQuery.value === '' ||\r\n      Object.values(item).join(' ').toLowerCase().includes(searchQuery.value.toLowerCase());\r\n\r\n    const matchesColumnFilters = Object.entries(columnFilters.value).every(([key, val]) => {\r\n      if (!val) return true;\r\n      const lowerVal = val.toLowerCase();\r\n\r\n      const mergeDef = props.fields.merge.find(m => m.to === key);\r\n      if (mergeDef) {\r\n        return mergeDef.fields.some(f => (item[f] || '').toString().toLowerCase().includes(lowerVal));\r\n      }\r\n\r\n      return (item[key] || '').toString().toLowerCase().includes(lowerVal);\r\n    });\r\n\r\n    return matchesSearch && matchesColumnFilters;\r\n  });\r\n\r\n  if (sort.value.column) {\r\n    result.sort((a, b) => {\r\n      const valA = getMergedValue(a, sort.value.column);\r\n      const valB = getMergedValue(b, sort.value.column);\r\n\r\n      if (valA < valB) return sort.value.ascending ? -1 : 1;\r\n      if (valA > valB) return sort.value.ascending ? 1 : -1;\r\n      return 0;\r\n    });\r\n  }\r\n\r\n  return result;\r\n});\r\n\r\nconst toggleSort = (column) => {\r\n  if (sort.value.column === column) {\r\n    sort.value.ascending = !sort.value.ascending;\r\n  } else {\r\n    sort.value.column = column;\r\n    sort.value.ascending = true;\r\n  }\r\n};\r\n\r\n\r\nconst totalPages = computed(() => {\r\n  return Math.ceil(filteredData.value.length / itemsPerPage.value);\r\n});\r\n\r\nconst paginatedData = computed(() => {\r\n  const start = (currentPage.value - 1) * itemsPerPage.value;\r\n  return filteredData.value.slice(start, start + itemsPerPage.value);\r\n});\r\n\r\nconst goToPage = (page) => {\r\n  if (page >= 1 && page <= totalPages.value) {\r\n    currentPage.value = page;\r\n  }\r\n};\r\n\r\nconst paginationWindow = computed(() => {\r\n  const total = totalPages.value;\r\n  const current = currentPage.value;\r\n  const delta = 2;\r\n  const range = [];\r\n\r\n  const start = Math.max(2, current - delta);\r\n  const end = Math.min(total - 1, current + delta);\r\n\r\n  for (let i = start; i <= end; i++) {\r\n    range.push(i);\r\n  }\r\n\r\n  if (start > 2) range.unshift('...');\r\n  if (end < total - 1) range.push('...');\r\n\r\n  range.unshift(1);\r\n  if (total > 1) range.push(total);\r\n\r\n  return range;\r\n});\r\n\r\nonMounted(fetchData);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container mt-4\">\r\n    <div class=\"card p-4 shadow-sm\">\r\n      <!-- Header -->\r\n      <div class=\"d-flex justify-content-between align-items-center mb-3\">\r\n        <h2 class=\"fw-bold\">{{ settings.title }}</h2>\r\n        <input \r\n          type=\"text\" \r\n          class=\"form-control w-25\" \r\n          :placeholder=\"settings.searchText || 'Search...'\" \r\n          v-model=\"searchQuery\" \r\n        />\r\n      </div>\r\n\r\n      <!-- Table -->\r\n      <div class=\"table-responsive\">\r\n        <table class=\"table table-hover align-middle\">\r\n          <thead class=\"table-light\">\r\n            <tr class=\"filter-row\">\r\n              <th v-for=\"col in fields.columns\" :key=\"'filter-' + col.column\">\r\n                <template v-if=\"col.filterText\">\r\n                  <input \r\n                    v-if=\"!isDropdown(col.column)\" \r\n                    type=\"text\" \r\n                    class=\"form-control form-control-sm\" \r\n                    :placeholder=\"col.filterText\" \r\n                    v-model=\"columnFilters[col.column]\" \r\n                  />\r\n                  <select \r\n                    v-else \r\n                    class=\"form-select form-select-sm\" \r\n                    v-model=\"columnFilters[col.column]\"\r\n                  >\r\n                    <option :value=\"''\">{{ col.filterText }}</option>\r\n                    <option \r\n                      v-for=\"val in uniqueValues[col.column] || []\" \r\n                      :key=\"val\" \r\n                      :value=\"val\"\r\n                    >\r\n                      {{ val }}\r\n                    </option>\r\n                  </select>\r\n                </template>\r\n              </th>\r\n            </tr>\r\n            <tr>\r\n              <th v-for=\"col in fields.columns\" :key=\"'header-' + col.column\"     @click=\"toggleSort(col.column)\"\r\n              class=\"sortable\">\r\n                {{ col.label }}\r\n                <span v-if=\"sortBy === col.column\">\r\n                {{ sort.ascending === 'asc' ? '▲' : '▼' }}\r\n              </span>\r\n              </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            <tr \r\n              v-for=\"item in paginatedData\" \r\n              :key=\"item.id\" \r\n              class=\"clickable-row\"\r\n            >\r\n              <td \r\n                v-for=\"col in fields.columns\" \r\n                :key=\"'cell-' + col.column\"\r\n                contenteditable\r\n              >\r\n              <template v-if=\"checkType('checkbox', col.column)\">\r\n              <input \r\n                type=\"checkbox\" \r\n                :checked=\"Boolean(parseInt(getMergedValue(item, col.column)))\"\r\n                style=\"align-content: center;\"\r\n              />\r\n            </template>\r\n            <template v-else-if=\"checkType('datetime', col.column)\">\r\n              <input \r\n                type=\"datetime-local\"\r\n                v-model=\"item[col.column]\"\r\n                style=\"font-size: 9px;\"\r\n              />\r\n            </template>\r\n            <template v-else>\r\n              {{ getMergedValue(item, col.column) }}\r\n            </template>\r\n              </td>\r\n            </tr>\r\n            <tr v-if=\"paginatedData.length === 0\">\r\n              <td :colspan=\"fields.columns.length\" class=\"text-center text-muted py-4\">\r\n                No data found\r\n              </td>\r\n            </tr>\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n\r\n      <!-- Pagination -->\r\n      <div class=\"d-flex justify-content-between align-items-center mt-3 flex-wrap gap-2\">\r\n        <div class=\"d-flex align-items-center gap-2\">\r\n          <label for=\"itemsPerPage\" class=\"form-label mb-0\">Rows per page:</label>\r\n          <select \r\n            id=\"itemsPerPage\"\r\n            class=\"form-select form-select-sm w-auto\"\r\n            v-model=\"itemsPerPage\"\r\n          >\r\n            <option v-for=\"option in itemsPerPageOptions\" :key=\"option\" :value=\"option\">\r\n              {{ option }}\r\n            </option>\r\n          </select>\r\n        </div>\r\n\r\n        <div>\r\n          Showing {{ paginatedData.length }} of {{ filteredData.length }} filtered results\r\n        </div>\r\n\r\n        <nav>\r\n          <ul class=\"pagination mb-0\">\r\n            <li class=\"page-item\" :class=\"{ disabled: currentPage === 1 }\">\r\n              <button class=\"page-link\" @click=\"goToPage(currentPage - 1)\">«</button>\r\n            </li>\r\n\r\n            <li \r\n              v-for=\"page in paginationWindow\" \r\n              :key=\"'page-' + page\" \r\n              class=\"page-item\" \r\n              :class=\"{ active: page === currentPage, disabled: page === '...'}\"\r\n            >\r\n              <button \r\n                class=\"page-link\" \r\n                @click=\"typeof page === 'number' && goToPage(page)\" \r\n                :disabled=\"page === '...'\"\r\n              >\r\n                {{ page }}\r\n              </button>\r\n            </li>\r\n\r\n            <li class=\"page-item\" :class=\"{ disabled: currentPage === totalPages }\">\r\n              <button class=\"page-link\" @click=\"goToPage(currentPage + 1)\">»</button>\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\n.table {\r\n  table-layout: fixed;\r\n}\r\ninput.form-control,\r\nselect.form-select,\r\ninput[type=\"datetime-local\"],\r\ninput[type=\"checkbox\"] {\r\n  border: 1px solid #000000 !important;\r\n  border-radius: 4px;\r\n}\r\nthead input,\r\nthead select {\r\n  border: 1px solid #000;\r\n  border-radius: 4px;\r\n  font-size: 13px;\r\n}\r\n\r\nth, td {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  white-space: nowrap;\r\n  font-size: 14px;\r\n}\r\ninput.form-control,\r\nselect.form-select {\r\n  font-size: 13px; \r\n}\r\n.clickable-row {\r\n  cursor: pointer;\r\n}\r\n.page-link {\r\n  color: rgb(255, 255, 255) !important; \r\n}\r\n.page-item.active .page-link {\r\n  background-color: rgb(217, 0, 0); \r\n  border-color: rgb(217, 0, 0);\r\n}\r\n\r\n</style>"],"names":["props","__props","rawData","ref","searchQuery","columnFilters","uniqueValues","sort","currentPage","itemsPerPage","itemsPerPageOptions","isDropdown","columnName","col","checkType","type","_a","getMergedValue","item","column","mergeDef","m","i","field","value","fetchData","response","axios","error","filteredData","computed","result","matchesSearch","matchesColumnFilters","key","val","lowerVal","f","a","b","valA","valB","toggleSort","totalPages","paginatedData","start","goToPage","page","paginationWindow","total","current","delta","range","end","onMounted"],"mappings":"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"}