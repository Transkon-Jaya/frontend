{"version":3,"file":"TestView-Cg07XNaj.js","sources":["../../src/views/TestView.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, onMounted, onBeforeUnmount } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { VueGoodTable } from \"vue-good-table-next\";\r\nimport \"vue-good-table-next/dist/vue-good-table-next.css\";\r\nimport Multiselect from \"vue-multiselect\";\r\nimport \"vue-multiselect/dist/vue-multiselect.css\";\r\nimport * as XLSX from \"xlsx\";\r\nimport { fetchApi } from '@/utils/fetchApi.js';\r\n\r\nconst apiUrl = \"https://www.transkon-rent.com/api/marketing\";\r\nconst customerUrl = \"https://www.transkon-rent.com/api/customer\";\r\nconst locationUrl = \"https://www.transkon-rent.com/api/location\";\r\nconst marketingData = ref([]);\r\nconst marketingDataInsert = ref([]);\r\nconst customers = ref([]);\r\nconst locations = ref([]);\r\nconst filteredData = ref([]); // Store filtered data\r\nconst columns = ref([]);\r\nconst loading = ref(true);\r\nconst error = ref(null);\r\nconst firstColumnWidth = ref(\"150px\");\r\nconst secondColumnWidth = ref(\"100px\");\r\nconst changedRows = ref(new Map()); // Store changed rows\r\nconst changedRowsInsert = ref(new Map());\r\nconst checkboxFields = [\r\n  \"front_bumper\",\r\n  \"rear_bumper\",\r\n  \"roll_bar\",\r\n  \"rops\",\r\n  \"buggy_whip_cw_flag\",\r\n  \"body_strip_3m\",\r\n  \"foglamp_led_16_mata\",\r\n  \"rotary_lamp_led\",\r\n  \"rotary_lamp_flash_tube\",\r\n  \"lamp_comb_led\",\r\n  \"safety_cone\",\r\n  \"wheel_chock\",\r\n  \"fire_exting\",\r\n  \"radio_motorolla\",\r\n  \"gps\",\r\n  \"wheel_nut_indic\",\r\n  \"tyre_gt_265_65_r17_mt\",\r\n  \"radio_icom\",\r\n];\r\nconst fieldsToRemove = [\"isEditing\", \"filterable\", \"vgt_id\", \"originalIndex\"];\r\nconst dateFields = [\r\n  \"inquiry\",\r\n  \"date_rfq\",\r\n  \"date_deadline_tender\",\r\n  \"approval_presdir\",\r\n  \"date_Quotation_trja\",\r\n  \"date_send_quot\",\r\n  \"date_approved_quot\",\r\n  \"date_spk_po_customer\",\r\n  \"date_master_contract\",\r\n  \"date_po_dealer\",\r\n  \"date_send_po\",\r\n  \"date_delvery_to_customer\",\r\n  \"received_date_by_customer\",\r\n  \"date_commisioning_finish\",\r\n];\r\n\r\nconst fetchCustomerData = async () => {\r\n  try {\r\n    const response = await axios.get(customerUrl);\r\n    console.log(typeof response.data);\r\n    console.log(response.data);\r\n    if (Array.isArray(response.data)) {\r\n      customers.value = response.data.map((item) => item.name ?? \"\"); // Handle missing values\r\n    } else {\r\n      console.error(\"Unexpected API response format:\", response.data);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch customer data:\", err);\r\n  }\r\n}\r\n\r\nconst fetchLocationData = async () => {\r\n  try {\r\n    const response = await axios.get(locationUrl);\r\n    if (Array.isArray(response.data)) {\r\n      locations.value = response.data.map((item) => item.location ?? \"\"); // Handle missing values\r\n    } else {\r\n      console.error(\"Unexpected API response format:\", response.data);\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Failed to fetch customer data:\", err);\r\n  }\r\n}\r\n\r\nconst fetchMarketingData = async () => {\r\n  try {\r\n    loading.value = true;\r\n    const response = await axios.get(apiUrl);\r\n    if (response.data.length > 0) {\r\n      columns.value = [\r\n        {\r\n          label: \"ID\",\r\n          field: \"id\",\r\n          // width: secondColumnWidth.value,\r\n          width: \"80px\", // Kurangi ukuran kolom ID\r\n          minWidth: \"100px\",\r\n          sortable: true,\r\n          filterable: false,\r\n          editable: false,\r\n          frozen: true,\r\n          headerClass: \"custom-header\",\r\n        },\r\n        ...Object.keys(response.data[0])\r\n          .filter((key) => key !== \"id\")\r\n          .map((key) => ({\r\n            label: key.replace(/_/g, \" \").toUpperCase(),\r\n            field: key,\r\n            sortable: true,\r\n            filterable: true,\r\n            filterOptions: { enabled: true, placeholder: `${key}` },\r\n            editable: true,\r\n            type: checkboxFields.includes(key) ? \"checkbox\" : \"text\",\r\n            width:\r\n              Math.max(\r\n                ...response.data.map((item) => String(item[key]).length),\r\n                key.length\r\n              ) *\r\n                10 +\r\n              20 +\r\n              \"px\",\r\n            minWidth: \"80px\",\r\n            headerClass: \"custome-header\",\r\n          })),\r\n      ];\r\n    }\r\n\r\n    marketingData.value = response.data.map((item) => ({\r\n      ...item,\r\n      filterable: true,\r\n    }));\r\n\r\n    filteredData.value = [...marketingData.value]; // Initialize filtered data\r\n\r\n    setTimeout(updateColumnWidths, 500);\r\n  } catch (err) {\r\n    error.value = \"Failed to fetch data\";\r\n    console.error(err);\r\n  } finally {\r\n    loading.value = false;\r\n    addNewRow();\r\n  }\r\n};\r\n\r\nconst addNewRow = () => {\r\n  const newRow = {};\r\n  columns.value.forEach((col) => {\r\n    newRow[col.field] = checkboxFields.includes(col.field) ? 0 : \"\";\r\n  });\r\n  newRow.id = marketingDataInsert.value.length + 1;\r\n  marketingDataInsert.value.push(newRow);\r\n};\r\n\r\n// Track changes\r\nconst trackUpload = (row, field) => {\r\n  if (!changedRowsInsert.value.has(row.id)) {\r\n    changedRowsInsert.value.set(row.id, { ...row });\r\n  } else {\r\n    changedRowsInsert.value.get(row.id)[field] = row[field];\r\n  }\r\n};\r\n\r\nconst upload = async () => {\r\n  try {\r\n    console.log(\"button upload\");\r\n    const uploads = Array.from(changedRowsInsert.value.values());\r\n    console.log(uploads);\r\n    for (const item of uploads) {\r\n      const uploadItem = { ...item };\r\n      for (const prop of fieldsToRemove) {\r\n        delete uploadItem[prop];\r\n      }\r\n      delete uploadItem[\"id\"];\r\n      console.log(uploadItem);\r\n      dateFields.forEach((key) => {\r\n        if (\r\n          uploadItem[key] !== null &&\r\n          uploadItem[key] !== undefined &&\r\n          !isNaN(Date.parse(uploadItem[key]))\r\n        ) {\r\n          uploadItem[key] = new Date(uploadItem[key])\r\n            .toISOString()\r\n            .split(\"T\")[0]; // Format: YYYY-MM-DD\r\n        }\r\n      });\r\n      Object.keys(uploadItem).forEach((key) => {\r\n        if (uploadItem[key] === \"\") {\r\n          uploadItem[key] = null;\r\n        }\r\n      });\r\n      await axios.post(`${apiUrl}`, uploadItem);\r\n      await fetchMarketingData();\r\n      alert(\"Data uploaded Successfully\");\r\n      marketingDataInsert.value = [];\r\n      changedRowsInsert.value.clear();\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Failed to upload: \", err);\r\n    alert(\"Failed to upload\");\r\n  }\r\n};\r\n\r\n// For updates\r\nconst trackChanges = (row, field) => {\r\n  if (!changedRows.value.has(row.id)) {\r\n    changedRows.value.set(row.id, { ...row });\r\n  } else {\r\n    changedRows.value.get(row.id)[field] = row[field];\r\n  }\r\n};\r\n// Save all changes (updates)\r\nconst saveChanges = async () => {\r\n  try {\r\n    const updates = Array.from(changedRows.value.values());\r\n    for (const item of updates) {\r\n      const updatedItem = { ...item };\r\n      for (const prop of fieldsToRemove) {\r\n        delete updatedItem[prop];\r\n      }\r\n      dateFields.forEach((key) => {\r\n        if (\r\n          updatedItem[key] !== null &&\r\n          updatedItem[key] !== undefined &&\r\n          !isNaN(Date.parse(updatedItem[key]))\r\n        ) {\r\n          updatedItem[key] = new Date(updatedItem[key])\r\n            .toISOString()\r\n            .split(\"T\")[0]; // Format: YYYY-MM-DD\r\n        }\r\n      });\r\n      await axios.put(`${apiUrl}`, updatedItem);\r\n    }\r\n    alert(\"Changes saved successfully!\");\r\n    changedRows.value.clear();\r\n  } catch (err) {\r\n    console.error(\"Failed to save changes:\", err);\r\n    alert(\"Failed to save changes\");\r\n  }\r\n};\r\n\r\n// Export to Excel (filtered data only)\r\nconst exportToExcel = () => {\r\n  \r\n  const worksheet = XLSX.utils.json_to_sheet(filteredData.value);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Marketing Data\");\r\n  XLSX.writeFile(workbook, \"Filtered_Marketing_Data.xlsx\");\r\n};\r\n\r\n// Update filtered data when table is filtered\r\nconst onTableFiltered = (filteredRows) => {\r\n  filteredData.value = filteredRows;\r\n  console.log(\"F Len : \", filteredData.value.length, \" | M Len : \", marketingData.value.length);\r\n};\r\n\r\n// Dynamic Column Width Calculation\r\nconst updateColumnWidths = () => {\r\n  const secondCol = document.querySelector(\".vue-good-table th:nth-child(1)\");\r\n  if (secondCol) secondColumnWidth.value = secondCol.offsetWidth + \"px\";\r\n  document.documentElement.style.setProperty(\r\n    \"--second-column-width\",\r\n    secondColumnWidth.value\r\n  );\r\n};\r\n\r\nonMounted(() => {\r\n  fetchMarketingData();\r\n  fetchCustomerData();\r\n  fetchLocationData();\r\n  window.addEventListener(\"resize\", updateColumnWidths);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener(\"resize\", updateColumnWidths);\r\n});\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <h2>Marketing</h2>\r\n    <button @click=\"upload\">Upload</button>\r\n    <button @click=\"addNewRow\">Add New Row</button>\r\n    <p v-if=\"loading\">Loading...</p>\r\n    <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n    <!-- INSERT TABLE -->\r\n    <div class=\"table-container\">\r\n      <vue-good-table\r\n        v-if=\"!loading && !error\"\r\n        :columns=\"columns\"\r\n        :rows=\"marketingDataInsert\"\r\n        :pagination-options=\"{ enabled: false }\"\r\n        style=\"overflow-x: auto\"\r\n      >\r\n        <template v-slot:table-row=\"props\">\r\n          <template v-if=\"checkboxFields.includes(props.column.field)\">\r\n            <div class=\"checkbox-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                :checked=\"props.row[props.column.field] == 1\"\r\n                @change=\"\r\n                  (event) => {\r\n                    props.row[props.column.field] = event.target.checked\r\n                      ? 1\r\n                      : 0;\r\n                    trackUpload(props.row, props.column.field);\r\n                  }\r\n                \"\r\n              />\r\n            </div>\r\n          </template>\r\n          <template v-else-if=\"props.column.field === 'name_customer'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"customers || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"false\"\r\n              placeholder=\"Select customer...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"props.column.field === 'location'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"locations || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"false\"\r\n              placeholder=\"Select location...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"dateFields.includes(props.column.field)\">\r\n            <input\r\n              type=\"date\"\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"props.column.editable !== false\">\r\n            <input\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else>\r\n            <span>{{ props.row[props.column.field] }}</span>\r\n          </template>\r\n        </template>\r\n      </vue-good-table>\r\n    </div>\r\n\r\n    <button @click=\"exportToExcel\">Export to Excel</button>\r\n    <button @click=\"saveChanges\">Save Updates</button>\r\n    <!-- UPDATE TABLE -->\r\n    <div class=\"table-container\">\r\n      <vue-good-table\r\n        v-if=\"!loading && !error\"\r\n        :columns=\"columns\"\r\n        :rows=\"marketingData\"\r\n        :pagination-options=\"{ enabled: true, mode: 'pages', perPage: 10 }\"\r\n        :search-options=\"{ enabled: true }\"\r\n        :sort-options=\"{ enabled: true }\"\r\n        style=\"overflow-x: auto\"\r\n        @on-filtered=\"onTableFiltered\"\r\n      >\r\n        <template v-slot:table-row=\"props\">\r\n          <template v-if=\"checkboxFields.includes(props.column.field)\">\r\n            <div class=\"checkbox-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                :checked=\"props.row[props.column.field] == 1\"\r\n                @change=\"\r\n                  props.row[props.column.field] = $event.target.checked ? 1 : 0\r\n                \"\r\n              />\r\n            </div>\r\n          </template>\r\n          <template v-else-if=\"props.column.field === 'name_customer'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"customers || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"false\"\r\n              placeholder=\"Select customer...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"props.column.field === 'location'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"locations || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"true\"\r\n              placeholder=\"Select location...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"dateFields.includes(props.column.field)\">\r\n            <input\r\n              type=\"date\"\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n\r\n          <template v-else-if=\"props.column.editable !== false\">\r\n            <input\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else>\r\n            <span>{{ props.row[props.column.field] }}</span>\r\n          </template>\r\n        </template>\r\n      </vue-good-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n/* .table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  position: relative;\r\n  margin-top: \"200px\";\r\n  height: 100%;\r\n  padding: 0px 0px;\r\n} */\r\n\r\n.vgt-table th { /* table header */\r\n  padding: 0.5px 5px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n  color: #333;\r\n}\r\n\r\ntable.vgt-table td {/* table row / cell */\r\n  padding: 0.5px 5px;\r\n}\r\n\r\n.checkbox-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 75%;\r\n  padding: 1px;\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\ninput {\r\n  padding: 0px 0px;\r\n  font-size: 12px; /* font size */\r\n  width: 100%;\r\n  margin: 0px 0px;\r\n  border: none !important;\r\n  outline: none !important;\r\n  height: 100%;\r\n}\r\n\r\n.vgt-wrap__footer .footer__row-count__label,\r\n.vgt-wrap__footer .footer__row-count__select,\r\n.vgt-wrap__footer .footer__navigation__page-btn span,\r\n.vgt-wrap__footer .footer__navigation__page-info span {\r\n    font-size: 12px;\r\n}\r\n\r\n.multiselect__content-wrapper {\r\n  position:absolute !important;\r\n  z-index: 9999 !important;\r\n  min-height: 100px !important;\r\n  max-height: 100px !important;\r\n  overflow-y: auto !important;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n\r\nbutton {\r\n  padding: 3px 8px;\r\n  margin: 5px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n  border-radius: 0.25rem;\r\n}\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n</style>\r\n"],"names":["apiUrl","customerUrl","locationUrl","marketingData","ref","marketingDataInsert","customers","locations","filteredData","columns","loading","error","secondColumnWidth","changedRows","changedRowsInsert","checkboxFields","fieldsToRemove","dateFields","fetchCustomerData","response","axios","item","err","fetchLocationData","fetchMarketingData","key","updateColumnWidths","addNewRow","newRow","col","trackUpload","row","field","upload","uploads","uploadItem","prop","trackChanges","saveChanges","updates","updatedItem","exportToExcel","worksheet","XLSX.utils","workbook","XLSX.writeFile","onTableFiltered","filteredRows","secondCol","onMounted","onBeforeUnmount"],"mappings":"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"}