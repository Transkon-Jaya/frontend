{"version":3,"file":"BigTable-B2S38-Dc.js","sources":["../../src/components/BigTable.vue"],"sourcesContent":["<script setup>\r\nimport { ref, watch, computed, onMounted, onBeforeUnmount } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { VueGoodTable } from \"vue-good-table-next\";\r\nimport \"vue-good-table-next/dist/vue-good-table-next.css\";\r\nimport Multiselect from \"vue-multiselect\";\r\nimport \"vue-multiselect/dist/vue-multiselect.css\";\r\nimport * as XLSX from \"xlsx\";\r\nimport VButton from '@/components/Button.vue'\r\n\r\nimport { useUserStore} from \"@/stores/user.js\";\r\nimport { log } from \"@/utils/logger\";\r\nconst userData = useUserStore();\r\n\r\nconst props = defineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true,\r\n  },\r\n  urls: {\r\n    type: Object,\r\n    required: true,\r\n  },\r\n  fields: {\r\n    type: Object,\r\n    required: true,\r\n  },\r\n  canInsert: {\r\n    type: Boolean,\r\n    default: true\r\n  },\r\n  canUpdate: {\r\n    type: Boolean,\r\n    default: true\r\n  }\r\n});\r\n\r\nconst settings = ref();\r\nconst urls = ref();\r\nconst fields = ref();\r\nconst canInsert = ref();\r\nconst canUpdate = ref();\r\n\r\nsettings.value = props.settings;\r\nurls.value = props.urls;\r\nfields.value = props.fields;\r\ncanInsert.value = props.canInsert;\r\ncanUpdate.value = props.canUpdate;\r\n\r\nconst size = settings.value.size ?? [10,20,100];\r\n\r\nif (Array.isArray(fields.value.toRemove)) {\r\n  fields.value.toRemove.push(\"isEditing\", \"filterable\", \"vgt_id\", \"originalIndex\");\r\n} else {\r\n  fields.value.toRemove = [\"isEditing\", \"filterable\", \"vgt_id\", \"originalIndex\"];\r\n}\r\n\r\nconst datas = ref({data : [], dropdowns : []});\r\n\r\nconst columns = ref([]);\r\nlet insertColumns = ref([]);\r\n\r\nconst DataInsert = ref([]);\r\nconst filteredData = ref([]); // Store filtered data\r\nconst loading = ref(true);\r\nconst error = ref(null);\r\nconst firstColumnWidth = ref(\"150px\");\r\nconst secondColumnWidth = ref(\"100px\");\r\nconst changedRows = ref(new Map()); // Store changed rows\r\nconst changedRowsInsert = ref(new Map());\r\n\r\nlet fullUrl = urls.value.data;\r\n\r\nif (urls.value.params) {\r\n  const queryString = new URLSearchParams(urls.value.params).toString();\r\n  fullUrl += `?${queryString}`;\r\n}\r\n\r\nconst fetchAllDropdowns = async () => {\r\n  const dropdownKeys = Object.keys(urls.value.dropdowns);\r\n\r\n  for (const key of dropdownKeys) {\r\n    const url = urls.value.dropdowns[key].url;\r\n    const valueField = urls.value.dropdowns[key].valueField;\r\n    const labelField = urls.value.dropdowns[key].labelField;\r\n    \r\n    try {\r\n      const response = await axios.get(url);\r\n\r\n    //   datas.value.dropdowns[labelField] = response.data.map(item => ({\r\n    //     value: item[valueField] ?? \"\",\r\n    //   }));\r\n      datas.value.dropdowns[labelField] = response.data.map((item) => item[valueField] ?? \"\");\r\n    } catch (error) {\r\n      console.error(`Failed to fetch ${key} data from ${url}:`, error);\r\n    }\r\n  }\r\n//   console.log(\"Fetched dropdown data:\", Object.keys(datas.value.dropdowns));\r\n};\r\n\r\nconst fetchData = async () => {\r\n  try {\r\n    loading.value = true;\r\n    const response = await axios.get(fullUrl);\r\n    if (response.data.length > 0) {\r\n      const priorityList = fields.value.priority || [];\r\n      const toRemoveList = fields.value.toRemove || [];\r\n      const unpriorityList = fields.value.unpriority || [];\r\n\r\n      const allKeys = Object.keys(response.data[0]);\r\n\r\n      // 1. Prioritized keys\r\n      const prioritizedKeys = priorityList.filter(\r\n        (key) => allKeys.includes(key) &&\r\n                key !== fields.value.firstCol.field &&\r\n                !toRemoveList.includes(key) &&\r\n                !unpriorityList.includes(key)\r\n      );\r\n\r\n      // 2. Unprioritized keys (explicitly listed in unpriority)\r\n      const unprioritizedKeys = unpriorityList.filter(\r\n        (key) => allKeys.includes(key) &&\r\n                key !== fields.value.firstCol.field &&\r\n                !toRemoveList.includes(key) &&\r\n                !prioritizedKeys.includes(key)\r\n      );\r\n\r\n      // 3. Other keys (the rest)\r\n      const otherKeys = allKeys.filter(\r\n        (key) =>\r\n          !prioritizedKeys.includes(key) &&\r\n          !unprioritizedKeys.includes(key) &&\r\n          key !== fields.value.firstCol.field &&\r\n          !toRemoveList.includes(key) &&\r\n          !fields.value.hidden.includes(key)\r\n      );\r\n\r\n      // Final order: priority → other → unpriority\r\n      const orderedKeys = [...prioritizedKeys, ...otherKeys, ...unprioritizedKeys];\r\n        columns.value = [\r\n        {\r\n            label: fields.value.firstCol.label,\r\n            field: fields.value.firstCol.field,\r\n            width: `${fields.value.firstCol.width ?? 80}px`,\r\n            minWidth: \"100px\",\r\n            sortable: true,\r\n            filterable: false,\r\n            editable: false,\r\n            frozen: true,\r\n            type: fields.value.firstCol.type,\r\n            headerClass: \"custom-header\",\r\n        },\r\n        ...(fields.value.status\r\n              ? [\r\n                  {\r\n                    label: fields.value.status.label ?? fields.value.status.field.toUpperCase(),\r\n                    field: fields.value.status.field,\r\n                    sortable: false,\r\n                    filterable: true,\r\n                    filterOptions: { enabled: true, placeholder: 'status' },\r\n                    editable: false,\r\n                    type: \"text\",\r\n                    width: `${fields.value.status.width ?? 120}px`,\r\n                    minWidth: \"100px\",\r\n                    headerClass: \"custom-header\",\r\n                  }\r\n                ]\r\n              : []\r\n            ),\r\n        ...orderedKeys.map((key) => {\r\n            const isCheckbox = fields.value.checkbox.includes(key);\r\n\r\n            const isNumeric =\r\n                !isCheckbox &&\r\n                response.data.every((row) => {\r\n                const value = row[key];\r\n                return !isNaN(Number(value));\r\n                });\r\n            const columnDef = fields.value?.columns?.find(col => col.column === key);\r\n\r\n            return {\r\n              label: key.replace(/_/g, \" \").toUpperCase(),\r\n              field: key,\r\n              sortable: true,\r\n              filterable: true,\r\n              filterOptions: { enabled: true, placeholder: `${key}` },\r\n              editable: canUpdate.value && !(fields.value?.uneditable?.includes?.(key)),\r\n              type: isCheckbox ? \"checkbox\" : isNumeric ? \"number\" : \"text\",\r\n              width: `${columnDef?.width ?? (\r\n                Math.max(\r\n                  ...response.data.map(item => String(item?.[key] ?? \"\").length),\r\n                  key.length\r\n                ) * size[0] + size[1]\r\n              )}px`,\r\n              minWidth: `${columnDef?.minWidth ?? size[2]}px`,\r\n              headerClass: \"custome-header\",\r\n            };\r\n            }),\r\n        ];\r\n    }\r\n    insertColumns = computed(() =>\r\n        columns.value.map(col => ({\r\n            ...col,\r\n            filterOptions: { enabled: false },\r\n            sortable: false,\r\n        }))\r\n    );\r\n    datas.value.data = response.data.map((item) => ({\r\n      ...item,\r\n      filterable: true,\r\n    }));\r\n    datas.value.data = response.data.map((item) => {\r\n        const formatted = {};\r\n\r\n        for (const key in item) {\r\n            const value = item[key];\r\n\r\n            if (value === null || value === undefined) {\r\n            formatted[key] = value;\r\n            } else {\r\n            const num = Number(value);\r\n            formatted[key] = isNaN(num) ? String(value) : num;\r\n            }\r\n        }\r\n        if (fields.value.status && fields.value.status.calculate) {\r\n          formatted.status = fields.value.status.calculate(item);\r\n        }\r\n\r\n        // Add your extra field like this\r\n        formatted.filterable = true;\r\n\r\n        return formatted;\r\n    });\r\n\r\n\r\n    filteredData.value = [...datas.value.data]; // Initialize filtered data\r\n\r\n    setTimeout(updateColumnWidths, 500);\r\n  } catch (err) {\r\n    error.value = \"Failed to fetch data\";\r\n    console.error(err);\r\n  } finally {\r\n    loading.value = false;\r\n    addNewRow();\r\n  }\r\n  // console.log(datas.value);\r\n};\r\n\r\nconst addNewRow = () => {\r\n  const newRow = {};\r\n  columns.value.forEach((col) => {\r\n    newRow[col.field] = fields.value.checkbox.includes(col.field) ? 0 : \"\";\r\n  });\r\n  newRow.id = DataInsert.value.length + 1;\r\n  DataInsert.value.push(newRow);\r\n};\r\n\r\n// Track changes\r\nconst trackUpload = (row, field) => {\r\n  if (!changedRowsInsert.value.has(row.id)) {\r\n    changedRowsInsert.value.set(row.id, { ...row });\r\n  } else {\r\n    changedRowsInsert.value.get(row.id)[field] = row[field];\r\n  }\r\n};\r\n\r\nconst upload = async () => {\r\n  try {\r\n    const uploads = Array.from(changedRowsInsert.value.values());\r\n    for (const item of uploads) {\r\n      const uploadItem = { ...item };\r\n      for (const prop of fields.value.toRemove) {\r\n        delete uploadItem[prop];\r\n      }\r\n      delete uploadItem[\"id\"];\r\n      // console.log(uploadItem);\r\n      fields.value.date.forEach((key) => {\r\n        if (\r\n          uploadItem[key] !== null &&\r\n          uploadItem[key] !== undefined &&\r\n          !isNaN(Date.parse(uploadItem[key]))\r\n        ) {\r\n          uploadItem[key] = new Date(uploadItem[key])\r\n            .toISOString()\r\n            .split(\"T\")[0]; // Format: YYYY-MM-DD\r\n        }\r\n      });\r\n      Object.keys(uploadItem).forEach((key) => {\r\n        if (uploadItem[key] === \"\") {\r\n          uploadItem[key] = null;\r\n        }\r\n      });\r\n      await axios.post(urls.value.data, uploadItem);\r\n      await fetchData();\r\n    //   alert(\"Data uploaded Successfully\");\r\n      DataInsert.value = [];\r\n      changedRowsInsert.value.clear();\r\n      window.location.reload();\r\n    }\r\n  } catch (err) {\r\n    console.error(\"Failed to upload: \", err);\r\n    alert(\"Failed to upload\");\r\n  }\r\n};\r\n\r\n// For updates\r\nconst trackChanges = (row, field) => {\r\n  if (!changedRows.value.has(row.id)) {\r\n    changedRows.value.set(row.id, { ...row });\r\n  } else {\r\n    changedRows.value.get(row.id)[field] = row[field];\r\n  }\r\n};\r\n// Save all changes (updates)\r\nconst saveChanges = async () => {\r\n  const updates = Array.from(changedRows.value.values());\r\n  const failedUpdates = [];\r\n\r\n  for (const item of updates) {\r\n    try {\r\n      const updatedItem = Object.fromEntries(\r\n        Object.entries(item).filter(\r\n          ([key]) =>\r\n            !fields.value.exclude.includes(key) &&\r\n            !fields.value.toRemove.includes(key)\r\n        )\r\n      );\r\n\r\n      fields.value.date.forEach((key) => {\r\n        if (\r\n          updatedItem[key] !== null &&\r\n          updatedItem[key] !== undefined &&\r\n          !isNaN(Date.parse(updatedItem[key]))\r\n        ) {\r\n          updatedItem[key] = new Date(updatedItem[key])\r\n            .toISOString()\r\n            .split(\"T\")[0];\r\n        }\r\n      });\r\n\r\n      await axios.put(urls.value.data, updatedItem);\r\n    } catch (err) {\r\n      console.error(\"Failed to update row:\", item.id, err);\r\n      failedUpdates.push(item.id);\r\n    }\r\n  }\r\n\r\n  if (failedUpdates.length > 0) {\r\n    alert(`Some rows failed to save: ${failedUpdates.join(\", \")}`);\r\n  } else {\r\n    alert(\"Changes saved successfully!\");\r\n    window.location.reload();\r\n    changedRows.value.clear();\r\n  }\r\n};\r\n\r\n\r\n\r\n// Export to Excel (filtered data only)\r\nconst exportToExcel = () => {\r\n  const worksheet = XLSX.utils.json_to_sheet(filteredData.value);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Marketing Data\");\r\n  XLSX.writeFile(workbook, \"Filtered_Marketing_Data.xlsx\");\r\n};\r\n\r\n// Update filtered data when table is filtered\r\nconst onTableFiltered = (filteredRows) => {\r\n  filteredData.value = filteredRows;\r\n  log(\"Length : \" + filteredData.value.length);\r\n  log(\"onTableFiltered : \", filteredData.value);\r\n  // console.log(\"F Len : \", filteredData.value.length, \" | M Len : \", datas.value.data.length);\r\n};\r\n\r\n// Dynamic Column Width Calculation\r\nconst updateColumnWidths = () => {\r\n  const secondCol = document.querySelector(\".vue-good-table th:nth-child(1)\");\r\n  if (secondCol) secondColumnWidth.value = secondCol.offsetWidth + \"px\";\r\n  document.documentElement.style.setProperty(\r\n    \"--second-column-width\",\r\n    secondColumnWidth.value\r\n  );\r\n};\r\n\r\nconst getLoading = () => {\r\n  return loading.value;\r\n}\r\n\r\ndefineExpose({\r\n  datas,\r\n  loading,\r\n  getLoading\r\n});\r\n\r\nonMounted(() => {\r\n    fetchAllDropdowns();\r\n    fetchData();\r\n    // console.log(datas.value.dropdowns);\r\n\r\n  window.addEventListener(\"resize\", updateColumnWidths);\r\n});\r\n\r\nonBeforeUnmount(() => {\r\n  window.removeEventListener(\"resize\", updateColumnWidths);\r\n});\r\n\r\nconst formatDate = (value) => {\r\n  if (value) {\r\n    const [date, time] = value.split(' ');  // Split the date and time\r\n    const formattedDate = `${date}T${time.slice(0, 5)}`;  // Extract 'YYYY-MM-DDTHH:MM'\r\n    return formattedDate; // For example: '2025-04-22T11:41'\r\n  }\r\n  return ''; // Return empty string if value is null or undefined\r\n};\r\nconst unformatDate = (value) => {\r\n    if (value) {\r\n      const [date, time] = value.split('T');\r\n      const formattedTime = `${time}:00`;  // Add seconds to the time\r\n      return `${date} ${formattedTime}`; // For example: '2025-04-22 11:41:00'\r\n    }\r\n    return ''; // Return empty string if value is null or undefined\r\n};\r\nconst onDateChanges = (event, row, field) => {\r\n    row[field] = unformatDate(event.target.value); // Update value in the row\r\n    trackChanges(row, field); // Track the changes\r\n};\r\nconst onDateUpload = (event, row, field) => {\r\n    row[field] = unformatDate(event.target.value); // Update value in the row\r\n    trackUpload(row, field); // Track the changes\r\n};\r\nconst showForm = ref(false);\r\n</script>\r\n\r\n<template>\r\n  <div class=\"container-global mb-4\">\r\n    <h2>{{ settings.title }}</h2>\r\n    <button v-if=\"canInsert\" @click=\"upload\">Upload</button>\r\n    <button v-if=\"canInsert\" @click=\"addNewRow\">Add New Row</button>\r\n    <p v-if=\"loading\">Loading...</p>\r\n    <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n    <!-- INSERT TABLE -->\r\n    <div class=\"table-container\">\r\n      <vue-good-table\r\n        v-if=\"!loading && !error && canInsert\"\r\n        :columns=\"insertColumns\"\r\n        :rows=\"DataInsert\"\r\n        :search-options=\"{ enabled: false }\"\r\n        :sort-options=\"{ enabled: false }\"\r\n        :line-numbers=\"false\"\r\n        :select-options=\"{ enabled: false }\"\r\n        :pagination-options=\"{ enabled: false }\"\r\n        style=\"overflow-x: auto\"\r\n      >\r\n        <template v-slot:table-row=\"props\">\r\n          <template v-if=\"fields.checkbox.includes(props.column.field)\">\r\n            <div class=\"checkbox-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                name=\"custom-checkbox\"\r\n                class=\"custom-checkbox\"\r\n                :checked=\"props.row[props.column.field] == 1\"\r\n                @click=\"(event) => {\r\n                    props.row[props.column.field] = event.target.checked ? 1 : 0;\r\n                    trackUpload(props.row, props.column.field);\r\n                  }\"\r\n                />\r\n            </div>\r\n          </template>\r\n          <template v-else-if=\"Object.keys(datas.dropdowns).includes(props.column.field)\">\r\n            <Multiselect\r\n                v-model=\"props.row[props.column.field]\"\r\n                :options=\"datas.dropdowns[props.column.field] || []\"\r\n                :searchable=\"true\"\r\n                :allow-empty=\"false\"\r\n                :placeholder=\"`Select ${props.column.field}`\"\r\n                @update:modelValue=\"trackUpload?.(props.row, props.column.field) || trackChanges?.(props.row, props.column.field)\"\r\n            />\r\n            </template>\r\n          <template v-else-if=\"fields.date.includes(props.column.field)\">\r\n            <input\r\n              type=\"date\"\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"fields.datetime.includes(props.column.field)\">\r\n            <input\r\n              type=\"datetime-local\"\r\n              :value=\"formatDate(props.row[props.column.field])\"\r\n              @input=\"onDateUpload($event, props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"props.column.editable !== false\">\r\n            <input\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackUpload(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else>\r\n            <span>{{ props.row[props.column.field] }}</span>\r\n          </template>\r\n        </template>\r\n      </vue-good-table>\r\n    </div>\r\n  <div class=\"mb-2\">\r\n    <VButton @click=\"exportToExcel\"type=\"submit\" color=\"danger\" size=\"md\" :block=\"false\" class=\"me-2\">Export to Excel</VButton>\r\n   <!-- <VButton @click=\"showForm = true\" color=\"danger\" class=\"me-2\">Add New</VButton> -->\r\n    <VButton v-if=\"canUpdate\" @click=\"saveChanges\" type=\"submit\" color=\"danger\" size=\"md\" :block=\"false\">Save Updates</VButton>\r\n  </div> \r\n <!-- <div v-if=\"showForm\" class=\"modal-form\">\r\n  <button class=\"close-btn\" @click=\"showForm = false\">✖</button>\r\n  <MiniForm\r\n    v-if=\"settings.canInsert\"\r\n      v-model=\"formData\"\r\n      :fields=\"fields\"\r\n      :urls=\"urls\"\r\n    />\r\n</div>-->\r\n\r\n    <!-- UPDATE TABLE -->\r\n    <div class=\"table-container\">\r\n      <vue-good-table\r\n        v-if=\"!loading && !error\"\r\n        :columns=\"columns\"\r\n        :rows=\"datas.data\"\r\n        :pagination-options=\"{ enabled: true, mode: 'pages', perPage: 10 }\"\r\n        :search-options=\"{ enabled: true }\"\r\n        :sort-options=\"{ enabled: true }\"\r\n        style=\"overflow-x: auto\"\r\n        @on-filtered=\"onTableFiltered\"\r\n        styleClass=\"vgt-table striped\"\r\n      >\r\n        <template v-slot:table-row=\"props\">\r\n          <template v-if=\"fields.checkbox.includes(props.column.field)\">\r\n            <div class=\"checkbox-container\">\r\n              <input\r\n                type=\"checkbox\"\r\n                class=\"custom-checkbox\"\r\n                :checked=\"props.row[props.column.field] == 1\"\r\n                @click=\"(event) => {\r\n                    props.row[props.column.field] = event.target.checked ? 1 : 0;\r\n                    trackChanges(props.row, props.column.field);\r\n                  }\"\r\n                />\r\n            </div>\r\n          </template>\r\n          <template v-else-if=\"Object.keys(datas.dropdowns).includes(props.column.field) && canUpdate\">\r\n            <Multiselect\r\n                v-model=\"props.row[props.column.field]\"\r\n                :options=\"datas.dropdowns[props.column.field] || []\"\r\n                :searchable=\"true\"\r\n                :allow-empty=\"false\"\r\n                :placeholder=\"`Select ${props.column.field}`\"\r\n\r\n                noResultsText=\"No matching results\"\r\n                @update:modelValue=\"trackUpload?.(props.row, props.column.field) || trackChanges?.(props.row, props.column.field)\"\r\n            />\r\n            </template>\r\n          <!-- <template v-else-if=\"props.column.field === 'name_customer'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"datas.dropdowns.name_customer || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"false\"\r\n              placeholder=\"Select customer...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"props.column.field === 'location'\">\r\n            <Multiselect\r\n              v-model=\"props.row[props.column.field]\"\r\n              :options=\"datas.dropdowns.location || []\"\r\n              :searchable=\"true\"\r\n              :allow-empty=\"true\"\r\n              placeholder=\"Select location...\"\r\n              noResultsText=\"No matching customers found\"\r\n              @update:modelValue=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template> -->\r\n          <template v-else-if=\"fields.date.includes(props.column.field)\">\r\n            <input\r\n              type=\"date\"\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else-if=\"fields.datetime.includes(props.column.field)\">\r\n            <input\r\n              type=\"datetime-local\"\r\n              :value=\"formatDate(props.row[props.column.field])\"\r\n              @input=\"onDateChanges($event, props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n\r\n          <template v-else-if=\"props.column.editable !== false\">\r\n            <input\r\n              v-model=\"props.row[props.column.field]\"\r\n              @input=\"trackChanges(props.row, props.column.field)\"\r\n            />\r\n          </template>\r\n          <template v-else>\r\n            <span>{{ props.row[props.column.field] }}</span>\r\n          </template>\r\n        </template>\r\n      </vue-good-table>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.card{\r\n  border: #ffffff;\r\n}\r\n/* .table-container {\r\n  width: 100%;\r\n  overflow-x: auto;\r\n  max-width: 100%;\r\n  position: relative;\r\n  margin-top: \"200px\";\r\n  height: 100%;\r\n  padding: 0px 0px;\r\n} */\r\n\r\n.vgt-table th { /* table header */\r\n  padding: 0.5px 5px;\r\n  font-size: 13px;\r\n  font-weight: bold;\r\n  text-align: center;\r\n}\r\n\r\ntable.vgt-table td {/* table row / cell */\r\n  padding: 5px 5px;\r\n}\r\n\r\n.checkbox-container {\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  height: 75%;\r\n  padding: 1px;\r\n}\r\n.checkbox{\r\n  color:#000000\r\n}\r\n\r\n.error {\r\n  color: red;\r\n}\r\ninput {\r\n  padding: 0px 0px;\r\n  font-size: 12px; /* font size */\r\n  width: 100%;\r\n  margin: 0px 0px;\r\n  border: none !important;\r\n  outline: none !important;\r\n  height: 100%;\r\n}\r\n\r\n.vgt-wrap__footer .footer__row-count__label,\r\n.vgt-wrap__footer .footer__row-count__select,\r\n.vgt-wrap__footer .footer__navigation__page-btn span,\r\n.vgt-wrap__footer .footer__navigation__page-info span {\r\n    font-size: 12px;\r\n}\r\n\r\n.multiselect__content-wrapper {\r\n  position:absolute !important;\r\n  z-index: 9999 !important;\r\n  min-height: 100px !important;\r\n  max-height: 100px !important;\r\n  overflow-y: auto !important;\r\n  box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.2);\r\n}\r\n.custom-checkbox {\r\n  appearance: none;\r\n  -webkit-appearance: none;\r\n  width: 16px;\r\n  height: 16px;\r\n  border: 2px solid #db0000;\r\n  border-radius: 3px;\r\n  cursor: pointer;\r\n  position: relative;\r\n  background-color: #ebe1e1;\r\n}\r\n\r\n.custom-checkbox:checked {\r\n  background-color: #dc3545;\r\n  border-color: #ffffff;\r\n}\r\n\r\n.custom-checkbox:checked::after {\r\n  content: '✔';\r\n  color: rgb(255, 255, 255);\r\n  font-size: 12px;\r\n  position: center;\r\n  left: 2px;\r\n  top: -1px;\r\n}\r\n.vgt-left-align {\r\n  font-size: 12px;\r\n  color: #1a1a1a !important;\r\n}\r\n.vgt-right-align {\r\n  font-size: 12px;\r\n  color: #1a1a1a !important;\r\n}\r\n\r\n.modal-form {\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  width: 100vw;\r\n  height: 100vh;\r\n  background: rgba(0, 0, 0, 0.4); /* backdrop */\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  z-index: 1000;\r\n}\r\n\r\n.modal-form > * {\r\n  background: white;\r\n  padding: 20px;\r\n  border-radius: 8px;\r\n  max-height: 90vh;\r\n  overflow-y: auto;\r\n  width: 90%;\r\n  max-width: 800px;\r\n}\r\n\r\n.close-btn {\r\n  position: absolute;\r\n  top: 15px;\r\n  right: 20px;\r\n  background: none;\r\n  border: none;\r\n  font-size: 22px;\r\n  color: white;\r\n  cursor: pointer;\r\n}\r\n\r\n/* Light Mode (default) */\r\n.table-container {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.vgt-table {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.vgt-table th,\r\n.vgt-table td {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n/* Dark Mode */\r\n.dark .table-container {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dark .vgt-table {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dark .vgt-table th,\r\n.dark .vgt-table td {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dark .vgt-left-align,\r\n.dark .vgt-right-align {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n/* Footer */\r\n.dark .vgt-wrap__footer {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n.dark .vgt-wrap__footer select {\r\n  background-color: #fff;\r\n  color: #000;\r\n}\r\n\r\n</style>\r\n"],"names":["useUserStore","props","__props","settings","ref","urls","fields","canInsert","canUpdate","size","datas","columns","insertColumns","DataInsert","filteredData","loading","error","secondColumnWidth","changedRows","changedRowsInsert","fullUrl","queryString","fetchAllDropdowns","dropdownKeys","key","url","valueField","labelField","response","axios","item","fetchData","priorityList","toRemoveList","unpriorityList","allKeys","prioritizedKeys","unprioritizedKeys","otherKeys","orderedKeys","isCheckbox","isNumeric","row","value","columnDef","_b","_a","col","_e","_d","_c","computed","formatted","num","updateColumnWidths","err","addNewRow","newRow","trackUpload","field","upload","uploads","uploadItem","prop","trackChanges","saveChanges","updates","failedUpdates","updatedItem","exportToExcel","worksheet","XLSX.utils","workbook","XLSX.writeFile","onTableFiltered","filteredRows","log","secondCol","__expose","onMounted","onBeforeUnmount","formatDate","date","time","unformatDate","formattedTime","onDateChanges","event","onDateUpload"],"mappings":"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"}