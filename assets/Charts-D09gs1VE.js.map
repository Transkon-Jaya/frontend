{"version":3,"file":"Charts-D09gs1VE.js","sources":["../../node_modules/@kurkle/color/dist/color.esm.js","../../node_modules/chart.js/dist/chunks/helpers.dataset.js","../../node_modules/chart.js/dist/chart.js","../../node_modules/chartjs-plugin-datalabels/dist/chartjs-plugin-datalabels.esm.js","../../src/components/Charts.vue"],"sourcesContent":["/*!\n * @kurkle/color v0.3.4\n * https://github.com/kurkle/color#readme\n * (c) 2024 Jukka Kurkela\n * Released under the MIT License\n */\nfunction round(v) {\n  return v + 0.5 | 0;\n}\nconst lim = (v, l, h) => Math.max(Math.min(v, h), l);\nfunction p2b(v) {\n  return lim(round(v * 2.55), 0, 255);\n}\nfunction b2p(v) {\n  return lim(round(v / 2.55), 0, 100);\n}\nfunction n2b(v) {\n  return lim(round(v * 255), 0, 255);\n}\nfunction b2n(v) {\n  return lim(round(v / 2.55) / 100, 0, 1);\n}\nfunction n2p(v) {\n  return lim(round(v * 100), 0, 100);\n}\n\nconst map$1 = {0: 0, 1: 1, 2: 2, 3: 3, 4: 4, 5: 5, 6: 6, 7: 7, 8: 8, 9: 9, A: 10, B: 11, C: 12, D: 13, E: 14, F: 15, a: 10, b: 11, c: 12, d: 13, e: 14, f: 15};\nconst hex = [...'0123456789ABCDEF'];\nconst h1 = b => hex[b & 0xF];\nconst h2 = b => hex[(b & 0xF0) >> 4] + hex[b & 0xF];\nconst eq = b => ((b & 0xF0) >> 4) === (b & 0xF);\nconst isShort = v => eq(v.r) && eq(v.g) && eq(v.b) && eq(v.a);\nfunction hexParse(str) {\n  var len = str.length;\n  var ret;\n  if (str[0] === '#') {\n    if (len === 4 || len === 5) {\n      ret = {\n        r: 255 & map$1[str[1]] * 17,\n        g: 255 & map$1[str[2]] * 17,\n        b: 255 & map$1[str[3]] * 17,\n        a: len === 5 ? map$1[str[4]] * 17 : 255\n      };\n    } else if (len === 7 || len === 9) {\n      ret = {\n        r: map$1[str[1]] << 4 | map$1[str[2]],\n        g: map$1[str[3]] << 4 | map$1[str[4]],\n        b: map$1[str[5]] << 4 | map$1[str[6]],\n        a: len === 9 ? (map$1[str[7]] << 4 | map$1[str[8]]) : 255\n      };\n    }\n  }\n  return ret;\n}\nconst alpha = (a, f) => a < 255 ? f(a) : '';\nfunction hexString(v) {\n  var f = isShort(v) ? h1 : h2;\n  return v\n    ? '#' + f(v.r) + f(v.g) + f(v.b) + alpha(v.a, f)\n    : undefined;\n}\n\nconst HUE_RE = /^(hsla?|hwb|hsv)\\(\\s*([-+.e\\d]+)(?:deg)?[\\s,]+([-+.e\\d]+)%[\\s,]+([-+.e\\d]+)%(?:[\\s,]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction hsl2rgbn(h, s, l) {\n  const a = s * Math.min(l, 1 - l);\n  const f = (n, k = (n + h / 30) % 12) => l - a * Math.max(Math.min(k - 3, 9 - k, 1), -1);\n  return [f(0), f(8), f(4)];\n}\nfunction hsv2rgbn(h, s, v) {\n  const f = (n, k = (n + h / 60) % 6) => v - v * s * Math.max(Math.min(k, 4 - k, 1), 0);\n  return [f(5), f(3), f(1)];\n}\nfunction hwb2rgbn(h, w, b) {\n  const rgb = hsl2rgbn(h, 1, 0.5);\n  let i;\n  if (w + b > 1) {\n    i = 1 / (w + b);\n    w *= i;\n    b *= i;\n  }\n  for (i = 0; i < 3; i++) {\n    rgb[i] *= 1 - w - b;\n    rgb[i] += w;\n  }\n  return rgb;\n}\nfunction hueValue(r, g, b, d, max) {\n  if (r === max) {\n    return ((g - b) / d) + (g < b ? 6 : 0);\n  }\n  if (g === max) {\n    return (b - r) / d + 2;\n  }\n  return (r - g) / d + 4;\n}\nfunction rgb2hsl(v) {\n  const range = 255;\n  const r = v.r / range;\n  const g = v.g / range;\n  const b = v.b / range;\n  const max = Math.max(r, g, b);\n  const min = Math.min(r, g, b);\n  const l = (max + min) / 2;\n  let h, s, d;\n  if (max !== min) {\n    d = max - min;\n    s = l > 0.5 ? d / (2 - max - min) : d / (max + min);\n    h = hueValue(r, g, b, d, max);\n    h = h * 60 + 0.5;\n  }\n  return [h | 0, s || 0, l];\n}\nfunction calln(f, a, b, c) {\n  return (\n    Array.isArray(a)\n      ? f(a[0], a[1], a[2])\n      : f(a, b, c)\n  ).map(n2b);\n}\nfunction hsl2rgb(h, s, l) {\n  return calln(hsl2rgbn, h, s, l);\n}\nfunction hwb2rgb(h, w, b) {\n  return calln(hwb2rgbn, h, w, b);\n}\nfunction hsv2rgb(h, s, v) {\n  return calln(hsv2rgbn, h, s, v);\n}\nfunction hue(h) {\n  return (h % 360 + 360) % 360;\n}\nfunction hueParse(str) {\n  const m = HUE_RE.exec(str);\n  let a = 255;\n  let v;\n  if (!m) {\n    return;\n  }\n  if (m[5] !== v) {\n    a = m[6] ? p2b(+m[5]) : n2b(+m[5]);\n  }\n  const h = hue(+m[2]);\n  const p1 = +m[3] / 100;\n  const p2 = +m[4] / 100;\n  if (m[1] === 'hwb') {\n    v = hwb2rgb(h, p1, p2);\n  } else if (m[1] === 'hsv') {\n    v = hsv2rgb(h, p1, p2);\n  } else {\n    v = hsl2rgb(h, p1, p2);\n  }\n  return {\n    r: v[0],\n    g: v[1],\n    b: v[2],\n    a: a\n  };\n}\nfunction rotate(v, deg) {\n  var h = rgb2hsl(v);\n  h[0] = hue(h[0] + deg);\n  h = hsl2rgb(h);\n  v.r = h[0];\n  v.g = h[1];\n  v.b = h[2];\n}\nfunction hslString(v) {\n  if (!v) {\n    return;\n  }\n  const a = rgb2hsl(v);\n  const h = a[0];\n  const s = n2p(a[1]);\n  const l = n2p(a[2]);\n  return v.a < 255\n    ? `hsla(${h}, ${s}%, ${l}%, ${b2n(v.a)})`\n    : `hsl(${h}, ${s}%, ${l}%)`;\n}\n\nconst map = {\n\tx: 'dark',\n\tZ: 'light',\n\tY: 're',\n\tX: 'blu',\n\tW: 'gr',\n\tV: 'medium',\n\tU: 'slate',\n\tA: 'ee',\n\tT: 'ol',\n\tS: 'or',\n\tB: 'ra',\n\tC: 'lateg',\n\tD: 'ights',\n\tR: 'in',\n\tQ: 'turquois',\n\tE: 'hi',\n\tP: 'ro',\n\tO: 'al',\n\tN: 'le',\n\tM: 'de',\n\tL: 'yello',\n\tF: 'en',\n\tK: 'ch',\n\tG: 'arks',\n\tH: 'ea',\n\tI: 'ightg',\n\tJ: 'wh'\n};\nconst names$1 = {\n\tOiceXe: 'f0f8ff',\n\tantiquewEte: 'faebd7',\n\taqua: 'ffff',\n\taquamarRe: '7fffd4',\n\tazuY: 'f0ffff',\n\tbeige: 'f5f5dc',\n\tbisque: 'ffe4c4',\n\tblack: '0',\n\tblanKedOmond: 'ffebcd',\n\tXe: 'ff',\n\tXeviTet: '8a2be2',\n\tbPwn: 'a52a2a',\n\tburlywood: 'deb887',\n\tcaMtXe: '5f9ea0',\n\tKartYuse: '7fff00',\n\tKocTate: 'd2691e',\n\tcSO: 'ff7f50',\n\tcSnflowerXe: '6495ed',\n\tcSnsilk: 'fff8dc',\n\tcrimson: 'dc143c',\n\tcyan: 'ffff',\n\txXe: '8b',\n\txcyan: '8b8b',\n\txgTMnPd: 'b8860b',\n\txWay: 'a9a9a9',\n\txgYF: '6400',\n\txgYy: 'a9a9a9',\n\txkhaki: 'bdb76b',\n\txmagFta: '8b008b',\n\txTivegYF: '556b2f',\n\txSange: 'ff8c00',\n\txScEd: '9932cc',\n\txYd: '8b0000',\n\txsOmon: 'e9967a',\n\txsHgYF: '8fbc8f',\n\txUXe: '483d8b',\n\txUWay: '2f4f4f',\n\txUgYy: '2f4f4f',\n\txQe: 'ced1',\n\txviTet: '9400d3',\n\tdAppRk: 'ff1493',\n\tdApskyXe: 'bfff',\n\tdimWay: '696969',\n\tdimgYy: '696969',\n\tdodgerXe: '1e90ff',\n\tfiYbrick: 'b22222',\n\tflSOwEte: 'fffaf0',\n\tfoYstWAn: '228b22',\n\tfuKsia: 'ff00ff',\n\tgaRsbSo: 'dcdcdc',\n\tghostwEte: 'f8f8ff',\n\tgTd: 'ffd700',\n\tgTMnPd: 'daa520',\n\tWay: '808080',\n\tgYF: '8000',\n\tgYFLw: 'adff2f',\n\tgYy: '808080',\n\thoneyMw: 'f0fff0',\n\thotpRk: 'ff69b4',\n\tRdianYd: 'cd5c5c',\n\tRdigo: '4b0082',\n\tivSy: 'fffff0',\n\tkhaki: 'f0e68c',\n\tlavFMr: 'e6e6fa',\n\tlavFMrXsh: 'fff0f5',\n\tlawngYF: '7cfc00',\n\tNmoncEffon: 'fffacd',\n\tZXe: 'add8e6',\n\tZcSO: 'f08080',\n\tZcyan: 'e0ffff',\n\tZgTMnPdLw: 'fafad2',\n\tZWay: 'd3d3d3',\n\tZgYF: '90ee90',\n\tZgYy: 'd3d3d3',\n\tZpRk: 'ffb6c1',\n\tZsOmon: 'ffa07a',\n\tZsHgYF: '20b2aa',\n\tZskyXe: '87cefa',\n\tZUWay: '778899',\n\tZUgYy: '778899',\n\tZstAlXe: 'b0c4de',\n\tZLw: 'ffffe0',\n\tlime: 'ff00',\n\tlimegYF: '32cd32',\n\tlRF: 'faf0e6',\n\tmagFta: 'ff00ff',\n\tmaPon: '800000',\n\tVaquamarRe: '66cdaa',\n\tVXe: 'cd',\n\tVScEd: 'ba55d3',\n\tVpurpN: '9370db',\n\tVsHgYF: '3cb371',\n\tVUXe: '7b68ee',\n\tVsprRggYF: 'fa9a',\n\tVQe: '48d1cc',\n\tVviTetYd: 'c71585',\n\tmidnightXe: '191970',\n\tmRtcYam: 'f5fffa',\n\tmistyPse: 'ffe4e1',\n\tmoccasR: 'ffe4b5',\n\tnavajowEte: 'ffdead',\n\tnavy: '80',\n\tTdlace: 'fdf5e6',\n\tTive: '808000',\n\tTivedBb: '6b8e23',\n\tSange: 'ffa500',\n\tSangeYd: 'ff4500',\n\tScEd: 'da70d6',\n\tpOegTMnPd: 'eee8aa',\n\tpOegYF: '98fb98',\n\tpOeQe: 'afeeee',\n\tpOeviTetYd: 'db7093',\n\tpapayawEp: 'ffefd5',\n\tpHKpuff: 'ffdab9',\n\tperu: 'cd853f',\n\tpRk: 'ffc0cb',\n\tplum: 'dda0dd',\n\tpowMrXe: 'b0e0e6',\n\tpurpN: '800080',\n\tYbeccapurpN: '663399',\n\tYd: 'ff0000',\n\tPsybrown: 'bc8f8f',\n\tPyOXe: '4169e1',\n\tsaddNbPwn: '8b4513',\n\tsOmon: 'fa8072',\n\tsandybPwn: 'f4a460',\n\tsHgYF: '2e8b57',\n\tsHshell: 'fff5ee',\n\tsiFna: 'a0522d',\n\tsilver: 'c0c0c0',\n\tskyXe: '87ceeb',\n\tUXe: '6a5acd',\n\tUWay: '708090',\n\tUgYy: '708090',\n\tsnow: 'fffafa',\n\tsprRggYF: 'ff7f',\n\tstAlXe: '4682b4',\n\ttan: 'd2b48c',\n\tteO: '8080',\n\ttEstN: 'd8bfd8',\n\ttomato: 'ff6347',\n\tQe: '40e0d0',\n\tviTet: 'ee82ee',\n\tJHt: 'f5deb3',\n\twEte: 'ffffff',\n\twEtesmoke: 'f5f5f5',\n\tLw: 'ffff00',\n\tLwgYF: '9acd32'\n};\nfunction unpack() {\n  const unpacked = {};\n  const keys = Object.keys(names$1);\n  const tkeys = Object.keys(map);\n  let i, j, k, ok, nk;\n  for (i = 0; i < keys.length; i++) {\n    ok = nk = keys[i];\n    for (j = 0; j < tkeys.length; j++) {\n      k = tkeys[j];\n      nk = nk.replace(k, map[k]);\n    }\n    k = parseInt(names$1[ok], 16);\n    unpacked[nk] = [k >> 16 & 0xFF, k >> 8 & 0xFF, k & 0xFF];\n  }\n  return unpacked;\n}\n\nlet names;\nfunction nameParse(str) {\n  if (!names) {\n    names = unpack();\n    names.transparent = [0, 0, 0, 0];\n  }\n  const a = names[str.toLowerCase()];\n  return a && {\n    r: a[0],\n    g: a[1],\n    b: a[2],\n    a: a.length === 4 ? a[3] : 255\n  };\n}\n\nconst RGB_RE = /^rgba?\\(\\s*([-+.\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?[\\s,]+([-+.e\\d]+)(%)?(?:[\\s,/]+([-+.e\\d]+)(%)?)?\\s*\\)$/;\nfunction rgbParse(str) {\n  const m = RGB_RE.exec(str);\n  let a = 255;\n  let r, g, b;\n  if (!m) {\n    return;\n  }\n  if (m[7] !== r) {\n    const v = +m[7];\n    a = m[8] ? p2b(v) : lim(v * 255, 0, 255);\n  }\n  r = +m[1];\n  g = +m[3];\n  b = +m[5];\n  r = 255 & (m[2] ? p2b(r) : lim(r, 0, 255));\n  g = 255 & (m[4] ? p2b(g) : lim(g, 0, 255));\n  b = 255 & (m[6] ? p2b(b) : lim(b, 0, 255));\n  return {\n    r: r,\n    g: g,\n    b: b,\n    a: a\n  };\n}\nfunction rgbString(v) {\n  return v && (\n    v.a < 255\n      ? `rgba(${v.r}, ${v.g}, ${v.b}, ${b2n(v.a)})`\n      : `rgb(${v.r}, ${v.g}, ${v.b})`\n  );\n}\n\nconst to = v => v <= 0.0031308 ? v * 12.92 : Math.pow(v, 1.0 / 2.4) * 1.055 - 0.055;\nconst from = v => v <= 0.04045 ? v / 12.92 : Math.pow((v + 0.055) / 1.055, 2.4);\nfunction interpolate(rgb1, rgb2, t) {\n  const r = from(b2n(rgb1.r));\n  const g = from(b2n(rgb1.g));\n  const b = from(b2n(rgb1.b));\n  return {\n    r: n2b(to(r + t * (from(b2n(rgb2.r)) - r))),\n    g: n2b(to(g + t * (from(b2n(rgb2.g)) - g))),\n    b: n2b(to(b + t * (from(b2n(rgb2.b)) - b))),\n    a: rgb1.a + t * (rgb2.a - rgb1.a)\n  };\n}\n\nfunction modHSL(v, i, ratio) {\n  if (v) {\n    let tmp = rgb2hsl(v);\n    tmp[i] = Math.max(0, Math.min(tmp[i] + tmp[i] * ratio, i === 0 ? 360 : 1));\n    tmp = hsl2rgb(tmp);\n    v.r = tmp[0];\n    v.g = tmp[1];\n    v.b = tmp[2];\n  }\n}\nfunction clone(v, proto) {\n  return v ? Object.assign(proto || {}, v) : v;\n}\nfunction fromObject(input) {\n  var v = {r: 0, g: 0, b: 0, a: 255};\n  if (Array.isArray(input)) {\n    if (input.length >= 3) {\n      v = {r: input[0], g: input[1], b: input[2], a: 255};\n      if (input.length > 3) {\n        v.a = n2b(input[3]);\n      }\n    }\n  } else {\n    v = clone(input, {r: 0, g: 0, b: 0, a: 1});\n    v.a = n2b(v.a);\n  }\n  return v;\n}\nfunction functionParse(str) {\n  if (str.charAt(0) === 'r') {\n    return rgbParse(str);\n  }\n  return hueParse(str);\n}\nclass Color {\n  constructor(input) {\n    if (input instanceof Color) {\n      return input;\n    }\n    const type = typeof input;\n    let v;\n    if (type === 'object') {\n      v = fromObject(input);\n    } else if (type === 'string') {\n      v = hexParse(input) || nameParse(input) || functionParse(input);\n    }\n    this._rgb = v;\n    this._valid = !!v;\n  }\n  get valid() {\n    return this._valid;\n  }\n  get rgb() {\n    var v = clone(this._rgb);\n    if (v) {\n      v.a = b2n(v.a);\n    }\n    return v;\n  }\n  set rgb(obj) {\n    this._rgb = fromObject(obj);\n  }\n  rgbString() {\n    return this._valid ? rgbString(this._rgb) : undefined;\n  }\n  hexString() {\n    return this._valid ? hexString(this._rgb) : undefined;\n  }\n  hslString() {\n    return this._valid ? hslString(this._rgb) : undefined;\n  }\n  mix(color, weight) {\n    if (color) {\n      const c1 = this.rgb;\n      const c2 = color.rgb;\n      let w2;\n      const p = weight === w2 ? 0.5 : weight;\n      const w = 2 * p - 1;\n      const a = c1.a - c2.a;\n      const w1 = ((w * a === -1 ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n      w2 = 1 - w1;\n      c1.r = 0xFF & w1 * c1.r + w2 * c2.r + 0.5;\n      c1.g = 0xFF & w1 * c1.g + w2 * c2.g + 0.5;\n      c1.b = 0xFF & w1 * c1.b + w2 * c2.b + 0.5;\n      c1.a = p * c1.a + (1 - p) * c2.a;\n      this.rgb = c1;\n    }\n    return this;\n  }\n  interpolate(color, t) {\n    if (color) {\n      this._rgb = interpolate(this._rgb, color._rgb, t);\n    }\n    return this;\n  }\n  clone() {\n    return new Color(this.rgb);\n  }\n  alpha(a) {\n    this._rgb.a = n2b(a);\n    return this;\n  }\n  clearer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 - ratio;\n    return this;\n  }\n  greyscale() {\n    const rgb = this._rgb;\n    const val = round(rgb.r * 0.3 + rgb.g * 0.59 + rgb.b * 0.11);\n    rgb.r = rgb.g = rgb.b = val;\n    return this;\n  }\n  opaquer(ratio) {\n    const rgb = this._rgb;\n    rgb.a *= 1 + ratio;\n    return this;\n  }\n  negate() {\n    const v = this._rgb;\n    v.r = 255 - v.r;\n    v.g = 255 - v.g;\n    v.b = 255 - v.b;\n    return this;\n  }\n  lighten(ratio) {\n    modHSL(this._rgb, 2, ratio);\n    return this;\n  }\n  darken(ratio) {\n    modHSL(this._rgb, 2, -ratio);\n    return this;\n  }\n  saturate(ratio) {\n    modHSL(this._rgb, 1, ratio);\n    return this;\n  }\n  desaturate(ratio) {\n    modHSL(this._rgb, 1, -ratio);\n    return this;\n  }\n  rotate(deg) {\n    rotate(this._rgb, deg);\n    return this;\n  }\n}\n\nfunction index_esm(input) {\n  return new Color(input);\n}\n\nexport { Color, b2n, b2p, index_esm as default, hexParse, hexString, hsl2rgb, hslString, hsv2rgb, hueParse, hwb2rgb, lim, n2b, n2p, nameParse, p2b, rgb2hsl, rgbParse, rgbString, rotate, round };\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { Color } from '@kurkle/color';\n\n/**\n * @namespace Chart.helpers\n */ /**\n * An empty function that can be used, for example, for optional callback.\n */ function noop() {\n/* noop */ }\n/**\n * Returns a unique id, sequentially generated from a global variable.\n */ const uid = (()=>{\n    let id = 0;\n    return ()=>id++;\n})();\n/**\n * Returns true if `value` is neither null nor undefined, else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isNullOrUndef(value) {\n    return value === null || value === undefined;\n}\n/**\n * Returns true if `value` is an array (including typed arrays), else returns false.\n * @param value - The value to test.\n * @function\n */ function isArray(value) {\n    if (Array.isArray && Array.isArray(value)) {\n        return true;\n    }\n    const type = Object.prototype.toString.call(value);\n    if (type.slice(0, 7) === '[object' && type.slice(-6) === 'Array]') {\n        return true;\n    }\n    return false;\n}\n/**\n * Returns true if `value` is an object (excluding null), else returns false.\n * @param value - The value to test.\n * @since 2.7.0\n */ function isObject(value) {\n    return value !== null && Object.prototype.toString.call(value) === '[object Object]';\n}\n/**\n * Returns true if `value` is a finite number, else returns false\n * @param value  - The value to test.\n */ function isNumberFinite(value) {\n    return (typeof value === 'number' || value instanceof Number) && isFinite(+value);\n}\n/**\n * Returns `value` if finite, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is not finite.\n */ function finiteOrDefault(value, defaultValue) {\n    return isNumberFinite(value) ? value : defaultValue;\n}\n/**\n * Returns `value` if defined, else returns `defaultValue`.\n * @param value - The value to return if defined.\n * @param defaultValue - The value to return if `value` is undefined.\n */ function valueOrDefault(value, defaultValue) {\n    return typeof value === 'undefined' ? defaultValue : value;\n}\nconst toPercentage = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 : +value / dimension;\nconst toDimension = (value, dimension)=>typeof value === 'string' && value.endsWith('%') ? parseFloat(value) / 100 * dimension : +value;\n/**\n * Calls `fn` with the given `args` in the scope defined by `thisArg` and returns the\n * value returned by `fn`. If `fn` is not a function, this method returns undefined.\n * @param fn - The function to call.\n * @param args - The arguments with which `fn` should be called.\n * @param [thisArg] - The value of `this` provided for the call to `fn`.\n */ function callback(fn, args, thisArg) {\n    if (fn && typeof fn.call === 'function') {\n        return fn.apply(thisArg, args);\n    }\n}\nfunction each(loopable, fn, thisArg, reverse) {\n    let i, len, keys;\n    if (isArray(loopable)) {\n        len = loopable.length;\n        if (reverse) {\n            for(i = len - 1; i >= 0; i--){\n                fn.call(thisArg, loopable[i], i);\n            }\n        } else {\n            for(i = 0; i < len; i++){\n                fn.call(thisArg, loopable[i], i);\n            }\n        }\n    } else if (isObject(loopable)) {\n        keys = Object.keys(loopable);\n        len = keys.length;\n        for(i = 0; i < len; i++){\n            fn.call(thisArg, loopable[keys[i]], keys[i]);\n        }\n    }\n}\n/**\n * Returns true if the `a0` and `a1` arrays have the same content, else returns false.\n * @param a0 - The array to compare\n * @param a1 - The array to compare\n * @private\n */ function _elementsEqual(a0, a1) {\n    let i, ilen, v0, v1;\n    if (!a0 || !a1 || a0.length !== a1.length) {\n        return false;\n    }\n    for(i = 0, ilen = a0.length; i < ilen; ++i){\n        v0 = a0[i];\n        v1 = a1[i];\n        if (v0.datasetIndex !== v1.datasetIndex || v0.index !== v1.index) {\n            return false;\n        }\n    }\n    return true;\n}\n/**\n * Returns a deep copy of `source` without keeping references on objects and arrays.\n * @param source - The value to clone.\n */ function clone(source) {\n    if (isArray(source)) {\n        return source.map(clone);\n    }\n    if (isObject(source)) {\n        const target = Object.create(null);\n        const keys = Object.keys(source);\n        const klen = keys.length;\n        let k = 0;\n        for(; k < klen; ++k){\n            target[keys[k]] = clone(source[keys[k]]);\n        }\n        return target;\n    }\n    return source;\n}\nfunction isValidKey(key) {\n    return [\n        '__proto__',\n        'prototype',\n        'constructor'\n    ].indexOf(key) === -1;\n}\n/**\n * The default merger when Chart.helpers.merge is called without merger option.\n * Note(SB): also used by mergeConfig and mergeScaleConfig as fallback.\n * @private\n */ function _merger(key, target, source, options) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        // eslint-disable-next-line @typescript-eslint/no-use-before-define\n        merge(tval, sval, options);\n    } else {\n        target[key] = clone(sval);\n    }\n}\nfunction merge(target, source, options) {\n    const sources = isArray(source) ? source : [\n        source\n    ];\n    const ilen = sources.length;\n    if (!isObject(target)) {\n        return target;\n    }\n    options = options || {};\n    const merger = options.merger || _merger;\n    let current;\n    for(let i = 0; i < ilen; ++i){\n        current = sources[i];\n        if (!isObject(current)) {\n            continue;\n        }\n        const keys = Object.keys(current);\n        for(let k = 0, klen = keys.length; k < klen; ++k){\n            merger(keys[k], target, current, options);\n        }\n    }\n    return target;\n}\nfunction mergeIf(target, source) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    return merge(target, source, {\n        merger: _mergerIf\n    });\n}\n/**\n * Merges source[key] in target[key] only if target[key] is undefined.\n * @private\n */ function _mergerIf(key, target, source) {\n    if (!isValidKey(key)) {\n        return;\n    }\n    const tval = target[key];\n    const sval = source[key];\n    if (isObject(tval) && isObject(sval)) {\n        mergeIf(tval, sval);\n    } else if (!Object.prototype.hasOwnProperty.call(target, key)) {\n        target[key] = clone(sval);\n    }\n}\n/**\n * @private\n */ function _deprecated(scope, value, previous, current) {\n    if (value !== undefined) {\n        console.warn(scope + ': \"' + previous + '\" is deprecated. Please use \"' + current + '\" instead');\n    }\n}\n// resolveObjectKey resolver cache\nconst keyResolvers = {\n    // Chart.helpers.core resolveObjectKey should resolve empty key to root object\n    '': (v)=>v,\n    // default resolvers\n    x: (o)=>o.x,\n    y: (o)=>o.y\n};\n/**\n * @private\n */ function _splitKey(key) {\n    const parts = key.split('.');\n    const keys = [];\n    let tmp = '';\n    for (const part of parts){\n        tmp += part;\n        if (tmp.endsWith('\\\\')) {\n            tmp = tmp.slice(0, -1) + '.';\n        } else {\n            keys.push(tmp);\n            tmp = '';\n        }\n    }\n    return keys;\n}\nfunction _getKeyResolver(key) {\n    const keys = _splitKey(key);\n    return (obj)=>{\n        for (const k of keys){\n            if (k === '') {\n                break;\n            }\n            obj = obj && obj[k];\n        }\n        return obj;\n    };\n}\nfunction resolveObjectKey(obj, key) {\n    const resolver = keyResolvers[key] || (keyResolvers[key] = _getKeyResolver(key));\n    return resolver(obj);\n}\n/**\n * @private\n */ function _capitalize(str) {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n}\nconst defined = (value)=>typeof value !== 'undefined';\nconst isFunction = (value)=>typeof value === 'function';\n// Adapted from https://stackoverflow.com/questions/31128855/comparing-ecma6-sets-for-equality#31129384\nconst setsEqual = (a, b)=>{\n    if (a.size !== b.size) {\n        return false;\n    }\n    for (const item of a){\n        if (!b.has(item)) {\n            return false;\n        }\n    }\n    return true;\n};\n/**\n * @param e - The event\n * @private\n */ function _isClickEvent(e) {\n    return e.type === 'mouseup' || e.type === 'click' || e.type === 'contextmenu';\n}\n\n/**\n * @alias Chart.helpers.math\n * @namespace\n */ const PI = Math.PI;\nconst TAU = 2 * PI;\nconst PITAU = TAU + PI;\nconst INFINITY = Number.POSITIVE_INFINITY;\nconst RAD_PER_DEG = PI / 180;\nconst HALF_PI = PI / 2;\nconst QUARTER_PI = PI / 4;\nconst TWO_THIRDS_PI = PI * 2 / 3;\nconst log10 = Math.log10;\nconst sign = Math.sign;\nfunction almostEquals(x, y, epsilon) {\n    return Math.abs(x - y) < epsilon;\n}\n/**\n * Implementation of the nice number algorithm used in determining where axis labels will go\n */ function niceNum(range) {\n    const roundedRange = Math.round(range);\n    range = almostEquals(range, roundedRange, range / 1000) ? roundedRange : range;\n    const niceRange = Math.pow(10, Math.floor(log10(range)));\n    const fraction = range / niceRange;\n    const niceFraction = fraction <= 1 ? 1 : fraction <= 2 ? 2 : fraction <= 5 ? 5 : 10;\n    return niceFraction * niceRange;\n}\n/**\n * Returns an array of factors sorted from 1 to sqrt(value)\n * @private\n */ function _factorize(value) {\n    const result = [];\n    const sqrt = Math.sqrt(value);\n    let i;\n    for(i = 1; i < sqrt; i++){\n        if (value % i === 0) {\n            result.push(i);\n            result.push(value / i);\n        }\n    }\n    if (sqrt === (sqrt | 0)) {\n        result.push(sqrt);\n    }\n    result.sort((a, b)=>a - b).pop();\n    return result;\n}\n/**\n * Verifies that attempting to coerce n to string or number won't throw a TypeError.\n */ function isNonPrimitive(n) {\n    return typeof n === 'symbol' || typeof n === 'object' && n !== null && !(Symbol.toPrimitive in n || 'toString' in n || 'valueOf' in n);\n}\nfunction isNumber(n) {\n    return !isNonPrimitive(n) && !isNaN(parseFloat(n)) && isFinite(n);\n}\nfunction almostWhole(x, epsilon) {\n    const rounded = Math.round(x);\n    return rounded - epsilon <= x && rounded + epsilon >= x;\n}\n/**\n * @private\n */ function _setMinAndMaxByKey(array, target, property) {\n    let i, ilen, value;\n    for(i = 0, ilen = array.length; i < ilen; i++){\n        value = array[i][property];\n        if (!isNaN(value)) {\n            target.min = Math.min(target.min, value);\n            target.max = Math.max(target.max, value);\n        }\n    }\n}\nfunction toRadians(degrees) {\n    return degrees * (PI / 180);\n}\nfunction toDegrees(radians) {\n    return radians * (180 / PI);\n}\n/**\n * Returns the number of decimal places\n * i.e. the number of digits after the decimal point, of the value of this Number.\n * @param x - A number.\n * @returns The number of decimal places.\n * @private\n */ function _decimalPlaces(x) {\n    if (!isNumberFinite(x)) {\n        return;\n    }\n    let e = 1;\n    let p = 0;\n    while(Math.round(x * e) / e !== x){\n        e *= 10;\n        p++;\n    }\n    return p;\n}\n// Gets the angle from vertical upright to the point about a centre.\nfunction getAngleFromPoint(centrePoint, anglePoint) {\n    const distanceFromXCenter = anglePoint.x - centrePoint.x;\n    const distanceFromYCenter = anglePoint.y - centrePoint.y;\n    const radialDistanceFromCenter = Math.sqrt(distanceFromXCenter * distanceFromXCenter + distanceFromYCenter * distanceFromYCenter);\n    let angle = Math.atan2(distanceFromYCenter, distanceFromXCenter);\n    if (angle < -0.5 * PI) {\n        angle += TAU; // make sure the returned angle is in the range of (-PI/2, 3PI/2]\n    }\n    return {\n        angle,\n        distance: radialDistanceFromCenter\n    };\n}\nfunction distanceBetweenPoints(pt1, pt2) {\n    return Math.sqrt(Math.pow(pt2.x - pt1.x, 2) + Math.pow(pt2.y - pt1.y, 2));\n}\n/**\n * Shortest distance between angles, in either direction.\n * @private\n */ function _angleDiff(a, b) {\n    return (a - b + PITAU) % TAU - PI;\n}\n/**\n * Normalize angle to be between 0 and 2*PI\n * @private\n */ function _normalizeAngle(a) {\n    return (a % TAU + TAU) % TAU;\n}\n/**\n * @private\n */ function _angleBetween(angle, start, end, sameAngleIsFullCircle) {\n    const a = _normalizeAngle(angle);\n    const s = _normalizeAngle(start);\n    const e = _normalizeAngle(end);\n    const angleToStart = _normalizeAngle(s - a);\n    const angleToEnd = _normalizeAngle(e - a);\n    const startToAngle = _normalizeAngle(a - s);\n    const endToAngle = _normalizeAngle(a - e);\n    return a === s || a === e || sameAngleIsFullCircle && s === e || angleToStart > angleToEnd && startToAngle < endToAngle;\n}\n/**\n * Limit `value` between `min` and `max`\n * @param value\n * @param min\n * @param max\n * @private\n */ function _limitValue(value, min, max) {\n    return Math.max(min, Math.min(max, value));\n}\n/**\n * @param {number} value\n * @private\n */ function _int16Range(value) {\n    return _limitValue(value, -32768, 32767);\n}\n/**\n * @param value\n * @param start\n * @param end\n * @param [epsilon]\n * @private\n */ function _isBetween(value, start, end, epsilon = 1e-6) {\n    return value >= Math.min(start, end) - epsilon && value <= Math.max(start, end) + epsilon;\n}\n\nfunction _lookup(table, value, cmp) {\n    cmp = cmp || ((index)=>table[index] < value);\n    let hi = table.length - 1;\n    let lo = 0;\n    let mid;\n    while(hi - lo > 1){\n        mid = lo + hi >> 1;\n        if (cmp(mid)) {\n            lo = mid;\n        } else {\n            hi = mid;\n        }\n    }\n    return {\n        lo,\n        hi\n    };\n}\n/**\n * Binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @param last - lookup last index\n * @private\n */ const _lookupByKey = (table, key, value, last)=>_lookup(table, value, last ? (index)=>{\n        const ti = table[index][key];\n        return ti < value || ti === value && table[index + 1][key] === value;\n    } : (index)=>table[index][key] < value);\n/**\n * Reverse binary search\n * @param table - the table search. must be sorted!\n * @param key - property name for the value in each entry\n * @param value - value to find\n * @private\n */ const _rlookupByKey = (table, key, value)=>_lookup(table, value, (index)=>table[index][key] >= value);\n/**\n * Return subset of `values` between `min` and `max` inclusive.\n * Values are assumed to be in sorted order.\n * @param values - sorted array of values\n * @param min - min value\n * @param max - max value\n */ function _filterBetween(values, min, max) {\n    let start = 0;\n    let end = values.length;\n    while(start < end && values[start] < min){\n        start++;\n    }\n    while(end > start && values[end - 1] > max){\n        end--;\n    }\n    return start > 0 || end < values.length ? values.slice(start, end) : values;\n}\nconst arrayEvents = [\n    'push',\n    'pop',\n    'shift',\n    'splice',\n    'unshift'\n];\nfunction listenArrayEvents(array, listener) {\n    if (array._chartjs) {\n        array._chartjs.listeners.push(listener);\n        return;\n    }\n    Object.defineProperty(array, '_chartjs', {\n        configurable: true,\n        enumerable: false,\n        value: {\n            listeners: [\n                listener\n            ]\n        }\n    });\n    arrayEvents.forEach((key)=>{\n        const method = '_onData' + _capitalize(key);\n        const base = array[key];\n        Object.defineProperty(array, key, {\n            configurable: true,\n            enumerable: false,\n            value (...args) {\n                const res = base.apply(this, args);\n                array._chartjs.listeners.forEach((object)=>{\n                    if (typeof object[method] === 'function') {\n                        object[method](...args);\n                    }\n                });\n                return res;\n            }\n        });\n    });\n}\nfunction unlistenArrayEvents(array, listener) {\n    const stub = array._chartjs;\n    if (!stub) {\n        return;\n    }\n    const listeners = stub.listeners;\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n        listeners.splice(index, 1);\n    }\n    if (listeners.length > 0) {\n        return;\n    }\n    arrayEvents.forEach((key)=>{\n        delete array[key];\n    });\n    delete array._chartjs;\n}\n/**\n * @param items\n */ function _arrayUnique(items) {\n    const set = new Set(items);\n    if (set.size === items.length) {\n        return items;\n    }\n    return Array.from(set);\n}\n\nfunction fontString(pixelSize, fontStyle, fontFamily) {\n    return fontStyle + ' ' + pixelSize + 'px ' + fontFamily;\n}\n/**\n* Request animation polyfill\n*/ const requestAnimFrame = function() {\n    if (typeof window === 'undefined') {\n        return function(callback) {\n            return callback();\n        };\n    }\n    return window.requestAnimationFrame;\n}();\n/**\n * Throttles calling `fn` once per animation frame\n * Latest arguments are used on the actual call\n */ function throttled(fn, thisArg) {\n    let argsToUse = [];\n    let ticking = false;\n    return function(...args) {\n        // Save the args for use later\n        argsToUse = args;\n        if (!ticking) {\n            ticking = true;\n            requestAnimFrame.call(window, ()=>{\n                ticking = false;\n                fn.apply(thisArg, argsToUse);\n            });\n        }\n    };\n}\n/**\n * Debounces calling `fn` for `delay` ms\n */ function debounce(fn, delay) {\n    let timeout;\n    return function(...args) {\n        if (delay) {\n            clearTimeout(timeout);\n            timeout = setTimeout(fn, delay, args);\n        } else {\n            fn.apply(this, args);\n        }\n        return delay;\n    };\n}\n/**\n * Converts 'start' to 'left', 'end' to 'right' and others to 'center'\n * @private\n */ const _toLeftRightCenter = (align)=>align === 'start' ? 'left' : align === 'end' ? 'right' : 'center';\n/**\n * Returns `start`, `end` or `(start + end) / 2` depending on `align`. Defaults to `center`\n * @private\n */ const _alignStartEnd = (align, start, end)=>align === 'start' ? start : align === 'end' ? end : (start + end) / 2;\n/**\n * Returns `left`, `right` or `(left + right) / 2` depending on `align`. Defaults to `left`\n * @private\n */ const _textX = (align, left, right, rtl)=>{\n    const check = rtl ? 'left' : 'right';\n    return align === check ? right : align === 'center' ? (left + right) / 2 : left;\n};\n/**\n * Return start and count of visible points.\n * @private\n */ function _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled) {\n    const pointCount = points.length;\n    let start = 0;\n    let count = pointCount;\n    if (meta._sorted) {\n        const { iScale , vScale , _parsed  } = meta;\n        const spanGaps = meta.dataset ? meta.dataset.options ? meta.dataset.options.spanGaps : null : null;\n        const axis = iScale.axis;\n        const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n        if (minDefined) {\n            start = Math.min(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, axis, min).lo, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? pointCount : _lookupByKey(points, axis, iScale.getPixelForValue(min)).lo);\n            if (spanGaps) {\n                const distanceToDefinedLo = _parsed.slice(0, start + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                start -= Math.max(0, distanceToDefinedLo);\n            }\n            start = _limitValue(start, 0, pointCount - 1);\n        }\n        if (maxDefined) {\n            let end = Math.max(// @ts-expect-error Need to type _parsed\n            _lookupByKey(_parsed, iScale.axis, max, true).hi + 1, // @ts-expect-error Need to fix types on _lookupByKey\n            animationsDisabled ? 0 : _lookupByKey(points, axis, iScale.getPixelForValue(max), true).hi + 1);\n            if (spanGaps) {\n                const distanceToDefinedHi = _parsed.slice(end - 1).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                end += Math.max(0, distanceToDefinedHi);\n            }\n            count = _limitValue(end, start, pointCount) - start;\n        } else {\n            count = pointCount - start;\n        }\n    }\n    return {\n        start,\n        count\n    };\n}\n/**\n * Checks if the scale ranges have changed.\n * @param {object} meta - dataset meta.\n * @returns {boolean}\n * @private\n */ function _scaleRangesChanged(meta) {\n    const { xScale , yScale , _scaleRanges  } = meta;\n    const newRanges = {\n        xmin: xScale.min,\n        xmax: xScale.max,\n        ymin: yScale.min,\n        ymax: yScale.max\n    };\n    if (!_scaleRanges) {\n        meta._scaleRanges = newRanges;\n        return true;\n    }\n    const changed = _scaleRanges.xmin !== xScale.min || _scaleRanges.xmax !== xScale.max || _scaleRanges.ymin !== yScale.min || _scaleRanges.ymax !== yScale.max;\n    Object.assign(_scaleRanges, newRanges);\n    return changed;\n}\n\nconst atEdge = (t)=>t === 0 || t === 1;\nconst elasticIn = (t, s, p)=>-(Math.pow(2, 10 * (t -= 1)) * Math.sin((t - s) * TAU / p));\nconst elasticOut = (t, s, p)=>Math.pow(2, -10 * t) * Math.sin((t - s) * TAU / p) + 1;\n/**\n * Easing functions adapted from Robert Penner's easing equations.\n * @namespace Chart.helpers.easing.effects\n * @see http://www.robertpenner.com/easing/\n */ const effects = {\n    linear: (t)=>t,\n    easeInQuad: (t)=>t * t,\n    easeOutQuad: (t)=>-t * (t - 2),\n    easeInOutQuad: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t : -0.5 * (--t * (t - 2) - 1),\n    easeInCubic: (t)=>t * t * t,\n    easeOutCubic: (t)=>(t -= 1) * t * t + 1,\n    easeInOutCubic: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t : 0.5 * ((t -= 2) * t * t + 2),\n    easeInQuart: (t)=>t * t * t * t,\n    easeOutQuart: (t)=>-((t -= 1) * t * t * t - 1),\n    easeInOutQuart: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t : -0.5 * ((t -= 2) * t * t * t - 2),\n    easeInQuint: (t)=>t * t * t * t * t,\n    easeOutQuint: (t)=>(t -= 1) * t * t * t * t + 1,\n    easeInOutQuint: (t)=>(t /= 0.5) < 1 ? 0.5 * t * t * t * t * t : 0.5 * ((t -= 2) * t * t * t * t + 2),\n    easeInSine: (t)=>-Math.cos(t * HALF_PI) + 1,\n    easeOutSine: (t)=>Math.sin(t * HALF_PI),\n    easeInOutSine: (t)=>-0.5 * (Math.cos(PI * t) - 1),\n    easeInExpo: (t)=>t === 0 ? 0 : Math.pow(2, 10 * (t - 1)),\n    easeOutExpo: (t)=>t === 1 ? 1 : -Math.pow(2, -10 * t) + 1,\n    easeInOutExpo: (t)=>atEdge(t) ? t : t < 0.5 ? 0.5 * Math.pow(2, 10 * (t * 2 - 1)) : 0.5 * (-Math.pow(2, -10 * (t * 2 - 1)) + 2),\n    easeInCirc: (t)=>t >= 1 ? t : -(Math.sqrt(1 - t * t) - 1),\n    easeOutCirc: (t)=>Math.sqrt(1 - (t -= 1) * t),\n    easeInOutCirc: (t)=>(t /= 0.5) < 1 ? -0.5 * (Math.sqrt(1 - t * t) - 1) : 0.5 * (Math.sqrt(1 - (t -= 2) * t) + 1),\n    easeInElastic: (t)=>atEdge(t) ? t : elasticIn(t, 0.075, 0.3),\n    easeOutElastic: (t)=>atEdge(t) ? t : elasticOut(t, 0.075, 0.3),\n    easeInOutElastic (t) {\n        const s = 0.1125;\n        const p = 0.45;\n        return atEdge(t) ? t : t < 0.5 ? 0.5 * elasticIn(t * 2, s, p) : 0.5 + 0.5 * elasticOut(t * 2 - 1, s, p);\n    },\n    easeInBack (t) {\n        const s = 1.70158;\n        return t * t * ((s + 1) * t - s);\n    },\n    easeOutBack (t) {\n        const s = 1.70158;\n        return (t -= 1) * t * ((s + 1) * t + s) + 1;\n    },\n    easeInOutBack (t) {\n        let s = 1.70158;\n        if ((t /= 0.5) < 1) {\n            return 0.5 * (t * t * (((s *= 1.525) + 1) * t - s));\n        }\n        return 0.5 * ((t -= 2) * t * (((s *= 1.525) + 1) * t + s) + 2);\n    },\n    easeInBounce: (t)=>1 - effects.easeOutBounce(1 - t),\n    easeOutBounce (t) {\n        const m = 7.5625;\n        const d = 2.75;\n        if (t < 1 / d) {\n            return m * t * t;\n        }\n        if (t < 2 / d) {\n            return m * (t -= 1.5 / d) * t + 0.75;\n        }\n        if (t < 2.5 / d) {\n            return m * (t -= 2.25 / d) * t + 0.9375;\n        }\n        return m * (t -= 2.625 / d) * t + 0.984375;\n    },\n    easeInOutBounce: (t)=>t < 0.5 ? effects.easeInBounce(t * 2) * 0.5 : effects.easeOutBounce(t * 2 - 1) * 0.5 + 0.5\n};\n\nfunction isPatternOrGradient(value) {\n    if (value && typeof value === 'object') {\n        const type = value.toString();\n        return type === '[object CanvasPattern]' || type === '[object CanvasGradient]';\n    }\n    return false;\n}\nfunction color(value) {\n    return isPatternOrGradient(value) ? value : new Color(value);\n}\nfunction getHoverColor(value) {\n    return isPatternOrGradient(value) ? value : new Color(value).saturate(0.5).darken(0.1).hexString();\n}\n\nconst numbers = [\n    'x',\n    'y',\n    'borderWidth',\n    'radius',\n    'tension'\n];\nconst colors = [\n    'color',\n    'borderColor',\n    'backgroundColor'\n];\nfunction applyAnimationsDefaults(defaults) {\n    defaults.set('animation', {\n        delay: undefined,\n        duration: 1000,\n        easing: 'easeOutQuart',\n        fn: undefined,\n        from: undefined,\n        loop: undefined,\n        to: undefined,\n        type: undefined\n    });\n    defaults.describe('animation', {\n        _fallback: false,\n        _indexable: false,\n        _scriptable: (name)=>name !== 'onProgress' && name !== 'onComplete' && name !== 'fn'\n    });\n    defaults.set('animations', {\n        colors: {\n            type: 'color',\n            properties: colors\n        },\n        numbers: {\n            type: 'number',\n            properties: numbers\n        }\n    });\n    defaults.describe('animations', {\n        _fallback: 'animation'\n    });\n    defaults.set('transitions', {\n        active: {\n            animation: {\n                duration: 400\n            }\n        },\n        resize: {\n            animation: {\n                duration: 0\n            }\n        },\n        show: {\n            animations: {\n                colors: {\n                    from: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    duration: 0\n                }\n            }\n        },\n        hide: {\n            animations: {\n                colors: {\n                    to: 'transparent'\n                },\n                visible: {\n                    type: 'boolean',\n                    easing: 'linear',\n                    fn: (v)=>v | 0\n                }\n            }\n        }\n    });\n}\n\nfunction applyLayoutsDefaults(defaults) {\n    defaults.set('layout', {\n        autoPadding: true,\n        padding: {\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        }\n    });\n}\n\nconst intlCache = new Map();\nfunction getNumberFormat(locale, options) {\n    options = options || {};\n    const cacheKey = locale + JSON.stringify(options);\n    let formatter = intlCache.get(cacheKey);\n    if (!formatter) {\n        formatter = new Intl.NumberFormat(locale, options);\n        intlCache.set(cacheKey, formatter);\n    }\n    return formatter;\n}\nfunction formatNumber(num, locale, options) {\n    return getNumberFormat(locale, options).format(num);\n}\n\nconst formatters = {\n values (value) {\n        return isArray(value) ?  value : '' + value;\n    },\n numeric (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const locale = this.chart.options.locale;\n        let notation;\n        let delta = tickValue;\n        if (ticks.length > 1) {\n            const maxTick = Math.max(Math.abs(ticks[0].value), Math.abs(ticks[ticks.length - 1].value));\n            if (maxTick < 1e-4 || maxTick > 1e+15) {\n                notation = 'scientific';\n            }\n            delta = calculateDelta(tickValue, ticks);\n        }\n        const logDelta = log10(Math.abs(delta));\n        const numDecimal = isNaN(logDelta) ? 1 : Math.max(Math.min(-1 * Math.floor(logDelta), 20), 0);\n        const options = {\n            notation,\n            minimumFractionDigits: numDecimal,\n            maximumFractionDigits: numDecimal\n        };\n        Object.assign(options, this.options.ticks.format);\n        return formatNumber(tickValue, locale, options);\n    },\n logarithmic (tickValue, index, ticks) {\n        if (tickValue === 0) {\n            return '0';\n        }\n        const remain = ticks[index].significand || tickValue / Math.pow(10, Math.floor(log10(tickValue)));\n        if ([\n            1,\n            2,\n            3,\n            5,\n            10,\n            15\n        ].includes(remain) || index > 0.8 * ticks.length) {\n            return formatters.numeric.call(this, tickValue, index, ticks);\n        }\n        return '';\n    }\n};\nfunction calculateDelta(tickValue, ticks) {\n    let delta = ticks.length > 3 ? ticks[2].value - ticks[1].value : ticks[1].value - ticks[0].value;\n    if (Math.abs(delta) >= 1 && tickValue !== Math.floor(tickValue)) {\n        delta = tickValue - Math.floor(tickValue);\n    }\n    return delta;\n}\n var Ticks = {\n    formatters\n};\n\nfunction applyScaleDefaults(defaults) {\n    defaults.set('scale', {\n        display: true,\n        offset: false,\n        reverse: false,\n        beginAtZero: false,\n bounds: 'ticks',\n        clip: true,\n grace: 0,\n        grid: {\n            display: true,\n            lineWidth: 1,\n            drawOnChartArea: true,\n            drawTicks: true,\n            tickLength: 8,\n            tickWidth: (_ctx, options)=>options.lineWidth,\n            tickColor: (_ctx, options)=>options.color,\n            offset: false\n        },\n        border: {\n            display: true,\n            dash: [],\n            dashOffset: 0.0,\n            width: 1\n        },\n        title: {\n            display: false,\n            text: '',\n            padding: {\n                top: 4,\n                bottom: 4\n            }\n        },\n        ticks: {\n            minRotation: 0,\n            maxRotation: 50,\n            mirror: false,\n            textStrokeWidth: 0,\n            textStrokeColor: '',\n            padding: 3,\n            display: true,\n            autoSkip: true,\n            autoSkipPadding: 3,\n            labelOffset: 0,\n            callback: Ticks.formatters.values,\n            minor: {},\n            major: {},\n            align: 'center',\n            crossAlign: 'near',\n            showLabelBackdrop: false,\n            backdropColor: 'rgba(255, 255, 255, 0.75)',\n            backdropPadding: 2\n        }\n    });\n    defaults.route('scale.ticks', 'color', '', 'color');\n    defaults.route('scale.grid', 'color', '', 'borderColor');\n    defaults.route('scale.border', 'color', '', 'borderColor');\n    defaults.route('scale.title', 'color', '', 'color');\n    defaults.describe('scale', {\n        _fallback: false,\n        _scriptable: (name)=>!name.startsWith('before') && !name.startsWith('after') && name !== 'callback' && name !== 'parser',\n        _indexable: (name)=>name !== 'borderDash' && name !== 'tickBorderDash' && name !== 'dash'\n    });\n    defaults.describe('scales', {\n        _fallback: 'scale'\n    });\n    defaults.describe('scale.ticks', {\n        _scriptable: (name)=>name !== 'backdropPadding' && name !== 'callback',\n        _indexable: (name)=>name !== 'backdropPadding'\n    });\n}\n\nconst overrides = Object.create(null);\nconst descriptors = Object.create(null);\n function getScope$1(node, key) {\n    if (!key) {\n        return node;\n    }\n    const keys = key.split('.');\n    for(let i = 0, n = keys.length; i < n; ++i){\n        const k = keys[i];\n        node = node[k] || (node[k] = Object.create(null));\n    }\n    return node;\n}\nfunction set(root, scope, values) {\n    if (typeof scope === 'string') {\n        return merge(getScope$1(root, scope), values);\n    }\n    return merge(getScope$1(root, ''), scope);\n}\n class Defaults {\n    constructor(_descriptors, _appliers){\n        this.animation = undefined;\n        this.backgroundColor = 'rgba(0,0,0,0.1)';\n        this.borderColor = 'rgba(0,0,0,0.1)';\n        this.color = '#666';\n        this.datasets = {};\n        this.devicePixelRatio = (context)=>context.chart.platform.getDevicePixelRatio();\n        this.elements = {};\n        this.events = [\n            'mousemove',\n            'mouseout',\n            'click',\n            'touchstart',\n            'touchmove'\n        ];\n        this.font = {\n            family: \"'Helvetica Neue', 'Helvetica', 'Arial', sans-serif\",\n            size: 12,\n            style: 'normal',\n            lineHeight: 1.2,\n            weight: null\n        };\n        this.hover = {};\n        this.hoverBackgroundColor = (ctx, options)=>getHoverColor(options.backgroundColor);\n        this.hoverBorderColor = (ctx, options)=>getHoverColor(options.borderColor);\n        this.hoverColor = (ctx, options)=>getHoverColor(options.color);\n        this.indexAxis = 'x';\n        this.interaction = {\n            mode: 'nearest',\n            intersect: true,\n            includeInvisible: false\n        };\n        this.maintainAspectRatio = true;\n        this.onHover = null;\n        this.onClick = null;\n        this.parsing = true;\n        this.plugins = {};\n        this.responsive = true;\n        this.scale = undefined;\n        this.scales = {};\n        this.showLine = true;\n        this.drawActiveElementsOnTop = true;\n        this.describe(_descriptors);\n        this.apply(_appliers);\n    }\n set(scope, values) {\n        return set(this, scope, values);\n    }\n get(scope) {\n        return getScope$1(this, scope);\n    }\n describe(scope, values) {\n        return set(descriptors, scope, values);\n    }\n    override(scope, values) {\n        return set(overrides, scope, values);\n    }\n route(scope, name, targetScope, targetName) {\n        const scopeObject = getScope$1(this, scope);\n        const targetScopeObject = getScope$1(this, targetScope);\n        const privateName = '_' + name;\n        Object.defineProperties(scopeObject, {\n            [privateName]: {\n                value: scopeObject[name],\n                writable: true\n            },\n            [name]: {\n                enumerable: true,\n                get () {\n                    const local = this[privateName];\n                    const target = targetScopeObject[targetName];\n                    if (isObject(local)) {\n                        return Object.assign({}, target, local);\n                    }\n                    return valueOrDefault(local, target);\n                },\n                set (value) {\n                    this[privateName] = value;\n                }\n            }\n        });\n    }\n    apply(appliers) {\n        appliers.forEach((apply)=>apply(this));\n    }\n}\nvar defaults = /* #__PURE__ */ new Defaults({\n    _scriptable: (name)=>!name.startsWith('on'),\n    _indexable: (name)=>name !== 'events',\n    hover: {\n        _fallback: 'interaction'\n    },\n    interaction: {\n        _scriptable: false,\n        _indexable: false\n    }\n}, [\n    applyAnimationsDefaults,\n    applyLayoutsDefaults,\n    applyScaleDefaults\n]);\n\n/**\n * Converts the given font object into a CSS font string.\n * @param font - A font object.\n * @return The CSS font string. See https://developer.mozilla.org/en-US/docs/Web/CSS/font\n * @private\n */ function toFontString(font) {\n    if (!font || isNullOrUndef(font.size) || isNullOrUndef(font.family)) {\n        return null;\n    }\n    return (font.style ? font.style + ' ' : '') + (font.weight ? font.weight + ' ' : '') + font.size + 'px ' + font.family;\n}\n/**\n * @private\n */ function _measureText(ctx, data, gc, longest, string) {\n    let textWidth = data[string];\n    if (!textWidth) {\n        textWidth = data[string] = ctx.measureText(string).width;\n        gc.push(string);\n    }\n    if (textWidth > longest) {\n        longest = textWidth;\n    }\n    return longest;\n}\n/**\n * @private\n */ // eslint-disable-next-line complexity\nfunction _longestText(ctx, font, arrayOfThings, cache) {\n    cache = cache || {};\n    let data = cache.data = cache.data || {};\n    let gc = cache.garbageCollect = cache.garbageCollect || [];\n    if (cache.font !== font) {\n        data = cache.data = {};\n        gc = cache.garbageCollect = [];\n        cache.font = font;\n    }\n    ctx.save();\n    ctx.font = font;\n    let longest = 0;\n    const ilen = arrayOfThings.length;\n    let i, j, jlen, thing, nestedThing;\n    for(i = 0; i < ilen; i++){\n        thing = arrayOfThings[i];\n        // Undefined strings and arrays should not be measured\n        if (thing !== undefined && thing !== null && !isArray(thing)) {\n            longest = _measureText(ctx, data, gc, longest, thing);\n        } else if (isArray(thing)) {\n            // if it is an array lets measure each element\n            // to do maybe simplify this function a bit so we can do this more recursively?\n            for(j = 0, jlen = thing.length; j < jlen; j++){\n                nestedThing = thing[j];\n                // Undefined strings and arrays should not be measured\n                if (nestedThing !== undefined && nestedThing !== null && !isArray(nestedThing)) {\n                    longest = _measureText(ctx, data, gc, longest, nestedThing);\n                }\n            }\n        }\n    }\n    ctx.restore();\n    const gcLen = gc.length / 2;\n    if (gcLen > arrayOfThings.length) {\n        for(i = 0; i < gcLen; i++){\n            delete data[gc[i]];\n        }\n        gc.splice(0, gcLen);\n    }\n    return longest;\n}\n/**\n * Returns the aligned pixel value to avoid anti-aliasing blur\n * @param chart - The chart instance.\n * @param pixel - A pixel value.\n * @param width - The width of the element.\n * @returns The aligned pixel value.\n * @private\n */ function _alignPixel(chart, pixel, width) {\n    const devicePixelRatio = chart.currentDevicePixelRatio;\n    const halfWidth = width !== 0 ? Math.max(width / 2, 0.5) : 0;\n    return Math.round((pixel - halfWidth) * devicePixelRatio) / devicePixelRatio + halfWidth;\n}\n/**\n * Clears the entire canvas.\n */ function clearCanvas(canvas, ctx) {\n    if (!ctx && !canvas) {\n        return;\n    }\n    ctx = ctx || canvas.getContext('2d');\n    ctx.save();\n    // canvas.width and canvas.height do not consider the canvas transform,\n    // while clearRect does\n    ctx.resetTransform();\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\n    ctx.restore();\n}\nfunction drawPoint(ctx, options, x, y) {\n    // eslint-disable-next-line @typescript-eslint/no-use-before-define\n    drawPointLegend(ctx, options, x, y, null);\n}\n// eslint-disable-next-line complexity\nfunction drawPointLegend(ctx, options, x, y, w) {\n    let type, xOffset, yOffset, size, cornerRadius, width, xOffsetW, yOffsetW;\n    const style = options.pointStyle;\n    const rotation = options.rotation;\n    const radius = options.radius;\n    let rad = (rotation || 0) * RAD_PER_DEG;\n    if (style && typeof style === 'object') {\n        type = style.toString();\n        if (type === '[object HTMLImageElement]' || type === '[object HTMLCanvasElement]') {\n            ctx.save();\n            ctx.translate(x, y);\n            ctx.rotate(rad);\n            ctx.drawImage(style, -style.width / 2, -style.height / 2, style.width, style.height);\n            ctx.restore();\n            return;\n        }\n    }\n    if (isNaN(radius) || radius <= 0) {\n        return;\n    }\n    ctx.beginPath();\n    switch(style){\n        // Default includes circle\n        default:\n            if (w) {\n                ctx.ellipse(x, y, w / 2, radius, 0, 0, TAU);\n            } else {\n                ctx.arc(x, y, radius, 0, TAU);\n            }\n            ctx.closePath();\n            break;\n        case 'triangle':\n            width = w ? w / 2 : radius;\n            ctx.moveTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            rad += TWO_THIRDS_PI;\n            ctx.lineTo(x + Math.sin(rad) * width, y - Math.cos(rad) * radius);\n            ctx.closePath();\n            break;\n        case 'rectRounded':\n            // NOTE: the rounded rect implementation changed to use `arc` instead of\n            // `quadraticCurveTo` since it generates better results when rect is\n            // almost a circle. 0.516 (instead of 0.5) produces results with visually\n            // closer proportion to the previous impl and it is inscribed in the\n            // circle with `radius`. For more details, see the following PRs:\n            // https://github.com/chartjs/Chart.js/issues/5597\n            // https://github.com/chartjs/Chart.js/issues/5858\n            cornerRadius = radius * 0.516;\n            size = radius - cornerRadius;\n            xOffset = Math.cos(rad + QUARTER_PI) * size;\n            xOffsetW = Math.cos(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            yOffset = Math.sin(rad + QUARTER_PI) * size;\n            yOffsetW = Math.sin(rad + QUARTER_PI) * (w ? w / 2 - cornerRadius : size);\n            ctx.arc(x - xOffsetW, y - yOffset, cornerRadius, rad - PI, rad - HALF_PI);\n            ctx.arc(x + yOffsetW, y - xOffset, cornerRadius, rad - HALF_PI, rad);\n            ctx.arc(x + xOffsetW, y + yOffset, cornerRadius, rad, rad + HALF_PI);\n            ctx.arc(x - yOffsetW, y + xOffset, cornerRadius, rad + HALF_PI, rad + PI);\n            ctx.closePath();\n            break;\n        case 'rect':\n            if (!rotation) {\n                size = Math.SQRT1_2 * radius;\n                width = w ? w / 2 : size;\n                ctx.rect(x - width, y - size, 2 * width, 2 * size);\n                break;\n            }\n            rad += QUARTER_PI;\n        /* falls through */ case 'rectRot':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            ctx.closePath();\n            break;\n        case 'crossRot':\n            rad += QUARTER_PI;\n        /* falls through */ case 'cross':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'star':\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            rad += QUARTER_PI;\n            xOffsetW = Math.cos(rad) * (w ? w / 2 : radius);\n            xOffset = Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            yOffsetW = Math.sin(rad) * (w ? w / 2 : radius);\n            ctx.moveTo(x - xOffsetW, y - yOffset);\n            ctx.lineTo(x + xOffsetW, y + yOffset);\n            ctx.moveTo(x + yOffsetW, y - xOffset);\n            ctx.lineTo(x - yOffsetW, y + xOffset);\n            break;\n        case 'line':\n            xOffset = w ? w / 2 : Math.cos(rad) * radius;\n            yOffset = Math.sin(rad) * radius;\n            ctx.moveTo(x - xOffset, y - yOffset);\n            ctx.lineTo(x + xOffset, y + yOffset);\n            break;\n        case 'dash':\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + Math.cos(rad) * (w ? w / 2 : radius), y + Math.sin(rad) * radius);\n            break;\n        case false:\n            ctx.closePath();\n            break;\n    }\n    ctx.fill();\n    if (options.borderWidth > 0) {\n        ctx.stroke();\n    }\n}\n/**\n * Returns true if the point is inside the rectangle\n * @param point - The point to test\n * @param area - The rectangle\n * @param margin - allowed margin\n * @private\n */ function _isPointInArea(point, area, margin) {\n    margin = margin || 0.5; // margin - default is to match rounded decimals\n    return !area || point && point.x > area.left - margin && point.x < area.right + margin && point.y > area.top - margin && point.y < area.bottom + margin;\n}\nfunction clipArea(ctx, area) {\n    ctx.save();\n    ctx.beginPath();\n    ctx.rect(area.left, area.top, area.right - area.left, area.bottom - area.top);\n    ctx.clip();\n}\nfunction unclipArea(ctx) {\n    ctx.restore();\n}\n/**\n * @private\n */ function _steppedLineTo(ctx, previous, target, flip, mode) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    if (mode === 'middle') {\n        const midpoint = (previous.x + target.x) / 2.0;\n        ctx.lineTo(midpoint, previous.y);\n        ctx.lineTo(midpoint, target.y);\n    } else if (mode === 'after' !== !!flip) {\n        ctx.lineTo(previous.x, target.y);\n    } else {\n        ctx.lineTo(target.x, previous.y);\n    }\n    ctx.lineTo(target.x, target.y);\n}\n/**\n * @private\n */ function _bezierCurveTo(ctx, previous, target, flip) {\n    if (!previous) {\n        return ctx.lineTo(target.x, target.y);\n    }\n    ctx.bezierCurveTo(flip ? previous.cp1x : previous.cp2x, flip ? previous.cp1y : previous.cp2y, flip ? target.cp2x : target.cp1x, flip ? target.cp2y : target.cp1y, target.x, target.y);\n}\nfunction setRenderOpts(ctx, opts) {\n    if (opts.translation) {\n        ctx.translate(opts.translation[0], opts.translation[1]);\n    }\n    if (!isNullOrUndef(opts.rotation)) {\n        ctx.rotate(opts.rotation);\n    }\n    if (opts.color) {\n        ctx.fillStyle = opts.color;\n    }\n    if (opts.textAlign) {\n        ctx.textAlign = opts.textAlign;\n    }\n    if (opts.textBaseline) {\n        ctx.textBaseline = opts.textBaseline;\n    }\n}\nfunction decorateText(ctx, x, y, line, opts) {\n    if (opts.strikethrough || opts.underline) {\n        /**\n     * Now that IE11 support has been dropped, we can use more\n     * of the TextMetrics object. The actual bounding boxes\n     * are unflagged in Chrome, Firefox, Edge, and Safari so they\n     * can be safely used.\n     * See https://developer.mozilla.org/en-US/docs/Web/API/TextMetrics#Browser_compatibility\n     */ const metrics = ctx.measureText(line);\n        const left = x - metrics.actualBoundingBoxLeft;\n        const right = x + metrics.actualBoundingBoxRight;\n        const top = y - metrics.actualBoundingBoxAscent;\n        const bottom = y + metrics.actualBoundingBoxDescent;\n        const yDecoration = opts.strikethrough ? (top + bottom) / 2 : bottom;\n        ctx.strokeStyle = ctx.fillStyle;\n        ctx.beginPath();\n        ctx.lineWidth = opts.decorationWidth || 2;\n        ctx.moveTo(left, yDecoration);\n        ctx.lineTo(right, yDecoration);\n        ctx.stroke();\n    }\n}\nfunction drawBackdrop(ctx, opts) {\n    const oldColor = ctx.fillStyle;\n    ctx.fillStyle = opts.color;\n    ctx.fillRect(opts.left, opts.top, opts.width, opts.height);\n    ctx.fillStyle = oldColor;\n}\n/**\n * Render text onto the canvas\n */ function renderText(ctx, text, x, y, font, opts = {}) {\n    const lines = isArray(text) ? text : [\n        text\n    ];\n    const stroke = opts.strokeWidth > 0 && opts.strokeColor !== '';\n    let i, line;\n    ctx.save();\n    ctx.font = font.string;\n    setRenderOpts(ctx, opts);\n    for(i = 0; i < lines.length; ++i){\n        line = lines[i];\n        if (opts.backdrop) {\n            drawBackdrop(ctx, opts.backdrop);\n        }\n        if (stroke) {\n            if (opts.strokeColor) {\n                ctx.strokeStyle = opts.strokeColor;\n            }\n            if (!isNullOrUndef(opts.strokeWidth)) {\n                ctx.lineWidth = opts.strokeWidth;\n            }\n            ctx.strokeText(line, x, y, opts.maxWidth);\n        }\n        ctx.fillText(line, x, y, opts.maxWidth);\n        decorateText(ctx, x, y, line, opts);\n        y += Number(font.lineHeight);\n    }\n    ctx.restore();\n}\n/**\n * Add a path of a rectangle with rounded corners to the current sub-path\n * @param ctx - Context\n * @param rect - Bounding rect\n */ function addRoundedRectPath(ctx, rect) {\n    const { x , y , w , h , radius  } = rect;\n    // top left arc\n    ctx.arc(x + radius.topLeft, y + radius.topLeft, radius.topLeft, 1.5 * PI, PI, true);\n    // line from top left to bottom left\n    ctx.lineTo(x, y + h - radius.bottomLeft);\n    // bottom left arc\n    ctx.arc(x + radius.bottomLeft, y + h - radius.bottomLeft, radius.bottomLeft, PI, HALF_PI, true);\n    // line from bottom left to bottom right\n    ctx.lineTo(x + w - radius.bottomRight, y + h);\n    // bottom right arc\n    ctx.arc(x + w - radius.bottomRight, y + h - radius.bottomRight, radius.bottomRight, HALF_PI, 0, true);\n    // line from bottom right to top right\n    ctx.lineTo(x + w, y + radius.topRight);\n    // top right arc\n    ctx.arc(x + w - radius.topRight, y + radius.topRight, radius.topRight, 0, -HALF_PI, true);\n    // line from top right to top left\n    ctx.lineTo(x + radius.topLeft, y);\n}\n\nconst LINE_HEIGHT = /^(normal|(\\d+(?:\\.\\d+)?)(px|em|%)?)$/;\nconst FONT_STYLE = /^(normal|italic|initial|inherit|unset|(oblique( -?[0-9]?[0-9]deg)?))$/;\n/**\n * @alias Chart.helpers.options\n * @namespace\n */ /**\n * Converts the given line height `value` in pixels for a specific font `size`.\n * @param value - The lineHeight to parse (eg. 1.6, '14px', '75%', '1.6em').\n * @param size - The font size (in pixels) used to resolve relative `value`.\n * @returns The effective line height in pixels (size * 1.2 if value is invalid).\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/line-height\n * @since 2.7.0\n */ function toLineHeight(value, size) {\n    const matches = ('' + value).match(LINE_HEIGHT);\n    if (!matches || matches[1] === 'normal') {\n        return size * 1.2;\n    }\n    value = +matches[2];\n    switch(matches[3]){\n        case 'px':\n            return value;\n        case '%':\n            value /= 100;\n            break;\n    }\n    return size * value;\n}\nconst numberOrZero = (v)=>+v || 0;\nfunction _readValueToProps(value, props) {\n    const ret = {};\n    const objProps = isObject(props);\n    const keys = objProps ? Object.keys(props) : props;\n    const read = isObject(value) ? objProps ? (prop)=>valueOrDefault(value[prop], value[props[prop]]) : (prop)=>value[prop] : ()=>value;\n    for (const prop of keys){\n        ret[prop] = numberOrZero(read(prop));\n    }\n    return ret;\n}\n/**\n * Converts the given value into a TRBL object.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left)\n * @since 3.0.0\n */ function toTRBL(value) {\n    return _readValueToProps(value, {\n        top: 'y',\n        right: 'x',\n        bottom: 'y',\n        left: 'x'\n    });\n}\n/**\n * Converts the given value into a TRBL corners object (similar with css border-radius).\n * @param value - If a number, set the value to all TRBL corner components,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n * @returns The TRBL corner values (topLeft, topRight, bottomLeft, bottomRight)\n * @since 3.0.0\n */ function toTRBLCorners(value) {\n    return _readValueToProps(value, [\n        'topLeft',\n        'topRight',\n        'bottomLeft',\n        'bottomRight'\n    ]);\n}\n/**\n * Converts the given value into a padding object with pre-computed width/height.\n * @param value - If a number, set the value to all TRBL component,\n *  else, if an object, use defined properties and sets undefined ones to 0.\n *  x / y are shorthands for same value for left/right and top/bottom.\n * @returns The padding values (top, right, bottom, left, width, height)\n * @since 2.7.0\n */ function toPadding(value) {\n    const obj = toTRBL(value);\n    obj.width = obj.left + obj.right;\n    obj.height = obj.top + obj.bottom;\n    return obj;\n}\n/**\n * Parses font options and returns the font object.\n * @param options - A object that contains font options to be parsed.\n * @param fallback - A object that contains fallback font options.\n * @return The font object.\n * @private\n */ function toFont(options, fallback) {\n    options = options || {};\n    fallback = fallback || defaults.font;\n    let size = valueOrDefault(options.size, fallback.size);\n    if (typeof size === 'string') {\n        size = parseInt(size, 10);\n    }\n    let style = valueOrDefault(options.style, fallback.style);\n    if (style && !('' + style).match(FONT_STYLE)) {\n        console.warn('Invalid font style specified: \"' + style + '\"');\n        style = undefined;\n    }\n    const font = {\n        family: valueOrDefault(options.family, fallback.family),\n        lineHeight: toLineHeight(valueOrDefault(options.lineHeight, fallback.lineHeight), size),\n        size,\n        style,\n        weight: valueOrDefault(options.weight, fallback.weight),\n        string: ''\n    };\n    font.string = toFontString(font);\n    return font;\n}\n/**\n * Evaluates the given `inputs` sequentially and returns the first defined value.\n * @param inputs - An array of values, falling back to the last value.\n * @param context - If defined and the current value is a function, the value\n * is called with `context` as first argument and the result becomes the new input.\n * @param index - If defined and the current value is an array, the value\n * at `index` become the new input.\n * @param info - object to return information about resolution in\n * @param info.cacheable - Will be set to `false` if option is not cacheable.\n * @since 2.7.0\n */ function resolve(inputs, context, index, info) {\n    let cacheable = true;\n    let i, ilen, value;\n    for(i = 0, ilen = inputs.length; i < ilen; ++i){\n        value = inputs[i];\n        if (value === undefined) {\n            continue;\n        }\n        if (context !== undefined && typeof value === 'function') {\n            value = value(context);\n            cacheable = false;\n        }\n        if (index !== undefined && isArray(value)) {\n            value = value[index % value.length];\n            cacheable = false;\n        }\n        if (value !== undefined) {\n            if (info && !cacheable) {\n                info.cacheable = false;\n            }\n            return value;\n        }\n    }\n}\n/**\n * @param minmax\n * @param grace\n * @param beginAtZero\n * @private\n */ function _addGrace(minmax, grace, beginAtZero) {\n    const { min , max  } = minmax;\n    const change = toDimension(grace, (max - min) / 2);\n    const keepZero = (value, add)=>beginAtZero && value === 0 ? 0 : value + add;\n    return {\n        min: keepZero(min, -Math.abs(change)),\n        max: keepZero(max, change)\n    };\n}\nfunction createContext(parentContext, context) {\n    return Object.assign(Object.create(parentContext), context);\n}\n\n/**\n * Creates a Proxy for resolving raw values for options.\n * @param scopes - The option scopes to look for values, in resolution order\n * @param prefixes - The prefixes for values, in resolution order.\n * @param rootScopes - The root option scopes\n * @param fallback - Parent scopes fallback\n * @param getTarget - callback for getting the target for changed values\n * @returns Proxy\n * @private\n */ function _createResolver(scopes, prefixes = [\n    ''\n], rootScopes, fallback, getTarget = ()=>scopes[0]) {\n    const finalRootScopes = rootScopes || scopes;\n    if (typeof fallback === 'undefined') {\n        fallback = _resolve('_fallback', scopes);\n    }\n    const cache = {\n        [Symbol.toStringTag]: 'Object',\n        _cacheable: true,\n        _scopes: scopes,\n        _rootScopes: finalRootScopes,\n        _fallback: fallback,\n        _getTarget: getTarget,\n        override: (scope)=>_createResolver([\n                scope,\n                ...scopes\n            ], prefixes, finalRootScopes, fallback)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete target._keys; // remove cached keys\n            delete scopes[0][prop]; // remove from top level scope\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop) {\n            return _cached(target, prop, ()=>_resolveWithPrefixes(prop, prefixes, scopes, target));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return Reflect.getOwnPropertyDescriptor(target._scopes[0], prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(scopes[0]);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return getKeysFromAllScopes(target).includes(prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys (target) {\n            return getKeysFromAllScopes(target);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            const storage = target._storage || (target._storage = getTarget());\n            target[prop] = storage[prop] = value; // set to top level scope + cache\n            delete target._keys; // remove cached keys\n            return true;\n        }\n    });\n}\n/**\n * Returns an Proxy for resolving option values with context.\n * @param proxy - The Proxy returned by `_createResolver`\n * @param context - Context object for scriptable/indexable options\n * @param subProxy - The proxy provided for scriptable options\n * @param descriptorDefaults - Defaults for descriptors\n * @private\n */ function _attachContext(proxy, context, subProxy, descriptorDefaults) {\n    const cache = {\n        _cacheable: false,\n        _proxy: proxy,\n        _context: context,\n        _subProxy: subProxy,\n        _stack: new Set(),\n        _descriptors: _descriptors(proxy, descriptorDefaults),\n        setContext: (ctx)=>_attachContext(proxy, ctx, subProxy, descriptorDefaults),\n        override: (scope)=>_attachContext(proxy.override(scope), context, subProxy, descriptorDefaults)\n    };\n    return new Proxy(cache, {\n        /**\n     * A trap for the delete operator.\n     */ deleteProperty (target, prop) {\n            delete target[prop]; // remove from cache\n            delete proxy[prop]; // remove from proxy\n            return true;\n        },\n        /**\n     * A trap for getting property values.\n     */ get (target, prop, receiver) {\n            return _cached(target, prop, ()=>_resolveWithContext(target, prop, receiver));\n        },\n        /**\n     * A trap for Object.getOwnPropertyDescriptor.\n     * Also used by Object.hasOwnProperty.\n     */ getOwnPropertyDescriptor (target, prop) {\n            return target._descriptors.allKeys ? Reflect.has(proxy, prop) ? {\n                enumerable: true,\n                configurable: true\n            } : undefined : Reflect.getOwnPropertyDescriptor(proxy, prop);\n        },\n        /**\n     * A trap for Object.getPrototypeOf.\n     */ getPrototypeOf () {\n            return Reflect.getPrototypeOf(proxy);\n        },\n        /**\n     * A trap for the in operator.\n     */ has (target, prop) {\n            return Reflect.has(proxy, prop);\n        },\n        /**\n     * A trap for Object.getOwnPropertyNames and Object.getOwnPropertySymbols.\n     */ ownKeys () {\n            return Reflect.ownKeys(proxy);\n        },\n        /**\n     * A trap for setting property values.\n     */ set (target, prop, value) {\n            proxy[prop] = value; // set to proxy\n            delete target[prop]; // remove from cache\n            return true;\n        }\n    });\n}\n/**\n * @private\n */ function _descriptors(proxy, defaults = {\n    scriptable: true,\n    indexable: true\n}) {\n    const { _scriptable =defaults.scriptable , _indexable =defaults.indexable , _allKeys =defaults.allKeys  } = proxy;\n    return {\n        allKeys: _allKeys,\n        scriptable: _scriptable,\n        indexable: _indexable,\n        isScriptable: isFunction(_scriptable) ? _scriptable : ()=>_scriptable,\n        isIndexable: isFunction(_indexable) ? _indexable : ()=>_indexable\n    };\n}\nconst readKey = (prefix, name)=>prefix ? prefix + _capitalize(name) : name;\nconst needsSubResolver = (prop, value)=>isObject(value) && prop !== 'adapters' && (Object.getPrototypeOf(value) === null || value.constructor === Object);\nfunction _cached(target, prop, resolve) {\n    if (Object.prototype.hasOwnProperty.call(target, prop) || prop === 'constructor') {\n        return target[prop];\n    }\n    const value = resolve();\n    // cache the resolved value\n    target[prop] = value;\n    return value;\n}\nfunction _resolveWithContext(target, prop, receiver) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    let value = _proxy[prop]; // resolve from proxy\n    // resolve with context\n    if (isFunction(value) && descriptors.isScriptable(prop)) {\n        value = _resolveScriptable(prop, value, target, receiver);\n    }\n    if (isArray(value) && value.length) {\n        value = _resolveArray(prop, value, target, descriptors.isIndexable);\n    }\n    if (needsSubResolver(prop, value)) {\n        // if the resolved value is an object, create a sub resolver for it\n        value = _attachContext(value, _context, _subProxy && _subProxy[prop], descriptors);\n    }\n    return value;\n}\nfunction _resolveScriptable(prop, getValue, target, receiver) {\n    const { _proxy , _context , _subProxy , _stack  } = target;\n    if (_stack.has(prop)) {\n        throw new Error('Recursion detected: ' + Array.from(_stack).join('->') + '->' + prop);\n    }\n    _stack.add(prop);\n    let value = getValue(_context, _subProxy || receiver);\n    _stack.delete(prop);\n    if (needsSubResolver(prop, value)) {\n        // When scriptable option returns an object, create a resolver on that.\n        value = createSubResolver(_proxy._scopes, _proxy, prop, value);\n    }\n    return value;\n}\nfunction _resolveArray(prop, value, target, isIndexable) {\n    const { _proxy , _context , _subProxy , _descriptors: descriptors  } = target;\n    if (typeof _context.index !== 'undefined' && isIndexable(prop)) {\n        return value[_context.index % value.length];\n    } else if (isObject(value[0])) {\n        // Array of objects, return array or resolvers\n        const arr = value;\n        const scopes = _proxy._scopes.filter((s)=>s !== arr);\n        value = [];\n        for (const item of arr){\n            const resolver = createSubResolver(scopes, _proxy, prop, item);\n            value.push(_attachContext(resolver, _context, _subProxy && _subProxy[prop], descriptors));\n        }\n    }\n    return value;\n}\nfunction resolveFallback(fallback, prop, value) {\n    return isFunction(fallback) ? fallback(prop, value) : fallback;\n}\nconst getScope = (key, parent)=>key === true ? parent : typeof key === 'string' ? resolveObjectKey(parent, key) : undefined;\nfunction addScopes(set, parentScopes, key, parentFallback, value) {\n    for (const parent of parentScopes){\n        const scope = getScope(key, parent);\n        if (scope) {\n            set.add(scope);\n            const fallback = resolveFallback(scope._fallback, key, value);\n            if (typeof fallback !== 'undefined' && fallback !== key && fallback !== parentFallback) {\n                // When we reach the descriptor that defines a new _fallback, return that.\n                // The fallback will resume to that new scope.\n                return fallback;\n            }\n        } else if (scope === false && typeof parentFallback !== 'undefined' && key !== parentFallback) {\n            // Fallback to `false` results to `false`, when falling back to different key.\n            // For example `interaction` from `hover` or `plugins.tooltip` and `animation` from `animations`\n            return null;\n        }\n    }\n    return false;\n}\nfunction createSubResolver(parentScopes, resolver, prop, value) {\n    const rootScopes = resolver._rootScopes;\n    const fallback = resolveFallback(resolver._fallback, prop, value);\n    const allScopes = [\n        ...parentScopes,\n        ...rootScopes\n    ];\n    const set = new Set();\n    set.add(value);\n    let key = addScopesFromKey(set, allScopes, prop, fallback || prop, value);\n    if (key === null) {\n        return false;\n    }\n    if (typeof fallback !== 'undefined' && fallback !== prop) {\n        key = addScopesFromKey(set, allScopes, fallback, key, value);\n        if (key === null) {\n            return false;\n        }\n    }\n    return _createResolver(Array.from(set), [\n        ''\n    ], rootScopes, fallback, ()=>subGetTarget(resolver, prop, value));\n}\nfunction addScopesFromKey(set, allScopes, key, fallback, item) {\n    while(key){\n        key = addScopes(set, allScopes, key, fallback, item);\n    }\n    return key;\n}\nfunction subGetTarget(resolver, prop, value) {\n    const parent = resolver._getTarget();\n    if (!(prop in parent)) {\n        parent[prop] = {};\n    }\n    const target = parent[prop];\n    if (isArray(target) && isObject(value)) {\n        // For array of objects, the object is used to store updated values\n        return value;\n    }\n    return target || {};\n}\nfunction _resolveWithPrefixes(prop, prefixes, scopes, proxy) {\n    let value;\n    for (const prefix of prefixes){\n        value = _resolve(readKey(prefix, prop), scopes);\n        if (typeof value !== 'undefined') {\n            return needsSubResolver(prop, value) ? createSubResolver(scopes, proxy, prop, value) : value;\n        }\n    }\n}\nfunction _resolve(key, scopes) {\n    for (const scope of scopes){\n        if (!scope) {\n            continue;\n        }\n        const value = scope[key];\n        if (typeof value !== 'undefined') {\n            return value;\n        }\n    }\n}\nfunction getKeysFromAllScopes(target) {\n    let keys = target._keys;\n    if (!keys) {\n        keys = target._keys = resolveKeysFromAllScopes(target._scopes);\n    }\n    return keys;\n}\nfunction resolveKeysFromAllScopes(scopes) {\n    const set = new Set();\n    for (const scope of scopes){\n        for (const key of Object.keys(scope).filter((k)=>!k.startsWith('_'))){\n            set.add(key);\n        }\n    }\n    return Array.from(set);\n}\nfunction _parseObjectDataRadialScale(meta, data, start, count) {\n    const { iScale  } = meta;\n    const { key ='r'  } = this._parsing;\n    const parsed = new Array(count);\n    let i, ilen, index, item;\n    for(i = 0, ilen = count; i < ilen; ++i){\n        index = i + start;\n        item = data[index];\n        parsed[i] = {\n            r: iScale.parse(resolveObjectKey(item, key), index)\n        };\n    }\n    return parsed;\n}\n\nconst EPSILON = Number.EPSILON || 1e-14;\nconst getPoint = (points, i)=>i < points.length && !points[i].skip && points[i];\nconst getValueAxis = (indexAxis)=>indexAxis === 'x' ? 'y' : 'x';\nfunction splineCurve(firstPoint, middlePoint, afterPoint, t) {\n    // Props to Rob Spencer at scaled innovation for his post on splining between points\n    // http://scaledinnovation.com/analytics/splines/aboutSplines.html\n    // This function must also respect \"skipped\" points\n    const previous = firstPoint.skip ? middlePoint : firstPoint;\n    const current = middlePoint;\n    const next = afterPoint.skip ? middlePoint : afterPoint;\n    const d01 = distanceBetweenPoints(current, previous);\n    const d12 = distanceBetweenPoints(next, current);\n    let s01 = d01 / (d01 + d12);\n    let s12 = d12 / (d01 + d12);\n    // If all points are the same, s01 & s02 will be inf\n    s01 = isNaN(s01) ? 0 : s01;\n    s12 = isNaN(s12) ? 0 : s12;\n    const fa = t * s01; // scaling factor for triangle Ta\n    const fb = t * s12;\n    return {\n        previous: {\n            x: current.x - fa * (next.x - previous.x),\n            y: current.y - fa * (next.y - previous.y)\n        },\n        next: {\n            x: current.x + fb * (next.x - previous.x),\n            y: current.y + fb * (next.y - previous.y)\n        }\n    };\n}\n/**\n * Adjust tangents to ensure monotonic properties\n */ function monotoneAdjust(points, deltaK, mK) {\n    const pointsLen = points.length;\n    let alphaK, betaK, tauK, squaredMagnitude, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen - 1; ++i){\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent || !pointAfter) {\n            continue;\n        }\n        if (almostEquals(deltaK[i], 0, EPSILON)) {\n            mK[i] = mK[i + 1] = 0;\n            continue;\n        }\n        alphaK = mK[i] / deltaK[i];\n        betaK = mK[i + 1] / deltaK[i];\n        squaredMagnitude = Math.pow(alphaK, 2) + Math.pow(betaK, 2);\n        if (squaredMagnitude <= 9) {\n            continue;\n        }\n        tauK = 3 / Math.sqrt(squaredMagnitude);\n        mK[i] = alphaK * tauK * deltaK[i];\n        mK[i + 1] = betaK * tauK * deltaK[i];\n    }\n}\nfunction monotoneCompute(points, mK, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    let delta, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(let i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        const iPixel = pointCurrent[indexAxis];\n        const vPixel = pointCurrent[valueAxis];\n        if (pointBefore) {\n            delta = (iPixel - pointBefore[indexAxis]) / 3;\n            pointCurrent[`cp1${indexAxis}`] = iPixel - delta;\n            pointCurrent[`cp1${valueAxis}`] = vPixel - delta * mK[i];\n        }\n        if (pointAfter) {\n            delta = (pointAfter[indexAxis] - iPixel) / 3;\n            pointCurrent[`cp2${indexAxis}`] = iPixel + delta;\n            pointCurrent[`cp2${valueAxis}`] = vPixel + delta * mK[i];\n        }\n    }\n}\n/**\n * This function calculates Bézier control points in a similar way than |splineCurve|,\n * but preserves monotonicity of the provided data and ensures no local extremums are added\n * between the dataset discrete points due to the interpolation.\n * See : https://en.wikipedia.org/wiki/Monotone_cubic_interpolation\n */ function splineCurveMonotone(points, indexAxis = 'x') {\n    const valueAxis = getValueAxis(indexAxis);\n    const pointsLen = points.length;\n    const deltaK = Array(pointsLen).fill(0);\n    const mK = Array(pointsLen);\n    // Calculate slopes (deltaK) and initialize tangents (mK)\n    let i, pointBefore, pointCurrent;\n    let pointAfter = getPoint(points, 0);\n    for(i = 0; i < pointsLen; ++i){\n        pointBefore = pointCurrent;\n        pointCurrent = pointAfter;\n        pointAfter = getPoint(points, i + 1);\n        if (!pointCurrent) {\n            continue;\n        }\n        if (pointAfter) {\n            const slopeDelta = pointAfter[indexAxis] - pointCurrent[indexAxis];\n            // In the case of two points that appear at the same x pixel, slopeDeltaX is 0\n            deltaK[i] = slopeDelta !== 0 ? (pointAfter[valueAxis] - pointCurrent[valueAxis]) / slopeDelta : 0;\n        }\n        mK[i] = !pointBefore ? deltaK[i] : !pointAfter ? deltaK[i - 1] : sign(deltaK[i - 1]) !== sign(deltaK[i]) ? 0 : (deltaK[i - 1] + deltaK[i]) / 2;\n    }\n    monotoneAdjust(points, deltaK, mK);\n    monotoneCompute(points, mK, indexAxis);\n}\nfunction capControlPoint(pt, min, max) {\n    return Math.max(Math.min(pt, max), min);\n}\nfunction capBezierPoints(points, area) {\n    let i, ilen, point, inArea, inAreaPrev;\n    let inAreaNext = _isPointInArea(points[0], area);\n    for(i = 0, ilen = points.length; i < ilen; ++i){\n        inAreaPrev = inArea;\n        inArea = inAreaNext;\n        inAreaNext = i < ilen - 1 && _isPointInArea(points[i + 1], area);\n        if (!inArea) {\n            continue;\n        }\n        point = points[i];\n        if (inAreaPrev) {\n            point.cp1x = capControlPoint(point.cp1x, area.left, area.right);\n            point.cp1y = capControlPoint(point.cp1y, area.top, area.bottom);\n        }\n        if (inAreaNext) {\n            point.cp2x = capControlPoint(point.cp2x, area.left, area.right);\n            point.cp2y = capControlPoint(point.cp2y, area.top, area.bottom);\n        }\n    }\n}\n/**\n * @private\n */ function _updateBezierControlPoints(points, options, area, loop, indexAxis) {\n    let i, ilen, point, controlPoints;\n    // Only consider points that are drawn in case the spanGaps option is used\n    if (options.spanGaps) {\n        points = points.filter((pt)=>!pt.skip);\n    }\n    if (options.cubicInterpolationMode === 'monotone') {\n        splineCurveMonotone(points, indexAxis);\n    } else {\n        let prev = loop ? points[points.length - 1] : points[0];\n        for(i = 0, ilen = points.length; i < ilen; ++i){\n            point = points[i];\n            controlPoints = splineCurve(prev, point, points[Math.min(i + 1, ilen - (loop ? 0 : 1)) % ilen], options.tension);\n            point.cp1x = controlPoints.previous.x;\n            point.cp1y = controlPoints.previous.y;\n            point.cp2x = controlPoints.next.x;\n            point.cp2y = controlPoints.next.y;\n            prev = point;\n        }\n    }\n    if (options.capBezierPoints) {\n        capBezierPoints(points, area);\n    }\n}\n\n/**\n * @private\n */ function _isDomSupported() {\n    return typeof window !== 'undefined' && typeof document !== 'undefined';\n}\n/**\n * @private\n */ function _getParentNode(domNode) {\n    let parent = domNode.parentNode;\n    if (parent && parent.toString() === '[object ShadowRoot]') {\n        parent = parent.host;\n    }\n    return parent;\n}\n/**\n * convert max-width/max-height values that may be percentages into a number\n * @private\n */ function parseMaxStyle(styleValue, node, parentProperty) {\n    let valueInPixels;\n    if (typeof styleValue === 'string') {\n        valueInPixels = parseInt(styleValue, 10);\n        if (styleValue.indexOf('%') !== -1) {\n            // percentage * size in dimension\n            valueInPixels = valueInPixels / 100 * node.parentNode[parentProperty];\n        }\n    } else {\n        valueInPixels = styleValue;\n    }\n    return valueInPixels;\n}\nconst getComputedStyle = (element)=>element.ownerDocument.defaultView.getComputedStyle(element, null);\nfunction getStyle(el, property) {\n    return getComputedStyle(el).getPropertyValue(property);\n}\nconst positions = [\n    'top',\n    'right',\n    'bottom',\n    'left'\n];\nfunction getPositionedStyle(styles, style, suffix) {\n    const result = {};\n    suffix = suffix ? '-' + suffix : '';\n    for(let i = 0; i < 4; i++){\n        const pos = positions[i];\n        result[pos] = parseFloat(styles[style + '-' + pos + suffix]) || 0;\n    }\n    result.width = result.left + result.right;\n    result.height = result.top + result.bottom;\n    return result;\n}\nconst useOffsetPos = (x, y, target)=>(x > 0 || y > 0) && (!target || !target.shadowRoot);\n/**\n * @param e\n * @param canvas\n * @returns Canvas position\n */ function getCanvasPosition(e, canvas) {\n    const touches = e.touches;\n    const source = touches && touches.length ? touches[0] : e;\n    const { offsetX , offsetY  } = source;\n    let box = false;\n    let x, y;\n    if (useOffsetPos(offsetX, offsetY, e.target)) {\n        x = offsetX;\n        y = offsetY;\n    } else {\n        const rect = canvas.getBoundingClientRect();\n        x = source.clientX - rect.left;\n        y = source.clientY - rect.top;\n        box = true;\n    }\n    return {\n        x,\n        y,\n        box\n    };\n}\n/**\n * Gets an event's x, y coordinates, relative to the chart area\n * @param event\n * @param chart\n * @returns x and y coordinates of the event\n */ function getRelativePosition(event, chart) {\n    if ('native' in event) {\n        return event;\n    }\n    const { canvas , currentDevicePixelRatio  } = chart;\n    const style = getComputedStyle(canvas);\n    const borderBox = style.boxSizing === 'border-box';\n    const paddings = getPositionedStyle(style, 'padding');\n    const borders = getPositionedStyle(style, 'border', 'width');\n    const { x , y , box  } = getCanvasPosition(event, canvas);\n    const xOffset = paddings.left + (box && borders.left);\n    const yOffset = paddings.top + (box && borders.top);\n    let { width , height  } = chart;\n    if (borderBox) {\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    return {\n        x: Math.round((x - xOffset) / width * canvas.width / currentDevicePixelRatio),\n        y: Math.round((y - yOffset) / height * canvas.height / currentDevicePixelRatio)\n    };\n}\nfunction getContainerSize(canvas, width, height) {\n    let maxWidth, maxHeight;\n    if (width === undefined || height === undefined) {\n        const container = canvas && _getParentNode(canvas);\n        if (!container) {\n            width = canvas.clientWidth;\n            height = canvas.clientHeight;\n        } else {\n            const rect = container.getBoundingClientRect(); // this is the border box of the container\n            const containerStyle = getComputedStyle(container);\n            const containerBorder = getPositionedStyle(containerStyle, 'border', 'width');\n            const containerPadding = getPositionedStyle(containerStyle, 'padding');\n            width = rect.width - containerPadding.width - containerBorder.width;\n            height = rect.height - containerPadding.height - containerBorder.height;\n            maxWidth = parseMaxStyle(containerStyle.maxWidth, container, 'clientWidth');\n            maxHeight = parseMaxStyle(containerStyle.maxHeight, container, 'clientHeight');\n        }\n    }\n    return {\n        width,\n        height,\n        maxWidth: maxWidth || INFINITY,\n        maxHeight: maxHeight || INFINITY\n    };\n}\nconst round1 = (v)=>Math.round(v * 10) / 10;\n// eslint-disable-next-line complexity\nfunction getMaximumSize(canvas, bbWidth, bbHeight, aspectRatio) {\n    const style = getComputedStyle(canvas);\n    const margins = getPositionedStyle(style, 'margin');\n    const maxWidth = parseMaxStyle(style.maxWidth, canvas, 'clientWidth') || INFINITY;\n    const maxHeight = parseMaxStyle(style.maxHeight, canvas, 'clientHeight') || INFINITY;\n    const containerSize = getContainerSize(canvas, bbWidth, bbHeight);\n    let { width , height  } = containerSize;\n    if (style.boxSizing === 'content-box') {\n        const borders = getPositionedStyle(style, 'border', 'width');\n        const paddings = getPositionedStyle(style, 'padding');\n        width -= paddings.width + borders.width;\n        height -= paddings.height + borders.height;\n    }\n    width = Math.max(0, width - margins.width);\n    height = Math.max(0, aspectRatio ? width / aspectRatio : height - margins.height);\n    width = round1(Math.min(width, maxWidth, containerSize.maxWidth));\n    height = round1(Math.min(height, maxHeight, containerSize.maxHeight));\n    if (width && !height) {\n        // https://github.com/chartjs/Chart.js/issues/4659\n        // If the canvas has width, but no height, default to aspectRatio of 2 (canvas default)\n        height = round1(width / 2);\n    }\n    const maintainHeight = bbWidth !== undefined || bbHeight !== undefined;\n    if (maintainHeight && aspectRatio && containerSize.height && height > containerSize.height) {\n        height = containerSize.height;\n        width = round1(Math.floor(height * aspectRatio));\n    }\n    return {\n        width,\n        height\n    };\n}\n/**\n * @param chart\n * @param forceRatio\n * @param forceStyle\n * @returns True if the canvas context size or transformation has changed.\n */ function retinaScale(chart, forceRatio, forceStyle) {\n    const pixelRatio = forceRatio || 1;\n    const deviceHeight = Math.floor(chart.height * pixelRatio);\n    const deviceWidth = Math.floor(chart.width * pixelRatio);\n    chart.height = Math.floor(chart.height);\n    chart.width = Math.floor(chart.width);\n    const canvas = chart.canvas;\n    // If no style has been set on the canvas, the render size is used as display size,\n    // making the chart visually bigger, so let's enforce it to the \"correct\" values.\n    // See https://github.com/chartjs/Chart.js/issues/3575\n    if (canvas.style && (forceStyle || !canvas.style.height && !canvas.style.width)) {\n        canvas.style.height = `${chart.height}px`;\n        canvas.style.width = `${chart.width}px`;\n    }\n    if (chart.currentDevicePixelRatio !== pixelRatio || canvas.height !== deviceHeight || canvas.width !== deviceWidth) {\n        chart.currentDevicePixelRatio = pixelRatio;\n        canvas.height = deviceHeight;\n        canvas.width = deviceWidth;\n        chart.ctx.setTransform(pixelRatio, 0, 0, pixelRatio, 0, 0);\n        return true;\n    }\n    return false;\n}\n/**\n * Detects support for options object argument in addEventListener.\n * https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener#Safely_detecting_option_support\n * @private\n */ const supportsEventListenerOptions = function() {\n    let passiveSupported = false;\n    try {\n        const options = {\n            get passive () {\n                passiveSupported = true;\n                return false;\n            }\n        };\n        if (_isDomSupported()) {\n            window.addEventListener('test', null, options);\n            window.removeEventListener('test', null, options);\n        }\n    } catch (e) {\n    // continue regardless of error\n    }\n    return passiveSupported;\n}();\n/**\n * The \"used\" size is the final value of a dimension property after all calculations have\n * been performed. This method uses the computed style of `element` but returns undefined\n * if the computed style is not expressed in pixels. That can happen in some cases where\n * `element` has a size relative to its parent and this last one is not yet displayed,\n * for example because of `display: none` on a parent node.\n * @see https://developer.mozilla.org/en-US/docs/Web/CSS/used_value\n * @returns Size in pixels or undefined if unknown.\n */ function readUsedSize(element, property) {\n    const value = getStyle(element, property);\n    const matches = value && value.match(/^(\\d+)(\\.\\d+)?px$/);\n    return matches ? +matches[1] : undefined;\n}\n\n/**\n * @private\n */ function _pointInLine(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: p1.y + t * (p2.y - p1.y)\n    };\n}\n/**\n * @private\n */ function _steppedInterpolation(p1, p2, t, mode) {\n    return {\n        x: p1.x + t * (p2.x - p1.x),\n        y: mode === 'middle' ? t < 0.5 ? p1.y : p2.y : mode === 'after' ? t < 1 ? p1.y : p2.y : t > 0 ? p2.y : p1.y\n    };\n}\n/**\n * @private\n */ function _bezierInterpolation(p1, p2, t, mode) {\n    const cp1 = {\n        x: p1.cp2x,\n        y: p1.cp2y\n    };\n    const cp2 = {\n        x: p2.cp1x,\n        y: p2.cp1y\n    };\n    const a = _pointInLine(p1, cp1, t);\n    const b = _pointInLine(cp1, cp2, t);\n    const c = _pointInLine(cp2, p2, t);\n    const d = _pointInLine(a, b, t);\n    const e = _pointInLine(b, c, t);\n    return _pointInLine(d, e, t);\n}\n\nconst getRightToLeftAdapter = function(rectX, width) {\n    return {\n        x (x) {\n            return rectX + rectX + width - x;\n        },\n        setWidth (w) {\n            width = w;\n        },\n        textAlign (align) {\n            if (align === 'center') {\n                return align;\n            }\n            return align === 'right' ? 'left' : 'right';\n        },\n        xPlus (x, value) {\n            return x - value;\n        },\n        leftForLtr (x, itemWidth) {\n            return x - itemWidth;\n        }\n    };\n};\nconst getLeftToRightAdapter = function() {\n    return {\n        x (x) {\n            return x;\n        },\n        setWidth (w) {},\n        textAlign (align) {\n            return align;\n        },\n        xPlus (x, value) {\n            return x + value;\n        },\n        leftForLtr (x, _itemWidth) {\n            return x;\n        }\n    };\n};\nfunction getRtlAdapter(rtl, rectX, width) {\n    return rtl ? getRightToLeftAdapter(rectX, width) : getLeftToRightAdapter();\n}\nfunction overrideTextDirection(ctx, direction) {\n    let style, original;\n    if (direction === 'ltr' || direction === 'rtl') {\n        style = ctx.canvas.style;\n        original = [\n            style.getPropertyValue('direction'),\n            style.getPropertyPriority('direction')\n        ];\n        style.setProperty('direction', direction, 'important');\n        ctx.prevTextDirection = original;\n    }\n}\nfunction restoreTextDirection(ctx, original) {\n    if (original !== undefined) {\n        delete ctx.prevTextDirection;\n        ctx.canvas.style.setProperty('direction', original[0], original[1]);\n    }\n}\n\nfunction propertyFn(property) {\n    if (property === 'angle') {\n        return {\n            between: _angleBetween,\n            compare: _angleDiff,\n            normalize: _normalizeAngle\n        };\n    }\n    return {\n        between: _isBetween,\n        compare: (a, b)=>a - b,\n        normalize: (x)=>x\n    };\n}\nfunction normalizeSegment({ start , end , count , loop , style  }) {\n    return {\n        start: start % count,\n        end: end % count,\n        loop: loop && (end - start + 1) % count === 0,\n        style\n    };\n}\nfunction getSegment(segment, points, bounds) {\n    const { property , start: startBound , end: endBound  } = bounds;\n    const { between , normalize  } = propertyFn(property);\n    const count = points.length;\n    let { start , end , loop  } = segment;\n    let i, ilen;\n    if (loop) {\n        start += count;\n        end += count;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            if (!between(normalize(points[start % count][property]), startBound, endBound)) {\n                break;\n            }\n            start--;\n            end--;\n        }\n        start %= count;\n        end %= count;\n    }\n    if (end < start) {\n        end += count;\n    }\n    return {\n        start,\n        end,\n        loop,\n        style: segment.style\n    };\n}\n function _boundSegment(segment, points, bounds) {\n    if (!bounds) {\n        return [\n            segment\n        ];\n    }\n    const { property , start: startBound , end: endBound  } = bounds;\n    const count = points.length;\n    const { compare , between , normalize  } = propertyFn(property);\n    const { start , end , loop , style  } = getSegment(segment, points, bounds);\n    const result = [];\n    let inside = false;\n    let subStart = null;\n    let value, point, prevValue;\n    const startIsBefore = ()=>between(startBound, prevValue, value) && compare(startBound, prevValue) !== 0;\n    const endIsBefore = ()=>compare(endBound, value) === 0 || between(endBound, prevValue, value);\n    const shouldStart = ()=>inside || startIsBefore();\n    const shouldStop = ()=>!inside || endIsBefore();\n    for(let i = start, prev = start; i <= end; ++i){\n        point = points[i % count];\n        if (point.skip) {\n            continue;\n        }\n        value = normalize(point[property]);\n        if (value === prevValue) {\n            continue;\n        }\n        inside = between(value, startBound, endBound);\n        if (subStart === null && shouldStart()) {\n            subStart = compare(value, startBound) === 0 ? i : prev;\n        }\n        if (subStart !== null && shouldStop()) {\n            result.push(normalizeSegment({\n                start: subStart,\n                end: i,\n                loop,\n                count,\n                style\n            }));\n            subStart = null;\n        }\n        prev = i;\n        prevValue = value;\n    }\n    if (subStart !== null) {\n        result.push(normalizeSegment({\n            start: subStart,\n            end,\n            loop,\n            count,\n            style\n        }));\n    }\n    return result;\n}\n function _boundSegments(line, bounds) {\n    const result = [];\n    const segments = line.segments;\n    for(let i = 0; i < segments.length; i++){\n        const sub = _boundSegment(segments[i], line.points, bounds);\n        if (sub.length) {\n            result.push(...sub);\n        }\n    }\n    return result;\n}\n function findStartAndEnd(points, count, loop, spanGaps) {\n    let start = 0;\n    let end = count - 1;\n    if (loop && !spanGaps) {\n        while(start < count && !points[start].skip){\n            start++;\n        }\n    }\n    while(start < count && points[start].skip){\n        start++;\n    }\n    start %= count;\n    if (loop) {\n        end += start;\n    }\n    while(end > start && points[end % count].skip){\n        end--;\n    }\n    end %= count;\n    return {\n        start,\n        end\n    };\n}\n function solidSegments(points, start, max, loop) {\n    const count = points.length;\n    const result = [];\n    let last = start;\n    let prev = points[start];\n    let end;\n    for(end = start + 1; end <= max; ++end){\n        const cur = points[end % count];\n        if (cur.skip || cur.stop) {\n            if (!prev.skip) {\n                loop = false;\n                result.push({\n                    start: start % count,\n                    end: (end - 1) % count,\n                    loop\n                });\n                start = last = cur.stop ? end : null;\n            }\n        } else {\n            last = end;\n            if (prev.skip) {\n                start = end;\n            }\n        }\n        prev = cur;\n    }\n    if (last !== null) {\n        result.push({\n            start: start % count,\n            end: last % count,\n            loop\n        });\n    }\n    return result;\n}\n function _computeSegments(line, segmentOptions) {\n    const points = line.points;\n    const spanGaps = line.options.spanGaps;\n    const count = points.length;\n    if (!count) {\n        return [];\n    }\n    const loop = !!line._loop;\n    const { start , end  } = findStartAndEnd(points, count, loop, spanGaps);\n    if (spanGaps === true) {\n        return splitByStyles(line, [\n            {\n                start,\n                end,\n                loop\n            }\n        ], points, segmentOptions);\n    }\n    const max = end < start ? end + count : end;\n    const completeLoop = !!line._fullLoop && start === 0 && end === count - 1;\n    return splitByStyles(line, solidSegments(points, start, max, completeLoop), points, segmentOptions);\n}\n function splitByStyles(line, segments, points, segmentOptions) {\n    if (!segmentOptions || !segmentOptions.setContext || !points) {\n        return segments;\n    }\n    return doSplitByStyles(line, segments, points, segmentOptions);\n}\n function doSplitByStyles(line, segments, points, segmentOptions) {\n    const chartContext = line._chart.getContext();\n    const baseStyle = readStyle(line.options);\n    const { _datasetIndex: datasetIndex , options: { spanGaps  }  } = line;\n    const count = points.length;\n    const result = [];\n    let prevStyle = baseStyle;\n    let start = segments[0].start;\n    let i = start;\n    function addStyle(s, e, l, st) {\n        const dir = spanGaps ? -1 : 1;\n        if (s === e) {\n            return;\n        }\n        s += count;\n        while(points[s % count].skip){\n            s -= dir;\n        }\n        while(points[e % count].skip){\n            e += dir;\n        }\n        if (s % count !== e % count) {\n            result.push({\n                start: s % count,\n                end: e % count,\n                loop: l,\n                style: st\n            });\n            prevStyle = st;\n            start = e % count;\n        }\n    }\n    for (const segment of segments){\n        start = spanGaps ? start : segment.start;\n        let prev = points[start % count];\n        let style;\n        for(i = start + 1; i <= segment.end; i++){\n            const pt = points[i % count];\n            style = readStyle(segmentOptions.setContext(createContext(chartContext, {\n                type: 'segment',\n                p0: prev,\n                p1: pt,\n                p0DataIndex: (i - 1) % count,\n                p1DataIndex: i % count,\n                datasetIndex\n            })));\n            if (styleChanged(style, prevStyle)) {\n                addStyle(start, i - 1, segment.loop, prevStyle);\n            }\n            prev = pt;\n            prevStyle = style;\n        }\n        if (start < i - 1) {\n            addStyle(start, i - 1, segment.loop, prevStyle);\n        }\n    }\n    return result;\n}\nfunction readStyle(options) {\n    return {\n        backgroundColor: options.backgroundColor,\n        borderCapStyle: options.borderCapStyle,\n        borderDash: options.borderDash,\n        borderDashOffset: options.borderDashOffset,\n        borderJoinStyle: options.borderJoinStyle,\n        borderWidth: options.borderWidth,\n        borderColor: options.borderColor\n    };\n}\nfunction styleChanged(style, prevStyle) {\n    if (!prevStyle) {\n        return false;\n    }\n    const cache = [];\n    const replacer = function(key, value) {\n        if (!isPatternOrGradient(value)) {\n            return value;\n        }\n        if (!cache.includes(value)) {\n            cache.push(value);\n        }\n        return cache.indexOf(value);\n    };\n    return JSON.stringify(style, replacer) !== JSON.stringify(prevStyle, replacer);\n}\n\nfunction getSizeForArea(scale, chartArea, field) {\n    return scale.options.clip ? scale[field] : chartArea[field];\n}\nfunction getDatasetArea(meta, chartArea) {\n    const { xScale , yScale  } = meta;\n    if (xScale && yScale) {\n        return {\n            left: getSizeForArea(xScale, chartArea, 'left'),\n            right: getSizeForArea(xScale, chartArea, 'right'),\n            top: getSizeForArea(yScale, chartArea, 'top'),\n            bottom: getSizeForArea(yScale, chartArea, 'bottom')\n        };\n    }\n    return chartArea;\n}\nfunction getDatasetClipArea(chart, meta) {\n    const clip = meta._clip;\n    if (clip.disabled) {\n        return false;\n    }\n    const area = getDatasetArea(meta, chart.chartArea);\n    return {\n        left: clip.left === false ? 0 : area.left - (clip.left === true ? 0 : clip.left),\n        right: clip.right === false ? chart.width : area.right + (clip.right === true ? 0 : clip.right),\n        top: clip.top === false ? 0 : area.top - (clip.top === true ? 0 : clip.top),\n        bottom: clip.bottom === false ? chart.height : area.bottom + (clip.bottom === true ? 0 : clip.bottom)\n    };\n}\n\nexport { unclipArea as $, _rlookupByKey as A, _lookupByKey as B, _isPointInArea as C, getAngleFromPoint as D, toPadding as E, each as F, getMaximumSize as G, HALF_PI as H, _getParentNode as I, readUsedSize as J, supportsEventListenerOptions as K, throttled as L, _isDomSupported as M, _factorize as N, finiteOrDefault as O, PI as P, callback as Q, _addGrace as R, _limitValue as S, TAU as T, toDegrees as U, _measureText as V, _int16Range as W, _alignPixel as X, clipArea as Y, renderText as Z, _arrayUnique as _, resolve as a, getStyle as a$, toFont as a0, _toLeftRightCenter as a1, _alignStartEnd as a2, overrides as a3, merge as a4, _capitalize as a5, descriptors as a6, isFunction as a7, _attachContext as a8, _createResolver as a9, getRtlAdapter as aA, overrideTextDirection as aB, _textX as aC, restoreTextDirection as aD, drawPointLegend as aE, distanceBetweenPoints as aF, noop as aG, _setMinAndMaxByKey as aH, niceNum as aI, almostWhole as aJ, almostEquals as aK, _decimalPlaces as aL, Ticks as aM, log10 as aN, _longestText as aO, _filterBetween as aP, _lookup as aQ, isPatternOrGradient as aR, getHoverColor as aS, clone as aT, _merger as aU, _mergerIf as aV, _deprecated as aW, _splitKey as aX, toFontString as aY, splineCurve as aZ, splineCurveMonotone as a_, _descriptors as aa, mergeIf as ab, uid as ac, debounce as ad, retinaScale as ae, clearCanvas as af, setsEqual as ag, getDatasetClipArea as ah, _elementsEqual as ai, _isClickEvent as aj, _isBetween as ak, _readValueToProps as al, _updateBezierControlPoints as am, _computeSegments as an, _boundSegments as ao, _steppedInterpolation as ap, _bezierInterpolation as aq, _pointInLine as ar, _steppedLineTo as as, _bezierCurveTo as at, drawPoint as au, addRoundedRectPath as av, toTRBL as aw, toTRBLCorners as ax, _boundSegment as ay, _normalizeAngle as az, isArray as b, fontString as b0, toLineHeight as b1, PITAU as b2, INFINITY as b3, RAD_PER_DEG as b4, QUARTER_PI as b5, TWO_THIRDS_PI as b6, _angleDiff as b7, color as c, defaults as d, effects as e, resolveObjectKey as f, isNumberFinite as g, defined as h, isObject as i, createContext as j, isNullOrUndef as k, listenArrayEvents as l, toPercentage as m, toDimension as n, formatNumber as o, _angleBetween as p, _getStartAndCountOfVisiblePoints as q, requestAnimFrame as r, sign as s, toRadians as t, unlistenArrayEvents as u, valueOrDefault as v, _scaleRangesChanged as w, isNumber as x, _parseObjectDataRadialScale as y, getRelativePosition as z };\n//# sourceMappingURL=helpers.dataset.js.map\n","/*!\n * Chart.js v4.4.9\n * https://www.chartjs.org\n * (c) 2025 Chart.js Contributors\n * Released under the MIT License\n */\nimport { r as requestAnimFrame, a as resolve, e as effects, c as color, i as isObject, d as defaults, b as isArray, v as valueOrDefault, u as unlistenArrayEvents, l as listenArrayEvents, f as resolveObjectKey, g as isNumberFinite, h as defined, s as sign, j as createContext, k as isNullOrUndef, _ as _arrayUnique, t as toRadians, m as toPercentage, n as toDimension, T as TAU, o as formatNumber, p as _angleBetween, H as HALF_PI, P as PI, q as _getStartAndCountOfVisiblePoints, w as _scaleRangesChanged, x as isNumber, y as _parseObjectDataRadialScale, z as getRelativePosition, A as _rlookupByKey, B as _lookupByKey, C as _isPointInArea, D as getAngleFromPoint, E as toPadding, F as each, G as getMaximumSize, I as _getParentNode, J as readUsedSize, K as supportsEventListenerOptions, L as throttled, M as _isDomSupported, N as _factorize, O as finiteOrDefault, Q as callback, R as _addGrace, S as _limitValue, U as toDegrees, V as _measureText, W as _int16Range, X as _alignPixel, Y as clipArea, Z as renderText, $ as unclipArea, a0 as toFont, a1 as _toLeftRightCenter, a2 as _alignStartEnd, a3 as overrides, a4 as merge, a5 as _capitalize, a6 as descriptors, a7 as isFunction, a8 as _attachContext, a9 as _createResolver, aa as _descriptors, ab as mergeIf, ac as uid, ad as debounce, ae as retinaScale, af as clearCanvas, ag as setsEqual, ah as getDatasetClipArea, ai as _elementsEqual, aj as _isClickEvent, ak as _isBetween, al as _readValueToProps, am as _updateBezierControlPoints, an as _computeSegments, ao as _boundSegments, ap as _steppedInterpolation, aq as _bezierInterpolation, ar as _pointInLine, as as _steppedLineTo, at as _bezierCurveTo, au as drawPoint, av as addRoundedRectPath, aw as toTRBL, ax as toTRBLCorners, ay as _boundSegment, az as _normalizeAngle, aA as getRtlAdapter, aB as overrideTextDirection, aC as _textX, aD as restoreTextDirection, aE as drawPointLegend, aF as distanceBetweenPoints, aG as noop, aH as _setMinAndMaxByKey, aI as niceNum, aJ as almostWhole, aK as almostEquals, aL as _decimalPlaces, aM as Ticks, aN as log10, aO as _longestText, aP as _filterBetween, aQ as _lookup } from './chunks/helpers.dataset.js';\nimport '@kurkle/color';\n\nclass Animator {\n    constructor(){\n        this._request = null;\n        this._charts = new Map();\n        this._running = false;\n        this._lastDate = undefined;\n    }\n _notify(chart, anims, date, type) {\n        const callbacks = anims.listeners[type];\n        const numSteps = anims.duration;\n        callbacks.forEach((fn)=>fn({\n                chart,\n                initial: anims.initial,\n                numSteps,\n                currentStep: Math.min(date - anims.start, numSteps)\n            }));\n    }\n _refresh() {\n        if (this._request) {\n            return;\n        }\n        this._running = true;\n        this._request = requestAnimFrame.call(window, ()=>{\n            this._update();\n            this._request = null;\n            if (this._running) {\n                this._refresh();\n            }\n        });\n    }\n _update(date = Date.now()) {\n        let remaining = 0;\n        this._charts.forEach((anims, chart)=>{\n            if (!anims.running || !anims.items.length) {\n                return;\n            }\n            const items = anims.items;\n            let i = items.length - 1;\n            let draw = false;\n            let item;\n            for(; i >= 0; --i){\n                item = items[i];\n                if (item._active) {\n                    if (item._total > anims.duration) {\n                        anims.duration = item._total;\n                    }\n                    item.tick(date);\n                    draw = true;\n                } else {\n                    items[i] = items[items.length - 1];\n                    items.pop();\n                }\n            }\n            if (draw) {\n                chart.draw();\n                this._notify(chart, anims, date, 'progress');\n            }\n            if (!items.length) {\n                anims.running = false;\n                this._notify(chart, anims, date, 'complete');\n                anims.initial = false;\n            }\n            remaining += items.length;\n        });\n        this._lastDate = date;\n        if (remaining === 0) {\n            this._running = false;\n        }\n    }\n _getAnims(chart) {\n        const charts = this._charts;\n        let anims = charts.get(chart);\n        if (!anims) {\n            anims = {\n                running: false,\n                initial: true,\n                items: [],\n                listeners: {\n                    complete: [],\n                    progress: []\n                }\n            };\n            charts.set(chart, anims);\n        }\n        return anims;\n    }\n listen(chart, event, cb) {\n        this._getAnims(chart).listeners[event].push(cb);\n    }\n add(chart, items) {\n        if (!items || !items.length) {\n            return;\n        }\n        this._getAnims(chart).items.push(...items);\n    }\n has(chart) {\n        return this._getAnims(chart).items.length > 0;\n    }\n start(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims) {\n            return;\n        }\n        anims.running = true;\n        anims.start = Date.now();\n        anims.duration = anims.items.reduce((acc, cur)=>Math.max(acc, cur._duration), 0);\n        this._refresh();\n    }\n    running(chart) {\n        if (!this._running) {\n            return false;\n        }\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.running || !anims.items.length) {\n            return false;\n        }\n        return true;\n    }\n stop(chart) {\n        const anims = this._charts.get(chart);\n        if (!anims || !anims.items.length) {\n            return;\n        }\n        const items = anims.items;\n        let i = items.length - 1;\n        for(; i >= 0; --i){\n            items[i].cancel();\n        }\n        anims.items = [];\n        this._notify(chart, anims, Date.now(), 'complete');\n    }\n remove(chart) {\n        return this._charts.delete(chart);\n    }\n}\nvar animator = /* #__PURE__ */ new Animator();\n\nconst transparent = 'transparent';\nconst interpolators = {\n    boolean (from, to, factor) {\n        return factor > 0.5 ? to : from;\n    },\n color (from, to, factor) {\n        const c0 = color(from || transparent);\n        const c1 = c0.valid && color(to || transparent);\n        return c1 && c1.valid ? c1.mix(c0, factor).hexString() : to;\n    },\n    number (from, to, factor) {\n        return from + (to - from) * factor;\n    }\n};\nclass Animation {\n    constructor(cfg, target, prop, to){\n        const currentValue = target[prop];\n        to = resolve([\n            cfg.to,\n            to,\n            currentValue,\n            cfg.from\n        ]);\n        const from = resolve([\n            cfg.from,\n            currentValue,\n            to\n        ]);\n        this._active = true;\n        this._fn = cfg.fn || interpolators[cfg.type || typeof from];\n        this._easing = effects[cfg.easing] || effects.linear;\n        this._start = Math.floor(Date.now() + (cfg.delay || 0));\n        this._duration = this._total = Math.floor(cfg.duration);\n        this._loop = !!cfg.loop;\n        this._target = target;\n        this._prop = prop;\n        this._from = from;\n        this._to = to;\n        this._promises = undefined;\n    }\n    active() {\n        return this._active;\n    }\n    update(cfg, to, date) {\n        if (this._active) {\n            this._notify(false);\n            const currentValue = this._target[this._prop];\n            const elapsed = date - this._start;\n            const remain = this._duration - elapsed;\n            this._start = date;\n            this._duration = Math.floor(Math.max(remain, cfg.duration));\n            this._total += elapsed;\n            this._loop = !!cfg.loop;\n            this._to = resolve([\n                cfg.to,\n                to,\n                currentValue,\n                cfg.from\n            ]);\n            this._from = resolve([\n                cfg.from,\n                currentValue,\n                to\n            ]);\n        }\n    }\n    cancel() {\n        if (this._active) {\n            this.tick(Date.now());\n            this._active = false;\n            this._notify(false);\n        }\n    }\n    tick(date) {\n        const elapsed = date - this._start;\n        const duration = this._duration;\n        const prop = this._prop;\n        const from = this._from;\n        const loop = this._loop;\n        const to = this._to;\n        let factor;\n        this._active = from !== to && (loop || elapsed < duration);\n        if (!this._active) {\n            this._target[prop] = to;\n            this._notify(true);\n            return;\n        }\n        if (elapsed < 0) {\n            this._target[prop] = from;\n            return;\n        }\n        factor = elapsed / duration % 2;\n        factor = loop && factor > 1 ? 2 - factor : factor;\n        factor = this._easing(Math.min(1, Math.max(0, factor)));\n        this._target[prop] = this._fn(from, to, factor);\n    }\n    wait() {\n        const promises = this._promises || (this._promises = []);\n        return new Promise((res, rej)=>{\n            promises.push({\n                res,\n                rej\n            });\n        });\n    }\n    _notify(resolved) {\n        const method = resolved ? 'res' : 'rej';\n        const promises = this._promises || [];\n        for(let i = 0; i < promises.length; i++){\n            promises[i][method]();\n        }\n    }\n}\n\nclass Animations {\n    constructor(chart, config){\n        this._chart = chart;\n        this._properties = new Map();\n        this.configure(config);\n    }\n    configure(config) {\n        if (!isObject(config)) {\n            return;\n        }\n        const animationOptions = Object.keys(defaults.animation);\n        const animatedProps = this._properties;\n        Object.getOwnPropertyNames(config).forEach((key)=>{\n            const cfg = config[key];\n            if (!isObject(cfg)) {\n                return;\n            }\n            const resolved = {};\n            for (const option of animationOptions){\n                resolved[option] = cfg[option];\n            }\n            (isArray(cfg.properties) && cfg.properties || [\n                key\n            ]).forEach((prop)=>{\n                if (prop === key || !animatedProps.has(prop)) {\n                    animatedProps.set(prop, resolved);\n                }\n            });\n        });\n    }\n _animateOptions(target, values) {\n        const newOptions = values.options;\n        const options = resolveTargetOptions(target, newOptions);\n        if (!options) {\n            return [];\n        }\n        const animations = this._createAnimations(options, newOptions);\n        if (newOptions.$shared) {\n            awaitAll(target.options.$animations, newOptions).then(()=>{\n                target.options = newOptions;\n            }, ()=>{\n            });\n        }\n        return animations;\n    }\n _createAnimations(target, values) {\n        const animatedProps = this._properties;\n        const animations = [];\n        const running = target.$animations || (target.$animations = {});\n        const props = Object.keys(values);\n        const date = Date.now();\n        let i;\n        for(i = props.length - 1; i >= 0; --i){\n            const prop = props[i];\n            if (prop.charAt(0) === '$') {\n                continue;\n            }\n            if (prop === 'options') {\n                animations.push(...this._animateOptions(target, values));\n                continue;\n            }\n            const value = values[prop];\n            let animation = running[prop];\n            const cfg = animatedProps.get(prop);\n            if (animation) {\n                if (cfg && animation.active()) {\n                    animation.update(cfg, value, date);\n                    continue;\n                } else {\n                    animation.cancel();\n                }\n            }\n            if (!cfg || !cfg.duration) {\n                target[prop] = value;\n                continue;\n            }\n            running[prop] = animation = new Animation(cfg, target, prop, value);\n            animations.push(animation);\n        }\n        return animations;\n    }\n update(target, values) {\n        if (this._properties.size === 0) {\n            Object.assign(target, values);\n            return;\n        }\n        const animations = this._createAnimations(target, values);\n        if (animations.length) {\n            animator.add(this._chart, animations);\n            return true;\n        }\n    }\n}\nfunction awaitAll(animations, properties) {\n    const running = [];\n    const keys = Object.keys(properties);\n    for(let i = 0; i < keys.length; i++){\n        const anim = animations[keys[i]];\n        if (anim && anim.active()) {\n            running.push(anim.wait());\n        }\n    }\n    return Promise.all(running);\n}\nfunction resolveTargetOptions(target, newOptions) {\n    if (!newOptions) {\n        return;\n    }\n    let options = target.options;\n    if (!options) {\n        target.options = newOptions;\n        return;\n    }\n    if (options.$shared) {\n        target.options = options = Object.assign({}, options, {\n            $shared: false,\n            $animations: {}\n        });\n    }\n    return options;\n}\n\nfunction scaleClip(scale, allowedOverflow) {\n    const opts = scale && scale.options || {};\n    const reverse = opts.reverse;\n    const min = opts.min === undefined ? allowedOverflow : 0;\n    const max = opts.max === undefined ? allowedOverflow : 0;\n    return {\n        start: reverse ? max : min,\n        end: reverse ? min : max\n    };\n}\nfunction defaultClip(xScale, yScale, allowedOverflow) {\n    if (allowedOverflow === false) {\n        return false;\n    }\n    const x = scaleClip(xScale, allowedOverflow);\n    const y = scaleClip(yScale, allowedOverflow);\n    return {\n        top: y.end,\n        right: x.end,\n        bottom: y.start,\n        left: x.start\n    };\n}\nfunction toClip(value) {\n    let t, r, b, l;\n    if (isObject(value)) {\n        t = value.top;\n        r = value.right;\n        b = value.bottom;\n        l = value.left;\n    } else {\n        t = r = b = l = value;\n    }\n    return {\n        top: t,\n        right: r,\n        bottom: b,\n        left: l,\n        disabled: value === false\n    };\n}\nfunction getSortedDatasetIndices(chart, filterVisible) {\n    const keys = [];\n    const metasets = chart._getSortedDatasetMetas(filterVisible);\n    let i, ilen;\n    for(i = 0, ilen = metasets.length; i < ilen; ++i){\n        keys.push(metasets[i].index);\n    }\n    return keys;\n}\nfunction applyStack(stack, value, dsIndex, options = {}) {\n    const keys = stack.keys;\n    const singleMode = options.mode === 'single';\n    let i, ilen, datasetIndex, otherValue;\n    if (value === null) {\n        return;\n    }\n    let found = false;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        datasetIndex = +keys[i];\n        if (datasetIndex === dsIndex) {\n            found = true;\n            if (options.all) {\n                continue;\n            }\n            break;\n        }\n        otherValue = stack.values[datasetIndex];\n        if (isNumberFinite(otherValue) && (singleMode || value === 0 || sign(value) === sign(otherValue))) {\n            value += otherValue;\n        }\n    }\n    if (!found && !options.all) {\n        return 0;\n    }\n    return value;\n}\nfunction convertObjectDataToArray(data, meta) {\n    const { iScale , vScale  } = meta;\n    const iAxisKey = iScale.axis === 'x' ? 'x' : 'y';\n    const vAxisKey = vScale.axis === 'x' ? 'x' : 'y';\n    const keys = Object.keys(data);\n    const adata = new Array(keys.length);\n    let i, ilen, key;\n    for(i = 0, ilen = keys.length; i < ilen; ++i){\n        key = keys[i];\n        adata[i] = {\n            [iAxisKey]: key,\n            [vAxisKey]: data[key]\n        };\n    }\n    return adata;\n}\nfunction isStacked(scale, meta) {\n    const stacked = scale && scale.options.stacked;\n    return stacked || stacked === undefined && meta.stack !== undefined;\n}\nfunction getStackKey(indexScale, valueScale, meta) {\n    return `${indexScale.id}.${valueScale.id}.${meta.stack || meta.type}`;\n}\nfunction getUserBounds(scale) {\n    const { min , max , minDefined , maxDefined  } = scale.getUserBounds();\n    return {\n        min: minDefined ? min : Number.NEGATIVE_INFINITY,\n        max: maxDefined ? max : Number.POSITIVE_INFINITY\n    };\n}\nfunction getOrCreateStack(stacks, stackKey, indexValue) {\n    const subStack = stacks[stackKey] || (stacks[stackKey] = {});\n    return subStack[indexValue] || (subStack[indexValue] = {});\n}\nfunction getLastIndexInStack(stack, vScale, positive, type) {\n    for (const meta of vScale.getMatchingVisibleMetas(type).reverse()){\n        const value = stack[meta.index];\n        if (positive && value > 0 || !positive && value < 0) {\n            return meta.index;\n        }\n    }\n    return null;\n}\nfunction updateStacks(controller, parsed) {\n    const { chart , _cachedMeta: meta  } = controller;\n    const stacks = chart._stacks || (chart._stacks = {});\n    const { iScale , vScale , index: datasetIndex  } = meta;\n    const iAxis = iScale.axis;\n    const vAxis = vScale.axis;\n    const key = getStackKey(iScale, vScale, meta);\n    const ilen = parsed.length;\n    let stack;\n    for(let i = 0; i < ilen; ++i){\n        const item = parsed[i];\n        const { [iAxis]: index , [vAxis]: value  } = item;\n        const itemStacks = item._stacks || (item._stacks = {});\n        stack = itemStacks[vAxis] = getOrCreateStack(stacks, key, index);\n        stack[datasetIndex] = value;\n        stack._top = getLastIndexInStack(stack, vScale, true, meta.type);\n        stack._bottom = getLastIndexInStack(stack, vScale, false, meta.type);\n        const visualValues = stack._visualValues || (stack._visualValues = {});\n        visualValues[datasetIndex] = value;\n    }\n}\nfunction getFirstScaleId(chart, axis) {\n    const scales = chart.scales;\n    return Object.keys(scales).filter((key)=>scales[key].axis === axis).shift();\n}\nfunction createDatasetContext(parent, index) {\n    return createContext(parent, {\n        active: false,\n        dataset: undefined,\n        datasetIndex: index,\n        index,\n        mode: 'default',\n        type: 'dataset'\n    });\n}\nfunction createDataContext(parent, index, element) {\n    return createContext(parent, {\n        active: false,\n        dataIndex: index,\n        parsed: undefined,\n        raw: undefined,\n        element,\n        index,\n        mode: 'default',\n        type: 'data'\n    });\n}\nfunction clearStacks(meta, items) {\n    const datasetIndex = meta.controller.index;\n    const axis = meta.vScale && meta.vScale.axis;\n    if (!axis) {\n        return;\n    }\n    items = items || meta._parsed;\n    for (const parsed of items){\n        const stacks = parsed._stacks;\n        if (!stacks || stacks[axis] === undefined || stacks[axis][datasetIndex] === undefined) {\n            return;\n        }\n        delete stacks[axis][datasetIndex];\n        if (stacks[axis]._visualValues !== undefined && stacks[axis]._visualValues[datasetIndex] !== undefined) {\n            delete stacks[axis]._visualValues[datasetIndex];\n        }\n    }\n}\nconst isDirectUpdateMode = (mode)=>mode === 'reset' || mode === 'none';\nconst cloneIfNotShared = (cached, shared)=>shared ? cached : Object.assign({}, cached);\nconst createStack = (canStack, meta, chart)=>canStack && !meta.hidden && meta._stacked && {\n        keys: getSortedDatasetIndices(chart, true),\n        values: null\n    };\nclass DatasetController {\n static defaults = {};\n static datasetElementType = null;\n static dataElementType = null;\n constructor(chart, datasetIndex){\n        this.chart = chart;\n        this._ctx = chart.ctx;\n        this.index = datasetIndex;\n        this._cachedDataOpts = {};\n        this._cachedMeta = this.getMeta();\n        this._type = this._cachedMeta.type;\n        this.options = undefined;\n         this._parsing = false;\n        this._data = undefined;\n        this._objectData = undefined;\n        this._sharedOptions = undefined;\n        this._drawStart = undefined;\n        this._drawCount = undefined;\n        this.enableOptionSharing = false;\n        this.supportsDecimation = false;\n        this.$context = undefined;\n        this._syncList = [];\n        this.datasetElementType = new.target.datasetElementType;\n        this.dataElementType = new.target.dataElementType;\n        this.initialize();\n    }\n    initialize() {\n        const meta = this._cachedMeta;\n        this.configure();\n        this.linkScales();\n        meta._stacked = isStacked(meta.vScale, meta);\n        this.addElements();\n        if (this.options.fill && !this.chart.isPluginEnabled('filler')) {\n            console.warn(\"Tried to use the 'fill' option without the 'Filler' plugin enabled. Please import and register the 'Filler' plugin and make sure it is not disabled in the options\");\n        }\n    }\n    updateIndex(datasetIndex) {\n        if (this.index !== datasetIndex) {\n            clearStacks(this._cachedMeta);\n        }\n        this.index = datasetIndex;\n    }\n    linkScales() {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        const chooseId = (axis, x, y, r)=>axis === 'x' ? x : axis === 'r' ? r : y;\n        const xid = meta.xAxisID = valueOrDefault(dataset.xAxisID, getFirstScaleId(chart, 'x'));\n        const yid = meta.yAxisID = valueOrDefault(dataset.yAxisID, getFirstScaleId(chart, 'y'));\n        const rid = meta.rAxisID = valueOrDefault(dataset.rAxisID, getFirstScaleId(chart, 'r'));\n        const indexAxis = meta.indexAxis;\n        const iid = meta.iAxisID = chooseId(indexAxis, xid, yid, rid);\n        const vid = meta.vAxisID = chooseId(indexAxis, yid, xid, rid);\n        meta.xScale = this.getScaleForId(xid);\n        meta.yScale = this.getScaleForId(yid);\n        meta.rScale = this.getScaleForId(rid);\n        meta.iScale = this.getScaleForId(iid);\n        meta.vScale = this.getScaleForId(vid);\n    }\n    getDataset() {\n        return this.chart.data.datasets[this.index];\n    }\n    getMeta() {\n        return this.chart.getDatasetMeta(this.index);\n    }\n getScaleForId(scaleID) {\n        return this.chart.scales[scaleID];\n    }\n _getOtherScale(scale) {\n        const meta = this._cachedMeta;\n        return scale === meta.iScale ? meta.vScale : meta.iScale;\n    }\n    reset() {\n        this._update('reset');\n    }\n _destroy() {\n        const meta = this._cachedMeta;\n        if (this._data) {\n            unlistenArrayEvents(this._data, this);\n        }\n        if (meta._stacked) {\n            clearStacks(meta);\n        }\n    }\n _dataCheck() {\n        const dataset = this.getDataset();\n        const data = dataset.data || (dataset.data = []);\n        const _data = this._data;\n        if (isObject(data)) {\n            const meta = this._cachedMeta;\n            this._data = convertObjectDataToArray(data, meta);\n        } else if (_data !== data) {\n            if (_data) {\n                unlistenArrayEvents(_data, this);\n                const meta = this._cachedMeta;\n                clearStacks(meta);\n                meta._parsed = [];\n            }\n            if (data && Object.isExtensible(data)) {\n                listenArrayEvents(data, this);\n            }\n            this._syncList = [];\n            this._data = data;\n        }\n    }\n    addElements() {\n        const meta = this._cachedMeta;\n        this._dataCheck();\n        if (this.datasetElementType) {\n            meta.dataset = new this.datasetElementType();\n        }\n    }\n    buildOrUpdateElements(resetNewElements) {\n        const meta = this._cachedMeta;\n        const dataset = this.getDataset();\n        let stackChanged = false;\n        this._dataCheck();\n        const oldStacked = meta._stacked;\n        meta._stacked = isStacked(meta.vScale, meta);\n        if (meta.stack !== dataset.stack) {\n            stackChanged = true;\n            clearStacks(meta);\n            meta.stack = dataset.stack;\n        }\n        this._resyncElements(resetNewElements);\n        if (stackChanged || oldStacked !== meta._stacked) {\n            updateStacks(this, meta._parsed);\n            meta._stacked = isStacked(meta.vScale, meta);\n        }\n    }\n configure() {\n        const config = this.chart.config;\n        const scopeKeys = config.datasetScopeKeys(this._type);\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys, true);\n        this.options = config.createResolver(scopes, this.getContext());\n        this._parsing = this.options.parsing;\n        this._cachedDataOpts = {};\n    }\n parse(start, count) {\n        const { _cachedMeta: meta , _data: data  } = this;\n        const { iScale , _stacked  } = meta;\n        const iAxis = iScale.axis;\n        let sorted = start === 0 && count === data.length ? true : meta._sorted;\n        let prev = start > 0 && meta._parsed[start - 1];\n        let i, cur, parsed;\n        if (this._parsing === false) {\n            meta._parsed = data;\n            meta._sorted = true;\n            parsed = data;\n        } else {\n            if (isArray(data[start])) {\n                parsed = this.parseArrayData(meta, data, start, count);\n            } else if (isObject(data[start])) {\n                parsed = this.parseObjectData(meta, data, start, count);\n            } else {\n                parsed = this.parsePrimitiveData(meta, data, start, count);\n            }\n            const isNotInOrderComparedToPrev = ()=>cur[iAxis] === null || prev && cur[iAxis] < prev[iAxis];\n            for(i = 0; i < count; ++i){\n                meta._parsed[i + start] = cur = parsed[i];\n                if (sorted) {\n                    if (isNotInOrderComparedToPrev()) {\n                        sorted = false;\n                    }\n                    prev = cur;\n                }\n            }\n            meta._sorted = sorted;\n        }\n        if (_stacked) {\n            updateStacks(this, parsed);\n        }\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const labels = iScale.getLabels();\n        const singleScale = iScale === vScale;\n        const parsed = new Array(count);\n        let i, ilen, index;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            parsed[i] = {\n                [iAxis]: singleScale || iScale.parse(labels[index], index),\n                [vAxis]: vScale.parse(data[index], index)\n            };\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(item[0], index),\n                y: yScale.parse(item[1], index)\n            };\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const { xScale , yScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const parsed = new Array(count);\n        let i, ilen, index, item;\n        for(i = 0, ilen = count; i < ilen; ++i){\n            index = i + start;\n            item = data[index];\n            parsed[i] = {\n                x: xScale.parse(resolveObjectKey(item, xAxisKey), index),\n                y: yScale.parse(resolveObjectKey(item, yAxisKey), index)\n            };\n        }\n        return parsed;\n    }\n getParsed(index) {\n        return this._cachedMeta._parsed[index];\n    }\n getDataElement(index) {\n        return this._cachedMeta.data[index];\n    }\n applyStack(scale, parsed, mode) {\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const value = parsed[scale.axis];\n        const stack = {\n            keys: getSortedDatasetIndices(chart, true),\n            values: parsed._stacks[scale.axis]._visualValues\n        };\n        return applyStack(stack, value, meta.index, {\n            mode\n        });\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        const parsedValue = parsed[scale.axis];\n        let value = parsedValue === null ? NaN : parsedValue;\n        const values = stack && parsed._stacks[scale.axis];\n        if (stack && values) {\n            stack.values = values;\n            value = applyStack(stack, parsedValue, this._cachedMeta.index);\n        }\n        range.min = Math.min(range.min, value);\n        range.max = Math.max(range.max, value);\n    }\n getMinMax(scale, canStack) {\n        const meta = this._cachedMeta;\n        const _parsed = meta._parsed;\n        const sorted = meta._sorted && scale === meta.iScale;\n        const ilen = _parsed.length;\n        const otherScale = this._getOtherScale(scale);\n        const stack = createStack(canStack, meta, this.chart);\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        const { min: otherMin , max: otherMax  } = getUserBounds(otherScale);\n        let i, parsed;\n        function _skip() {\n            parsed = _parsed[i];\n            const otherValue = parsed[otherScale.axis];\n            return !isNumberFinite(parsed[scale.axis]) || otherMin > otherValue || otherMax < otherValue;\n        }\n        for(i = 0; i < ilen; ++i){\n            if (_skip()) {\n                continue;\n            }\n            this.updateRangeFromParsed(range, scale, parsed, stack);\n            if (sorted) {\n                break;\n            }\n        }\n        if (sorted) {\n            for(i = ilen - 1; i >= 0; --i){\n                if (_skip()) {\n                    continue;\n                }\n                this.updateRangeFromParsed(range, scale, parsed, stack);\n                break;\n            }\n        }\n        return range;\n    }\n    getAllParsedValues(scale) {\n        const parsed = this._cachedMeta._parsed;\n        const values = [];\n        let i, ilen, value;\n        for(i = 0, ilen = parsed.length; i < ilen; ++i){\n            value = parsed[i][scale.axis];\n            if (isNumberFinite(value)) {\n                values.push(value);\n            }\n        }\n        return values;\n    }\n getMaxOverflow() {\n        return false;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const vScale = meta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: iScale ? '' + iScale.getLabelForValue(parsed[iScale.axis]) : '',\n            value: vScale ? '' + vScale.getLabelForValue(parsed[vScale.axis]) : ''\n        };\n    }\n _update(mode) {\n        const meta = this._cachedMeta;\n        this.update(mode || 'default');\n        meta._clip = toClip(valueOrDefault(this.options.clip, defaultClip(meta.xScale, meta.yScale, this.getMaxOverflow())));\n    }\n update(mode) {}\n    draw() {\n        const ctx = this._ctx;\n        const chart = this.chart;\n        const meta = this._cachedMeta;\n        const elements = meta.data || [];\n        const area = chart.chartArea;\n        const active = [];\n        const start = this._drawStart || 0;\n        const count = this._drawCount || elements.length - start;\n        const drawActiveElementsOnTop = this.options.drawActiveElementsOnTop;\n        let i;\n        if (meta.dataset) {\n            meta.dataset.draw(ctx, area, start, count);\n        }\n        for(i = start; i < start + count; ++i){\n            const element = elements[i];\n            if (element.hidden) {\n                continue;\n            }\n            if (element.active && drawActiveElementsOnTop) {\n                active.push(element);\n            } else {\n                element.draw(ctx, area);\n            }\n        }\n        for(i = 0; i < active.length; ++i){\n            active[i].draw(ctx, area);\n        }\n    }\n getStyle(index, active) {\n        const mode = active ? 'active' : 'default';\n        return index === undefined && this._cachedMeta.dataset ? this.resolveDatasetElementOptions(mode) : this.resolveDataElementOptions(index || 0, mode);\n    }\n getContext(index, active, mode) {\n        const dataset = this.getDataset();\n        let context;\n        if (index >= 0 && index < this._cachedMeta.data.length) {\n            const element = this._cachedMeta.data[index];\n            context = element.$context || (element.$context = createDataContext(this.getContext(), index, element));\n            context.parsed = this.getParsed(index);\n            context.raw = dataset.data[index];\n            context.index = context.dataIndex = index;\n        } else {\n            context = this.$context || (this.$context = createDatasetContext(this.chart.getContext(), this.index));\n            context.dataset = dataset;\n            context.index = context.datasetIndex = this.index;\n        }\n        context.active = !!active;\n        context.mode = mode;\n        return context;\n    }\n resolveDatasetElementOptions(mode) {\n        return this._resolveElementOptions(this.datasetElementType.id, mode);\n    }\n resolveDataElementOptions(index, mode) {\n        return this._resolveElementOptions(this.dataElementType.id, mode, index);\n    }\n _resolveElementOptions(elementType, mode = 'default', index) {\n        const active = mode === 'active';\n        const cache = this._cachedDataOpts;\n        const cacheKey = elementType + '-' + mode;\n        const cached = cache[cacheKey];\n        const sharing = this.enableOptionSharing && defined(index);\n        if (cached) {\n            return cloneIfNotShared(cached, sharing);\n        }\n        const config = this.chart.config;\n        const scopeKeys = config.datasetElementScopeKeys(this._type, elementType);\n        const prefixes = active ? [\n            `${elementType}Hover`,\n            'hover',\n            elementType,\n            ''\n        ] : [\n            elementType,\n            ''\n        ];\n        const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n        const names = Object.keys(defaults.elements[elementType]);\n        const context = ()=>this.getContext(index, active, mode);\n        const values = config.resolveNamedOptions(scopes, names, context, prefixes);\n        if (values.$shared) {\n            values.$shared = sharing;\n            cache[cacheKey] = Object.freeze(cloneIfNotShared(values, sharing));\n        }\n        return values;\n    }\n _resolveAnimations(index, transition, active) {\n        const chart = this.chart;\n        const cache = this._cachedDataOpts;\n        const cacheKey = `animation-${transition}`;\n        const cached = cache[cacheKey];\n        if (cached) {\n            return cached;\n        }\n        let options;\n        if (chart.options.animation !== false) {\n            const config = this.chart.config;\n            const scopeKeys = config.datasetAnimationScopeKeys(this._type, transition);\n            const scopes = config.getOptionScopes(this.getDataset(), scopeKeys);\n            options = config.createResolver(scopes, this.getContext(index, active, transition));\n        }\n        const animations = new Animations(chart, options && options.animations);\n        if (options && options._cacheable) {\n            cache[cacheKey] = Object.freeze(animations);\n        }\n        return animations;\n    }\n getSharedOptions(options) {\n        if (!options.$shared) {\n            return;\n        }\n        return this._sharedOptions || (this._sharedOptions = Object.assign({}, options));\n    }\n includeOptions(mode, sharedOptions) {\n        return !sharedOptions || isDirectUpdateMode(mode) || this.chart._animationsDisabled;\n    }\n _getSharedOptions(start, mode) {\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const previouslySharedOptions = this._sharedOptions;\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions) || sharedOptions !== previouslySharedOptions;\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n        return {\n            sharedOptions,\n            includeOptions\n        };\n    }\n updateElement(element, index, properties, mode) {\n        if (isDirectUpdateMode(mode)) {\n            Object.assign(element, properties);\n        } else {\n            this._resolveAnimations(index, mode).update(element, properties);\n        }\n    }\n updateSharedOptions(sharedOptions, mode, newOptions) {\n        if (sharedOptions && !isDirectUpdateMode(mode)) {\n            this._resolveAnimations(undefined, mode).update(sharedOptions, newOptions);\n        }\n    }\n _setStyle(element, index, mode, active) {\n        element.active = active;\n        const options = this.getStyle(index, active);\n        this._resolveAnimations(index, mode, active).update(element, {\n            options: !active && this.getSharedOptions(options) || options\n        });\n    }\n    removeHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', false);\n    }\n    setHoverStyle(element, datasetIndex, index) {\n        this._setStyle(element, index, 'active', true);\n    }\n _removeDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', false);\n        }\n    }\n _setDatasetHoverStyle() {\n        const element = this._cachedMeta.dataset;\n        if (element) {\n            this._setStyle(element, undefined, 'active', true);\n        }\n    }\n _resyncElements(resetNewElements) {\n        const data = this._data;\n        const elements = this._cachedMeta.data;\n        for (const [method, arg1, arg2] of this._syncList){\n            this[method](arg1, arg2);\n        }\n        this._syncList = [];\n        const numMeta = elements.length;\n        const numData = data.length;\n        const count = Math.min(numData, numMeta);\n        if (count) {\n            this.parse(0, count);\n        }\n        if (numData > numMeta) {\n            this._insertElements(numMeta, numData - numMeta, resetNewElements);\n        } else if (numData < numMeta) {\n            this._removeElements(numData, numMeta - numData);\n        }\n    }\n _insertElements(start, count, resetNewElements = true) {\n        const meta = this._cachedMeta;\n        const data = meta.data;\n        const end = start + count;\n        let i;\n        const move = (arr)=>{\n            arr.length += count;\n            for(i = arr.length - 1; i >= end; i--){\n                arr[i] = arr[i - count];\n            }\n        };\n        move(data);\n        for(i = start; i < end; ++i){\n            data[i] = new this.dataElementType();\n        }\n        if (this._parsing) {\n            move(meta._parsed);\n        }\n        this.parse(start, count);\n        if (resetNewElements) {\n            this.updateElements(data, start, count, 'reset');\n        }\n    }\n    updateElements(element, start, count, mode) {}\n _removeElements(start, count) {\n        const meta = this._cachedMeta;\n        if (this._parsing) {\n            const removed = meta._parsed.splice(start, count);\n            if (meta._stacked) {\n                clearStacks(meta, removed);\n            }\n        }\n        meta.data.splice(start, count);\n    }\n _sync(args) {\n        if (this._parsing) {\n            this._syncList.push(args);\n        } else {\n            const [method, arg1, arg2] = args;\n            this[method](arg1, arg2);\n        }\n        this.chart._dataChanges.push([\n            this.index,\n            ...args\n        ]);\n    }\n    _onDataPush() {\n        const count = arguments.length;\n        this._sync([\n            '_insertElements',\n            this.getDataset().data.length - count,\n            count\n        ]);\n    }\n    _onDataPop() {\n        this._sync([\n            '_removeElements',\n            this._cachedMeta.data.length - 1,\n            1\n        ]);\n    }\n    _onDataShift() {\n        this._sync([\n            '_removeElements',\n            0,\n            1\n        ]);\n    }\n    _onDataSplice(start, count) {\n        if (count) {\n            this._sync([\n                '_removeElements',\n                start,\n                count\n            ]);\n        }\n        const newCount = arguments.length - 2;\n        if (newCount) {\n            this._sync([\n                '_insertElements',\n                start,\n                newCount\n            ]);\n        }\n    }\n    _onDataUnshift() {\n        this._sync([\n            '_insertElements',\n            0,\n            arguments.length\n        ]);\n    }\n}\n\nfunction getAllScaleValues(scale, type) {\n    if (!scale._cache.$bar) {\n        const visibleMetas = scale.getMatchingVisibleMetas(type);\n        let values = [];\n        for(let i = 0, ilen = visibleMetas.length; i < ilen; i++){\n            values = values.concat(visibleMetas[i].controller.getAllParsedValues(scale));\n        }\n        scale._cache.$bar = _arrayUnique(values.sort((a, b)=>a - b));\n    }\n    return scale._cache.$bar;\n}\n function computeMinSampleSize(meta) {\n    const scale = meta.iScale;\n    const values = getAllScaleValues(scale, meta.type);\n    let min = scale._length;\n    let i, ilen, curr, prev;\n    const updateMinAndPrev = ()=>{\n        if (curr === 32767 || curr === -32768) {\n            return;\n        }\n        if (defined(prev)) {\n            min = Math.min(min, Math.abs(curr - prev) || min);\n        }\n        prev = curr;\n    };\n    for(i = 0, ilen = values.length; i < ilen; ++i){\n        curr = scale.getPixelForValue(values[i]);\n        updateMinAndPrev();\n    }\n    prev = undefined;\n    for(i = 0, ilen = scale.ticks.length; i < ilen; ++i){\n        curr = scale.getPixelForTick(i);\n        updateMinAndPrev();\n    }\n    return min;\n}\n function computeFitCategoryTraits(index, ruler, options, stackCount) {\n    const thickness = options.barThickness;\n    let size, ratio;\n    if (isNullOrUndef(thickness)) {\n        size = ruler.min * options.categoryPercentage;\n        ratio = options.barPercentage;\n    } else {\n        size = thickness * stackCount;\n        ratio = 1;\n    }\n    return {\n        chunk: size / stackCount,\n        ratio,\n        start: ruler.pixels[index] - size / 2\n    };\n}\n function computeFlexCategoryTraits(index, ruler, options, stackCount) {\n    const pixels = ruler.pixels;\n    const curr = pixels[index];\n    let prev = index > 0 ? pixels[index - 1] : null;\n    let next = index < pixels.length - 1 ? pixels[index + 1] : null;\n    const percent = options.categoryPercentage;\n    if (prev === null) {\n        prev = curr - (next === null ? ruler.end - ruler.start : next - curr);\n    }\n    if (next === null) {\n        next = curr + curr - prev;\n    }\n    const start = curr - (curr - Math.min(prev, next)) / 2 * percent;\n    const size = Math.abs(next - prev) / 2 * percent;\n    return {\n        chunk: size / stackCount,\n        ratio: options.barPercentage,\n        start\n    };\n}\nfunction parseFloatBar(entry, item, vScale, i) {\n    const startValue = vScale.parse(entry[0], i);\n    const endValue = vScale.parse(entry[1], i);\n    const min = Math.min(startValue, endValue);\n    const max = Math.max(startValue, endValue);\n    let barStart = min;\n    let barEnd = max;\n    if (Math.abs(min) > Math.abs(max)) {\n        barStart = max;\n        barEnd = min;\n    }\n    item[vScale.axis] = barEnd;\n    item._custom = {\n        barStart,\n        barEnd,\n        start: startValue,\n        end: endValue,\n        min,\n        max\n    };\n}\nfunction parseValue(entry, item, vScale, i) {\n    if (isArray(entry)) {\n        parseFloatBar(entry, item, vScale, i);\n    } else {\n        item[vScale.axis] = vScale.parse(entry, i);\n    }\n    return item;\n}\nfunction parseArrayOrPrimitive(meta, data, start, count) {\n    const iScale = meta.iScale;\n    const vScale = meta.vScale;\n    const labels = iScale.getLabels();\n    const singleScale = iScale === vScale;\n    const parsed = [];\n    let i, ilen, item, entry;\n    for(i = start, ilen = start + count; i < ilen; ++i){\n        entry = data[i];\n        item = {};\n        item[iScale.axis] = singleScale || iScale.parse(labels[i], i);\n        parsed.push(parseValue(entry, item, vScale, i));\n    }\n    return parsed;\n}\nfunction isFloatBar(custom) {\n    return custom && custom.barStart !== undefined && custom.barEnd !== undefined;\n}\nfunction barSign(size, vScale, actualBase) {\n    if (size !== 0) {\n        return sign(size);\n    }\n    return (vScale.isHorizontal() ? 1 : -1) * (vScale.min >= actualBase ? 1 : -1);\n}\nfunction borderProps(properties) {\n    let reverse, start, end, top, bottom;\n    if (properties.horizontal) {\n        reverse = properties.base > properties.x;\n        start = 'left';\n        end = 'right';\n    } else {\n        reverse = properties.base < properties.y;\n        start = 'bottom';\n        end = 'top';\n    }\n    if (reverse) {\n        top = 'end';\n        bottom = 'start';\n    } else {\n        top = 'start';\n        bottom = 'end';\n    }\n    return {\n        start,\n        end,\n        reverse,\n        top,\n        bottom\n    };\n}\nfunction setBorderSkipped(properties, options, stack, index) {\n    let edge = options.borderSkipped;\n    const res = {};\n    if (!edge) {\n        properties.borderSkipped = res;\n        return;\n    }\n    if (edge === true) {\n        properties.borderSkipped = {\n            top: true,\n            right: true,\n            bottom: true,\n            left: true\n        };\n        return;\n    }\n    const { start , end , reverse , top , bottom  } = borderProps(properties);\n    if (edge === 'middle' && stack) {\n        properties.enableBorderRadius = true;\n        if ((stack._top || 0) === index) {\n            edge = top;\n        } else if ((stack._bottom || 0) === index) {\n            edge = bottom;\n        } else {\n            res[parseEdge(bottom, start, end, reverse)] = true;\n            edge = top;\n        }\n    }\n    res[parseEdge(edge, start, end, reverse)] = true;\n    properties.borderSkipped = res;\n}\nfunction parseEdge(edge, a, b, reverse) {\n    if (reverse) {\n        edge = swap(edge, a, b);\n        edge = startEnd(edge, b, a);\n    } else {\n        edge = startEnd(edge, a, b);\n    }\n    return edge;\n}\nfunction swap(orig, v1, v2) {\n    return orig === v1 ? v2 : orig === v2 ? v1 : orig;\n}\nfunction startEnd(v, start, end) {\n    return v === 'start' ? start : v === 'end' ? end : v;\n}\nfunction setInflateAmount(properties, { inflateAmount  }, ratio) {\n    properties.inflateAmount = inflateAmount === 'auto' ? ratio === 1 ? 0.33 : 0 : inflateAmount;\n}\nclass BarController extends DatasetController {\n    static id = 'bar';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'bar',\n        categoryPercentage: 0.8,\n        barPercentage: 0.9,\n        grouped: true,\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'base',\n                    'width',\n                    'height'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category',\n                offset: true,\n                grid: {\n                    offset: true\n                }\n            },\n            _value_: {\n                type: 'linear',\n                beginAtZero: true\n            }\n        }\n    };\n parsePrimitiveData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseArrayData(meta, data, start, count) {\n        return parseArrayOrPrimitive(meta, data, start, count);\n    }\n parseObjectData(meta, data, start, count) {\n        const { iScale , vScale  } = meta;\n        const { xAxisKey ='x' , yAxisKey ='y'  } = this._parsing;\n        const iAxisKey = iScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const vAxisKey = vScale.axis === 'x' ? xAxisKey : yAxisKey;\n        const parsed = [];\n        let i, ilen, item, obj;\n        for(i = start, ilen = start + count; i < ilen; ++i){\n            obj = data[i];\n            item = {};\n            item[iScale.axis] = iScale.parse(resolveObjectKey(obj, iAxisKey), i);\n            parsed.push(parseValue(resolveObjectKey(obj, vAxisKey), item, vScale, i));\n        }\n        return parsed;\n    }\n updateRangeFromParsed(range, scale, parsed, stack) {\n        super.updateRangeFromParsed(range, scale, parsed, stack);\n        const custom = parsed._custom;\n        if (custom && scale === this._cachedMeta.vScale) {\n            range.min = Math.min(range.min, custom.min);\n            range.max = Math.max(range.max, custom.max);\n        }\n    }\n getMaxOverflow() {\n        return 0;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const { iScale , vScale  } = meta;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const value = isFloatBar(custom) ? '[' + custom.start + ', ' + custom.end + ']' : '' + vScale.getLabelForValue(parsed[vScale.axis]);\n        return {\n            label: '' + iScale.getLabelForValue(parsed[iScale.axis]),\n            value\n        };\n    }\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n        const meta = this._cachedMeta;\n        meta.stack = this.getDataset().stack;\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        this.updateElements(meta.data, 0, meta.data.length, mode);\n    }\n    updateElements(bars, start, count, mode) {\n        const reset = mode === 'reset';\n        const { index , _cachedMeta: { vScale  }  } = this;\n        const base = vScale.getBasePixel();\n        const horizontal = vScale.isHorizontal();\n        const ruler = this._getRuler();\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        for(let i = start; i < start + count; i++){\n            const parsed = this.getParsed(i);\n            const vpixels = reset || isNullOrUndef(parsed[vScale.axis]) ? {\n                base,\n                head: base\n            } : this._calculateBarValuePixels(i);\n            const ipixels = this._calculateBarIndexPixels(i, ruler);\n            const stack = (parsed._stacks || {})[vScale.axis];\n            const properties = {\n                horizontal,\n                base: vpixels.base,\n                enableBorderRadius: !stack || isFloatBar(parsed._custom) || index === stack._top || index === stack._bottom,\n                x: horizontal ? vpixels.head : ipixels.center,\n                y: horizontal ? ipixels.center : vpixels.head,\n                height: horizontal ? ipixels.size : Math.abs(vpixels.size),\n                width: horizontal ? Math.abs(vpixels.size) : ipixels.size\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, bars[i].active ? 'active' : mode);\n            }\n            const options = properties.options || bars[i].options;\n            setBorderSkipped(properties, options, stack, index);\n            setInflateAmount(properties, options, ruler.ratio);\n            this.updateElement(bars[i], i, properties, mode);\n        }\n    }\n _getStacks(last, dataIndex) {\n        const { iScale  } = this._cachedMeta;\n        const metasets = iScale.getMatchingVisibleMetas(this._type).filter((meta)=>meta.controller.options.grouped);\n        const stacked = iScale.options.stacked;\n        const stacks = [];\n        const currentParsed = this._cachedMeta.controller.getParsed(dataIndex);\n        const iScaleValue = currentParsed && currentParsed[iScale.axis];\n        const skipNull = (meta)=>{\n            const parsed = meta._parsed.find((item)=>item[iScale.axis] === iScaleValue);\n            const val = parsed && parsed[meta.vScale.axis];\n            if (isNullOrUndef(val) || isNaN(val)) {\n                return true;\n            }\n        };\n        for (const meta of metasets){\n            if (dataIndex !== undefined && skipNull(meta)) {\n                continue;\n            }\n            if (stacked === false || stacks.indexOf(meta.stack) === -1 || stacked === undefined && meta.stack === undefined) {\n                stacks.push(meta.stack);\n            }\n            if (meta.index === last) {\n                break;\n            }\n        }\n        if (!stacks.length) {\n            stacks.push(undefined);\n        }\n        return stacks;\n    }\n _getStackCount(index) {\n        return this._getStacks(undefined, index).length;\n    }\n _getStackIndex(datasetIndex, name, dataIndex) {\n        const stacks = this._getStacks(datasetIndex, dataIndex);\n        const index = name !== undefined ? stacks.indexOf(name) : -1;\n        return index === -1 ? stacks.length - 1 : index;\n    }\n _getRuler() {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const iScale = meta.iScale;\n        const pixels = [];\n        let i, ilen;\n        for(i = 0, ilen = meta.data.length; i < ilen; ++i){\n            pixels.push(iScale.getPixelForValue(this.getParsed(i)[iScale.axis], i));\n        }\n        const barThickness = opts.barThickness;\n        const min = barThickness || computeMinSampleSize(meta);\n        return {\n            min,\n            pixels,\n            start: iScale._startPixel,\n            end: iScale._endPixel,\n            stackCount: this._getStackCount(),\n            scale: iScale,\n            grouped: opts.grouped,\n            ratio: barThickness ? 1 : opts.categoryPercentage * opts.barPercentage\n        };\n    }\n _calculateBarValuePixels(index) {\n        const { _cachedMeta: { vScale , _stacked , index: datasetIndex  } , options: { base: baseValue , minBarLength  }  } = this;\n        const actualBase = baseValue || 0;\n        const parsed = this.getParsed(index);\n        const custom = parsed._custom;\n        const floating = isFloatBar(custom);\n        let value = parsed[vScale.axis];\n        let start = 0;\n        let length = _stacked ? this.applyStack(vScale, parsed, _stacked) : value;\n        let head, size;\n        if (length !== value) {\n            start = length - value;\n            length = value;\n        }\n        if (floating) {\n            value = custom.barStart;\n            length = custom.barEnd - custom.barStart;\n            if (value !== 0 && sign(value) !== sign(custom.barEnd)) {\n                start = 0;\n            }\n            start += value;\n        }\n        const startValue = !isNullOrUndef(baseValue) && !floating ? baseValue : start;\n        let base = vScale.getPixelForValue(startValue);\n        if (this.chart.getDataVisibility(index)) {\n            head = vScale.getPixelForValue(start + length);\n        } else {\n            head = base;\n        }\n        size = head - base;\n        if (Math.abs(size) < minBarLength) {\n            size = barSign(size, vScale, actualBase) * minBarLength;\n            if (value === actualBase) {\n                base -= size / 2;\n            }\n            const startPixel = vScale.getPixelForDecimal(0);\n            const endPixel = vScale.getPixelForDecimal(1);\n            const min = Math.min(startPixel, endPixel);\n            const max = Math.max(startPixel, endPixel);\n            base = Math.max(Math.min(base, max), min);\n            head = base + size;\n            if (_stacked && !floating) {\n                parsed._stacks[vScale.axis]._visualValues[datasetIndex] = vScale.getValueForPixel(head) - vScale.getValueForPixel(base);\n            }\n        }\n        if (base === vScale.getPixelForValue(actualBase)) {\n            const halfGrid = sign(size) * vScale.getLineWidthForValue(actualBase) / 2;\n            base += halfGrid;\n            size -= halfGrid;\n        }\n        return {\n            size,\n            base,\n            head,\n            center: head + size / 2\n        };\n    }\n _calculateBarIndexPixels(index, ruler) {\n        const scale = ruler.scale;\n        const options = this.options;\n        const skipNull = options.skipNull;\n        const maxBarThickness = valueOrDefault(options.maxBarThickness, Infinity);\n        let center, size;\n        if (ruler.grouped) {\n            const stackCount = skipNull ? this._getStackCount(index) : ruler.stackCount;\n            const range = options.barThickness === 'flex' ? computeFlexCategoryTraits(index, ruler, options, stackCount) : computeFitCategoryTraits(index, ruler, options, stackCount);\n            const stackIndex = this._getStackIndex(this.index, this._cachedMeta.stack, skipNull ? index : undefined);\n            center = range.start + range.chunk * stackIndex + range.chunk / 2;\n            size = Math.min(maxBarThickness, range.chunk * range.ratio);\n        } else {\n            center = scale.getPixelForValue(this.getParsed(index)[scale.axis], index);\n            size = Math.min(maxBarThickness, ruler.min * ruler.ratio);\n        }\n        return {\n            base: center - size / 2,\n            head: center + size / 2,\n            center,\n            size\n        };\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        const vScale = meta.vScale;\n        const rects = meta.data;\n        const ilen = rects.length;\n        let i = 0;\n        for(; i < ilen; ++i){\n            if (this.getParsed(i)[vScale.axis] !== null && !rects[i].hidden) {\n                rects[i].draw(this._ctx);\n            }\n        }\n    }\n}\n\nclass BubbleController extends DatasetController {\n    static id = 'bubble';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'borderWidth',\n                    'radius'\n                ]\n            }\n        }\n    };\n static overrides = {\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        super.initialize();\n    }\n parsePrimitiveData(meta, data, start, count) {\n        const parsed = super.parsePrimitiveData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            parsed[i]._custom = this.resolveDataElementOptions(i + start).radius;\n        }\n        return parsed;\n    }\n parseArrayData(meta, data, start, count) {\n        const parsed = super.parseArrayData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item[2], this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n parseObjectData(meta, data, start, count) {\n        const parsed = super.parseObjectData(meta, data, start, count);\n        for(let i = 0; i < parsed.length; i++){\n            const item = data[start + i];\n            parsed[i]._custom = valueOrDefault(item && item.r && +item.r, this.resolveDataElementOptions(i + start).radius);\n        }\n        return parsed;\n    }\n getMaxOverflow() {\n        const data = this._cachedMeta.data;\n        let max = 0;\n        for(let i = data.length - 1; i >= 0; --i){\n            max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n        }\n        return max > 0 && max;\n    }\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        const r = parsed._custom;\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + (r ? ', ' + r : '') + ')'\n        };\n    }\n    update(mode) {\n        const points = this._cachedMeta.data;\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const parsed = !reset && this.getParsed(i);\n            const properties = {};\n            const iPixel = properties[iAxis] = reset ? iScale.getPixelForDecimal(0.5) : iScale.getPixelForValue(parsed[iAxis]);\n            const vPixel = properties[vAxis] = reset ? vScale.getBasePixel() : vScale.getPixelForValue(parsed[vAxis]);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel);\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n                if (reset) {\n                    properties.options.radius = 0;\n                }\n            }\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n resolveDataElementOptions(index, mode) {\n        const parsed = this.getParsed(index);\n        let values = super.resolveDataElementOptions(index, mode);\n        if (values.$shared) {\n            values = Object.assign({}, values, {\n                $shared: false\n            });\n        }\n        const radius = values.radius;\n        if (mode !== 'active') {\n            values.radius = 0;\n        }\n        values.radius += valueOrDefault(parsed && parsed._custom, radius);\n        return values;\n    }\n}\n\nfunction getRatioAndOffset(rotation, circumference, cutout) {\n    let ratioX = 1;\n    let ratioY = 1;\n    let offsetX = 0;\n    let offsetY = 0;\n    if (circumference < TAU) {\n        const startAngle = rotation;\n        const endAngle = startAngle + circumference;\n        const startX = Math.cos(startAngle);\n        const startY = Math.sin(startAngle);\n        const endX = Math.cos(endAngle);\n        const endY = Math.sin(endAngle);\n        const calcMax = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? 1 : Math.max(a, a * cutout, b, b * cutout);\n        const calcMin = (angle, a, b)=>_angleBetween(angle, startAngle, endAngle, true) ? -1 : Math.min(a, a * cutout, b, b * cutout);\n        const maxX = calcMax(0, startX, endX);\n        const maxY = calcMax(HALF_PI, startY, endY);\n        const minX = calcMin(PI, startX, endX);\n        const minY = calcMin(PI + HALF_PI, startY, endY);\n        ratioX = (maxX - minX) / 2;\n        ratioY = (maxY - minY) / 2;\n        offsetX = -(maxX + minX) / 2;\n        offsetY = -(maxY + minY) / 2;\n    }\n    return {\n        ratioX,\n        ratioY,\n        offsetX,\n        offsetY\n    };\n}\nclass DoughnutController extends DatasetController {\n    static id = 'doughnut';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: false\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'circumference',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius',\n                    'startAngle',\n                    'x',\n                    'y',\n                    'offset',\n                    'borderWidth',\n                    'spacing'\n                ]\n            }\n        },\n        cutout: '50%',\n        rotation: 0,\n        circumference: 360,\n        radius: '100%',\n        spacing: 0,\n        indexAxis: 'r'\n    };\n    static descriptors = {\n        _scriptable: (name)=>name !== 'spacing',\n        _indexable: (name)=>name !== 'spacing' && !name.startsWith('borderDash') && !name.startsWith('hoverBorderDash')\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.enableOptionSharing = true;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.offsetX = undefined;\n        this.offsetY = undefined;\n    }\n    linkScales() {}\n parse(start, count) {\n        const data = this.getDataset().data;\n        const meta = this._cachedMeta;\n        if (this._parsing === false) {\n            meta._parsed = data;\n        } else {\n            let getter = (i)=>+data[i];\n            if (isObject(data[start])) {\n                const { key ='value'  } = this._parsing;\n                getter = (i)=>+resolveObjectKey(data[i], key);\n            }\n            let i, ilen;\n            for(i = start, ilen = start + count; i < ilen; ++i){\n                meta._parsed[i] = getter(i);\n            }\n        }\n    }\n _getRotation() {\n        return toRadians(this.options.rotation - 90);\n    }\n _getCircumference() {\n        return toRadians(this.options.circumference);\n    }\n _getRotationExtents() {\n        let min = TAU;\n        let max = -TAU;\n        for(let i = 0; i < this.chart.data.datasets.length; ++i){\n            if (this.chart.isDatasetVisible(i) && this.chart.getDatasetMeta(i).type === this._type) {\n                const controller = this.chart.getDatasetMeta(i).controller;\n                const rotation = controller._getRotation();\n                const circumference = controller._getCircumference();\n                min = Math.min(min, rotation);\n                max = Math.max(max, rotation + circumference);\n            }\n        }\n        return {\n            rotation: min,\n            circumference: max - min\n        };\n    }\n update(mode) {\n        const chart = this.chart;\n        const { chartArea  } = chart;\n        const meta = this._cachedMeta;\n        const arcs = meta.data;\n        const spacing = this.getMaxBorderWidth() + this.getMaxOffset(arcs) + this.options.spacing;\n        const maxSize = Math.max((Math.min(chartArea.width, chartArea.height) - spacing) / 2, 0);\n        const cutout = Math.min(toPercentage(this.options.cutout, maxSize), 1);\n        const chartWeight = this._getRingWeight(this.index);\n        const { circumference , rotation  } = this._getRotationExtents();\n        const { ratioX , ratioY , offsetX , offsetY  } = getRatioAndOffset(rotation, circumference, cutout);\n        const maxWidth = (chartArea.width - spacing) / ratioX;\n        const maxHeight = (chartArea.height - spacing) / ratioY;\n        const maxRadius = Math.max(Math.min(maxWidth, maxHeight) / 2, 0);\n        const outerRadius = toDimension(this.options.radius, maxRadius);\n        const innerRadius = Math.max(outerRadius * cutout, 0);\n        const radiusLength = (outerRadius - innerRadius) / this._getVisibleDatasetWeightTotal();\n        this.offsetX = offsetX * outerRadius;\n        this.offsetY = offsetY * outerRadius;\n        meta.total = this.calculateTotal();\n        this.outerRadius = outerRadius - radiusLength * this._getRingWeightOffset(this.index);\n        this.innerRadius = Math.max(this.outerRadius - radiusLength * chartWeight, 0);\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n _circumference(i, reset) {\n        const opts = this.options;\n        const meta = this._cachedMeta;\n        const circumference = this._getCircumference();\n        if (reset && opts.animation.animateRotate || !this.chart.getDataVisibility(i) || meta._parsed[i] === null || meta.data[i].hidden) {\n            return 0;\n        }\n        return this.calculateCircumference(meta._parsed[i] * circumference / TAU);\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const centerX = (chartArea.left + chartArea.right) / 2;\n        const centerY = (chartArea.top + chartArea.bottom) / 2;\n        const animateScale = reset && animationOpts.animateScale;\n        const innerRadius = animateScale ? 0 : this.innerRadius;\n        const outerRadius = animateScale ? 0 : this.outerRadius;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        let startAngle = this._getRotation();\n        let i;\n        for(i = 0; i < start; ++i){\n            startAngle += this._circumference(i, reset);\n        }\n        for(i = start; i < start + count; ++i){\n            const circumference = this._circumference(i, reset);\n            const arc = arcs[i];\n            const properties = {\n                x: centerX + this.offsetX,\n                y: centerY + this.offsetY,\n                startAngle,\n                endAngle: startAngle + circumference,\n                circumference,\n                outerRadius,\n                innerRadius\n            };\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, arc.active ? 'active' : mode);\n            }\n            startAngle += circumference;\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    calculateTotal() {\n        const meta = this._cachedMeta;\n        const metaData = meta.data;\n        let total = 0;\n        let i;\n        for(i = 0; i < metaData.length; i++){\n            const value = meta._parsed[i];\n            if (value !== null && !isNaN(value) && this.chart.getDataVisibility(i) && !metaData[i].hidden) {\n                total += Math.abs(value);\n            }\n        }\n        return total;\n    }\n    calculateCircumference(value) {\n        const total = this._cachedMeta.total;\n        if (total > 0 && !isNaN(value)) {\n            return TAU * (Math.abs(value) / total);\n        }\n        return 0;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index], chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    getMaxBorderWidth(arcs) {\n        let max = 0;\n        const chart = this.chart;\n        let i, ilen, meta, controller, options;\n        if (!arcs) {\n            for(i = 0, ilen = chart.data.datasets.length; i < ilen; ++i){\n                if (chart.isDatasetVisible(i)) {\n                    meta = chart.getDatasetMeta(i);\n                    arcs = meta.data;\n                    controller = meta.controller;\n                    break;\n                }\n            }\n        }\n        if (!arcs) {\n            return 0;\n        }\n        for(i = 0, ilen = arcs.length; i < ilen; ++i){\n            options = controller.resolveDataElementOptions(i);\n            if (options.borderAlign !== 'inner') {\n                max = Math.max(max, options.borderWidth || 0, options.hoverBorderWidth || 0);\n            }\n        }\n        return max;\n    }\n    getMaxOffset(arcs) {\n        let max = 0;\n        for(let i = 0, ilen = arcs.length; i < ilen; ++i){\n            const options = this.resolveDataElementOptions(i);\n            max = Math.max(max, options.offset || 0, options.hoverOffset || 0);\n        }\n        return max;\n    }\n _getRingWeightOffset(datasetIndex) {\n        let ringWeightOffset = 0;\n        for(let i = 0; i < datasetIndex; ++i){\n            if (this.chart.isDatasetVisible(i)) {\n                ringWeightOffset += this._getRingWeight(i);\n            }\n        }\n        return ringWeightOffset;\n    }\n _getRingWeight(datasetIndex) {\n        return Math.max(valueOrDefault(this.chart.data.datasets[datasetIndex].weight, 1), 0);\n    }\n _getVisibleDatasetWeightTotal() {\n        return this._getRingWeightOffset(this.chart.data.datasets.length) || 1;\n    }\n}\n\nclass LineController extends DatasetController {\n    static id = 'line';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        showLine: true,\n        spanGaps: false\n    };\n static overrides = {\n        scales: {\n            _index_: {\n                type: 'category'\n            },\n            _value_: {\n                type: 'linear'\n            }\n        }\n    };\n    initialize() {\n        this.enableOptionSharing = true;\n        this.supportsDecimation = true;\n        super.initialize();\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { dataset: line , data: points = [] , _dataset  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        line._chart = this.chart;\n        line._datasetIndex = this.index;\n        line._decimated = !!_dataset._decimated;\n        line.points = points;\n        const options = this.resolveDatasetElementOptions(mode);\n        if (!this.options.showLine) {\n            options.borderWidth = 0;\n        }\n        options.segment = this.options.segment;\n        this.updateElement(line, undefined, {\n            animated: !animationsDisabled,\n            options\n        }, mode);\n        this.updateElements(points, start, count, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const { sharedOptions , includeOptions  } = this._getSharedOptions(start, mode);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        const end = start + count;\n        const pointsCount = points.length;\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = 0; i < pointsCount; ++i){\n            const point = points[i];\n            const properties = directUpdate ? point : {};\n            if (i < start || i >= end) {\n                properties.skip = true;\n                continue;\n            }\n            const parsed = this.getParsed(i);\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        const data = meta.data || [];\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n    draw() {\n        const meta = this._cachedMeta;\n        meta.dataset.updateControlPoints(this.chart.chartArea, meta.iScale.axis);\n        super.draw();\n    }\n}\n\nclass PolarAreaController extends DatasetController {\n    static id = 'polarArea';\n static defaults = {\n        dataElementType: 'arc',\n        animation: {\n            animateRotate: true,\n            animateScale: true\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'startAngle',\n                    'endAngle',\n                    'innerRadius',\n                    'outerRadius'\n                ]\n            }\n        },\n        indexAxis: 'r',\n        startAngle: 0\n    };\n static overrides = {\n        aspectRatio: 1,\n        plugins: {\n            legend: {\n                labels: {\n                    generateLabels (chart) {\n                        const data = chart.data;\n                        if (data.labels.length && data.datasets.length) {\n                            const { labels: { pointStyle , color  }  } = chart.legend.options;\n                            return data.labels.map((label, i)=>{\n                                const meta = chart.getDatasetMeta(0);\n                                const style = meta.controller.getStyle(i);\n                                return {\n                                    text: label,\n                                    fillStyle: style.backgroundColor,\n                                    strokeStyle: style.borderColor,\n                                    fontColor: color,\n                                    lineWidth: style.borderWidth,\n                                    pointStyle: pointStyle,\n                                    hidden: !chart.getDataVisibility(i),\n                                    index: i\n                                };\n                            });\n                        }\n                        return [];\n                    }\n                },\n                onClick (e, legendItem, legend) {\n                    legend.chart.toggleDataVisibility(legendItem.index);\n                    legend.chart.update();\n                }\n            }\n        },\n        scales: {\n            r: {\n                type: 'radialLinear',\n                angleLines: {\n                    display: false\n                },\n                beginAtZero: true,\n                grid: {\n                    circular: true\n                },\n                pointLabels: {\n                    display: false\n                },\n                startAngle: 0\n            }\n        }\n    };\n    constructor(chart, datasetIndex){\n        super(chart, datasetIndex);\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n    }\n    getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const chart = this.chart;\n        const labels = chart.data.labels || [];\n        const value = formatNumber(meta._parsed[index].r, chart.options.locale);\n        return {\n            label: labels[index] || '',\n            value\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const arcs = this._cachedMeta.data;\n        this._updateRadius();\n        this.updateElements(arcs, 0, arcs.length, mode);\n    }\n getMinMax() {\n        const meta = this._cachedMeta;\n        const range = {\n            min: Number.POSITIVE_INFINITY,\n            max: Number.NEGATIVE_INFINITY\n        };\n        meta.data.forEach((element, index)=>{\n            const parsed = this.getParsed(index).r;\n            if (!isNaN(parsed) && this.chart.getDataVisibility(index)) {\n                if (parsed < range.min) {\n                    range.min = parsed;\n                }\n                if (parsed > range.max) {\n                    range.max = parsed;\n                }\n            }\n        });\n        return range;\n    }\n _updateRadius() {\n        const chart = this.chart;\n        const chartArea = chart.chartArea;\n        const opts = chart.options;\n        const minSize = Math.min(chartArea.right - chartArea.left, chartArea.bottom - chartArea.top);\n        const outerRadius = Math.max(minSize / 2, 0);\n        const innerRadius = Math.max(opts.cutoutPercentage ? outerRadius / 100 * opts.cutoutPercentage : 1, 0);\n        const radiusLength = (outerRadius - innerRadius) / chart.getVisibleDatasetCount();\n        this.outerRadius = outerRadius - radiusLength * this.index;\n        this.innerRadius = this.outerRadius - radiusLength;\n    }\n    updateElements(arcs, start, count, mode) {\n        const reset = mode === 'reset';\n        const chart = this.chart;\n        const opts = chart.options;\n        const animationOpts = opts.animation;\n        const scale = this._cachedMeta.rScale;\n        const centerX = scale.xCenter;\n        const centerY = scale.yCenter;\n        const datasetStartAngle = scale.getIndexAngle(0) - 0.5 * PI;\n        let angle = datasetStartAngle;\n        let i;\n        const defaultAngle = 360 / this.countVisibleElements();\n        for(i = 0; i < start; ++i){\n            angle += this._computeAngle(i, mode, defaultAngle);\n        }\n        for(i = start; i < start + count; i++){\n            const arc = arcs[i];\n            let startAngle = angle;\n            let endAngle = angle + this._computeAngle(i, mode, defaultAngle);\n            let outerRadius = chart.getDataVisibility(i) ? scale.getDistanceFromCenterForValue(this.getParsed(i).r) : 0;\n            angle = endAngle;\n            if (reset) {\n                if (animationOpts.animateScale) {\n                    outerRadius = 0;\n                }\n                if (animationOpts.animateRotate) {\n                    startAngle = endAngle = datasetStartAngle;\n                }\n            }\n            const properties = {\n                x: centerX,\n                y: centerY,\n                innerRadius: 0,\n                outerRadius,\n                startAngle,\n                endAngle,\n                options: this.resolveDataElementOptions(i, arc.active ? 'active' : mode)\n            };\n            this.updateElement(arc, i, properties, mode);\n        }\n    }\n    countVisibleElements() {\n        const meta = this._cachedMeta;\n        let count = 0;\n        meta.data.forEach((element, index)=>{\n            if (!isNaN(this.getParsed(index).r) && this.chart.getDataVisibility(index)) {\n                count++;\n            }\n        });\n        return count;\n    }\n _computeAngle(index, mode, defaultAngle) {\n        return this.chart.getDataVisibility(index) ? toRadians(this.resolveDataElementOptions(index, mode).angle || defaultAngle) : 0;\n    }\n}\n\nclass PieController extends DoughnutController {\n    static id = 'pie';\n static defaults = {\n        cutout: 0,\n        rotation: 0,\n        circumference: 360,\n        radius: '100%'\n    };\n}\n\nclass RadarController extends DatasetController {\n    static id = 'radar';\n static defaults = {\n        datasetElementType: 'line',\n        dataElementType: 'point',\n        indexAxis: 'r',\n        showLine: true,\n        elements: {\n            line: {\n                fill: 'start'\n            }\n        }\n    };\n static overrides = {\n        aspectRatio: 1,\n        scales: {\n            r: {\n                type: 'radialLinear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const vScale = this._cachedMeta.vScale;\n        const parsed = this.getParsed(index);\n        return {\n            label: vScale.getLabels()[index],\n            value: '' + vScale.getLabelForValue(parsed[vScale.axis])\n        };\n    }\n    parseObjectData(meta, data, start, count) {\n        return _parseObjectDataRadialScale.bind(this)(meta, data, start, count);\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const line = meta.dataset;\n        const points = meta.data || [];\n        const labels = meta.iScale.getLabels();\n        line.points = points;\n        if (mode !== 'resize') {\n            const options = this.resolveDatasetElementOptions(mode);\n            if (!this.options.showLine) {\n                options.borderWidth = 0;\n            }\n            const properties = {\n                _loop: true,\n                _fullLoop: labels.length === points.length,\n                options\n            };\n            this.updateElement(line, undefined, properties, mode);\n        }\n        this.updateElements(points, 0, points.length, mode);\n    }\n    updateElements(points, start, count, mode) {\n        const scale = this._cachedMeta.rScale;\n        const reset = mode === 'reset';\n        for(let i = start; i < start + count; i++){\n            const point = points[i];\n            const options = this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            const pointPosition = scale.getPointPositionForValue(i, this.getParsed(i).r);\n            const x = reset ? scale.xCenter : pointPosition.x;\n            const y = reset ? scale.yCenter : pointPosition.y;\n            const properties = {\n                x,\n                y,\n                angle: pointPosition.angle,\n                skip: isNaN(x) || isNaN(y),\n                options\n            };\n            this.updateElement(point, i, properties, mode);\n        }\n    }\n}\n\nclass ScatterController extends DatasetController {\n    static id = 'scatter';\n static defaults = {\n        datasetElementType: false,\n        dataElementType: 'point',\n        showLine: false,\n        fill: false\n    };\n static overrides = {\n        interaction: {\n            mode: 'point'\n        },\n        scales: {\n            x: {\n                type: 'linear'\n            },\n            y: {\n                type: 'linear'\n            }\n        }\n    };\n getLabelAndValue(index) {\n        const meta = this._cachedMeta;\n        const labels = this.chart.data.labels || [];\n        const { xScale , yScale  } = meta;\n        const parsed = this.getParsed(index);\n        const x = xScale.getLabelForValue(parsed.x);\n        const y = yScale.getLabelForValue(parsed.y);\n        return {\n            label: labels[index] || '',\n            value: '(' + x + ', ' + y + ')'\n        };\n    }\n    update(mode) {\n        const meta = this._cachedMeta;\n        const { data: points = []  } = meta;\n        const animationsDisabled = this.chart._animationsDisabled;\n        let { start , count  } = _getStartAndCountOfVisiblePoints(meta, points, animationsDisabled);\n        this._drawStart = start;\n        this._drawCount = count;\n        if (_scaleRangesChanged(meta)) {\n            start = 0;\n            count = points.length;\n        }\n        if (this.options.showLine) {\n            if (!this.datasetElementType) {\n                this.addElements();\n            }\n            const { dataset: line , _dataset  } = meta;\n            line._chart = this.chart;\n            line._datasetIndex = this.index;\n            line._decimated = !!_dataset._decimated;\n            line.points = points;\n            const options = this.resolveDatasetElementOptions(mode);\n            options.segment = this.options.segment;\n            this.updateElement(line, undefined, {\n                animated: !animationsDisabled,\n                options\n            }, mode);\n        } else if (this.datasetElementType) {\n            delete meta.dataset;\n            this.datasetElementType = false;\n        }\n        this.updateElements(points, start, count, mode);\n    }\n    addElements() {\n        const { showLine  } = this.options;\n        if (!this.datasetElementType && showLine) {\n            this.datasetElementType = this.chart.registry.getElement('line');\n        }\n        super.addElements();\n    }\n    updateElements(points, start, count, mode) {\n        const reset = mode === 'reset';\n        const { iScale , vScale , _stacked , _dataset  } = this._cachedMeta;\n        const firstOpts = this.resolveDataElementOptions(start, mode);\n        const sharedOptions = this.getSharedOptions(firstOpts);\n        const includeOptions = this.includeOptions(mode, sharedOptions);\n        const iAxis = iScale.axis;\n        const vAxis = vScale.axis;\n        const { spanGaps , segment  } = this.options;\n        const maxGapLength = isNumber(spanGaps) ? spanGaps : Number.POSITIVE_INFINITY;\n        const directUpdate = this.chart._animationsDisabled || reset || mode === 'none';\n        let prevParsed = start > 0 && this.getParsed(start - 1);\n        for(let i = start; i < start + count; ++i){\n            const point = points[i];\n            const parsed = this.getParsed(i);\n            const properties = directUpdate ? point : {};\n            const nullData = isNullOrUndef(parsed[vAxis]);\n            const iPixel = properties[iAxis] = iScale.getPixelForValue(parsed[iAxis], i);\n            const vPixel = properties[vAxis] = reset || nullData ? vScale.getBasePixel() : vScale.getPixelForValue(_stacked ? this.applyStack(vScale, parsed, _stacked) : parsed[vAxis], i);\n            properties.skip = isNaN(iPixel) || isNaN(vPixel) || nullData;\n            properties.stop = i > 0 && Math.abs(parsed[iAxis] - prevParsed[iAxis]) > maxGapLength;\n            if (segment) {\n                properties.parsed = parsed;\n                properties.raw = _dataset.data[i];\n            }\n            if (includeOptions) {\n                properties.options = sharedOptions || this.resolveDataElementOptions(i, point.active ? 'active' : mode);\n            }\n            if (!directUpdate) {\n                this.updateElement(point, i, properties, mode);\n            }\n            prevParsed = parsed;\n        }\n        this.updateSharedOptions(sharedOptions, mode, firstOpts);\n    }\n getMaxOverflow() {\n        const meta = this._cachedMeta;\n        const data = meta.data || [];\n        if (!this.options.showLine) {\n            let max = 0;\n            for(let i = data.length - 1; i >= 0; --i){\n                max = Math.max(max, data[i].size(this.resolveDataElementOptions(i)) / 2);\n            }\n            return max > 0 && max;\n        }\n        const dataset = meta.dataset;\n        const border = dataset.options && dataset.options.borderWidth || 0;\n        if (!data.length) {\n            return border;\n        }\n        const firstPoint = data[0].size(this.resolveDataElementOptions(0));\n        const lastPoint = data[data.length - 1].size(this.resolveDataElementOptions(data.length - 1));\n        return Math.max(border, firstPoint, lastPoint) / 2;\n    }\n}\n\nvar controllers = /*#__PURE__*/Object.freeze({\n__proto__: null,\nBarController: BarController,\nBubbleController: BubbleController,\nDoughnutController: DoughnutController,\nLineController: LineController,\nPieController: PieController,\nPolarAreaController: PolarAreaController,\nRadarController: RadarController,\nScatterController: ScatterController\n});\n\n/**\n * @namespace Chart._adapters\n * @since 2.8.0\n * @private\n */ function abstract() {\n    throw new Error('This method is not implemented: Check that a complete date adapter is provided.');\n}\n/**\n * Date adapter (current used by the time scale)\n * @namespace Chart._adapters._date\n * @memberof Chart._adapters\n * @private\n */ class DateAdapterBase {\n    /**\n   * Override default date adapter methods.\n   * Accepts type parameter to define options type.\n   * @example\n   * Chart._adapters._date.override<{myAdapterOption: string}>({\n   *   init() {\n   *     console.log(this.options.myAdapterOption);\n   *   }\n   * })\n   */ static override(members) {\n        Object.assign(DateAdapterBase.prototype, members);\n    }\n    options;\n    constructor(options){\n        this.options = options || {};\n    }\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    init() {}\n    formats() {\n        return abstract();\n    }\n    parse() {\n        return abstract();\n    }\n    format() {\n        return abstract();\n    }\n    add() {\n        return abstract();\n    }\n    diff() {\n        return abstract();\n    }\n    startOf() {\n        return abstract();\n    }\n    endOf() {\n        return abstract();\n    }\n}\nvar adapters = {\n    _date: DateAdapterBase\n};\n\nfunction binarySearch(metaset, axis, value, intersect) {\n    const { controller , data , _sorted  } = metaset;\n    const iScale = controller._cachedMeta.iScale;\n    const spanGaps = metaset.dataset ? metaset.dataset.options ? metaset.dataset.options.spanGaps : null : null;\n    if (iScale && axis === iScale.axis && axis !== 'r' && _sorted && data.length) {\n        const lookupMethod = iScale._reversePixels ? _rlookupByKey : _lookupByKey;\n        if (!intersect) {\n            const result = lookupMethod(data, axis, value);\n            if (spanGaps) {\n                const { vScale  } = controller._cachedMeta;\n                const { _parsed  } = metaset;\n                const distanceToDefinedLo = _parsed.slice(0, result.lo + 1).reverse().findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.lo -= Math.max(0, distanceToDefinedLo);\n                const distanceToDefinedHi = _parsed.slice(result.hi).findIndex((point)=>!isNullOrUndef(point[vScale.axis]));\n                result.hi += Math.max(0, distanceToDefinedHi);\n            }\n            return result;\n        } else if (controller._sharedOptions) {\n            const el = data[0];\n            const range = typeof el.getRange === 'function' && el.getRange(axis);\n            if (range) {\n                const start = lookupMethod(data, axis, value - range);\n                const end = lookupMethod(data, axis, value + range);\n                return {\n                    lo: start.lo,\n                    hi: end.hi\n                };\n            }\n        }\n    }\n    return {\n        lo: 0,\n        hi: data.length - 1\n    };\n}\n function evaluateInteractionItems(chart, axis, position, handler, intersect) {\n    const metasets = chart.getSortedVisibleDatasetMetas();\n    const value = position[axis];\n    for(let i = 0, ilen = metasets.length; i < ilen; ++i){\n        const { index , data  } = metasets[i];\n        const { lo , hi  } = binarySearch(metasets[i], axis, value, intersect);\n        for(let j = lo; j <= hi; ++j){\n            const element = data[j];\n            if (!element.skip) {\n                handler(element, index, j);\n            }\n        }\n    }\n}\n function getDistanceMetricForAxis(axis) {\n    const useX = axis.indexOf('x') !== -1;\n    const useY = axis.indexOf('y') !== -1;\n    return function(pt1, pt2) {\n        const deltaX = useX ? Math.abs(pt1.x - pt2.x) : 0;\n        const deltaY = useY ? Math.abs(pt1.y - pt2.y) : 0;\n        return Math.sqrt(Math.pow(deltaX, 2) + Math.pow(deltaY, 2));\n    };\n}\n function getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) {\n    const items = [];\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return items;\n    }\n    const evaluationFunc = function(element, datasetIndex, index) {\n        if (!includeInvisible && !_isPointInArea(element, chart.chartArea, 0)) {\n            return;\n        }\n        if (element.inRange(position.x, position.y, useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    };\n    evaluateInteractionItems(chart, axis, position, evaluationFunc, true);\n    return items;\n}\n function getNearestRadialItems(chart, position, axis, useFinalPosition) {\n    let items = [];\n    function evaluationFunc(element, datasetIndex, index) {\n        const { startAngle , endAngle  } = element.getProps([\n            'startAngle',\n            'endAngle'\n        ], useFinalPosition);\n        const { angle  } = getAngleFromPoint(element, {\n            x: position.x,\n            y: position.y\n        });\n        if (_angleBetween(angle, startAngle, endAngle)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    let items = [];\n    const distanceMetric = getDistanceMetricForAxis(axis);\n    let minDistance = Number.POSITIVE_INFINITY;\n    function evaluationFunc(element, datasetIndex, index) {\n        const inRange = element.inRange(position.x, position.y, useFinalPosition);\n        if (intersect && !inRange) {\n            return;\n        }\n        const center = element.getCenterPoint(useFinalPosition);\n        const pointInArea = !!includeInvisible || chart.isPointInArea(center);\n        if (!pointInArea && !inRange) {\n            return;\n        }\n        const distance = distanceMetric(position, center);\n        if (distance < minDistance) {\n            items = [\n                {\n                    element,\n                    datasetIndex,\n                    index\n                }\n            ];\n            minDistance = distance;\n        } else if (distance === minDistance) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n        }\n    }\n    evaluateInteractionItems(chart, axis, position, evaluationFunc);\n    return items;\n}\n function getNearestItems(chart, position, axis, intersect, useFinalPosition, includeInvisible) {\n    if (!includeInvisible && !chart.isPointInArea(position)) {\n        return [];\n    }\n    return axis === 'r' && !intersect ? getNearestRadialItems(chart, position, axis, useFinalPosition) : getNearestCartesianItems(chart, position, axis, intersect, useFinalPosition, includeInvisible);\n}\n function getAxisItems(chart, position, axis, intersect, useFinalPosition) {\n    const items = [];\n    const rangeMethod = axis === 'x' ? 'inXRange' : 'inYRange';\n    let intersectsItem = false;\n    evaluateInteractionItems(chart, axis, position, (element, datasetIndex, index)=>{\n        if (element[rangeMethod] && element[rangeMethod](position[axis], useFinalPosition)) {\n            items.push({\n                element,\n                datasetIndex,\n                index\n            });\n            intersectsItem = intersectsItem || element.inRange(position.x, position.y, useFinalPosition);\n        }\n    });\n    if (intersect && !intersectsItem) {\n        return [];\n    }\n    return items;\n}\n var Interaction = {\n    evaluateInteractionItems,\n    modes: {\n index (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'x';\n            const includeInvisible = options.includeInvisible || false;\n            const items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            const elements = [];\n            if (!items.length) {\n                return [];\n            }\n            chart.getSortedVisibleDatasetMetas().forEach((meta)=>{\n                const index = items[0].index;\n                const element = meta.data[index];\n                if (element && !element.skip) {\n                    elements.push({\n                        element,\n                        datasetIndex: meta.index,\n                        index\n                    });\n                }\n            });\n            return elements;\n        },\n dataset (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            let items = options.intersect ? getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible) : getNearestItems(chart, position, axis, false, useFinalPosition, includeInvisible);\n            if (items.length > 0) {\n                const datasetIndex = items[0].datasetIndex;\n                const data = chart.getDatasetMeta(datasetIndex).data;\n                items = [];\n                for(let i = 0; i < data.length; ++i){\n                    items.push({\n                        element: data[i],\n                        datasetIndex,\n                        index: i\n                    });\n                }\n            }\n            return items;\n        },\n point (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getIntersectItems(chart, position, axis, useFinalPosition, includeInvisible);\n        },\n nearest (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            const axis = options.axis || 'xy';\n            const includeInvisible = options.includeInvisible || false;\n            return getNearestItems(chart, position, axis, options.intersect, useFinalPosition, includeInvisible);\n        },\n x (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'x', options.intersect, useFinalPosition);\n        },\n y (chart, e, options, useFinalPosition) {\n            const position = getRelativePosition(e, chart);\n            return getAxisItems(chart, position, 'y', options.intersect, useFinalPosition);\n        }\n    }\n};\n\nconst STATIC_POSITIONS = [\n    'left',\n    'top',\n    'right',\n    'bottom'\n];\nfunction filterByPosition(array, position) {\n    return array.filter((v)=>v.pos === position);\n}\nfunction filterDynamicPositionByAxis(array, axis) {\n    return array.filter((v)=>STATIC_POSITIONS.indexOf(v.pos) === -1 && v.box.axis === axis);\n}\nfunction sortByWeight(array, reverse) {\n    return array.sort((a, b)=>{\n        const v0 = reverse ? b : a;\n        const v1 = reverse ? a : b;\n        return v0.weight === v1.weight ? v0.index - v1.index : v0.weight - v1.weight;\n    });\n}\nfunction wrapBoxes(boxes) {\n    const layoutBoxes = [];\n    let i, ilen, box, pos, stack, stackWeight;\n    for(i = 0, ilen = (boxes || []).length; i < ilen; ++i){\n        box = boxes[i];\n        ({ position: pos , options: { stack , stackWeight =1  }  } = box);\n        layoutBoxes.push({\n            index: i,\n            box,\n            pos,\n            horizontal: box.isHorizontal(),\n            weight: box.weight,\n            stack: stack && pos + stack,\n            stackWeight\n        });\n    }\n    return layoutBoxes;\n}\nfunction buildStacks(layouts) {\n    const stacks = {};\n    for (const wrap of layouts){\n        const { stack , pos , stackWeight  } = wrap;\n        if (!stack || !STATIC_POSITIONS.includes(pos)) {\n            continue;\n        }\n        const _stack = stacks[stack] || (stacks[stack] = {\n            count: 0,\n            placed: 0,\n            weight: 0,\n            size: 0\n        });\n        _stack.count++;\n        _stack.weight += stackWeight;\n    }\n    return stacks;\n}\n function setLayoutDims(layouts, params) {\n    const stacks = buildStacks(layouts);\n    const { vBoxMaxWidth , hBoxMaxHeight  } = params;\n    let i, ilen, layout;\n    for(i = 0, ilen = layouts.length; i < ilen; ++i){\n        layout = layouts[i];\n        const { fullSize  } = layout.box;\n        const stack = stacks[layout.stack];\n        const factor = stack && layout.stackWeight / stack.weight;\n        if (layout.horizontal) {\n            layout.width = factor ? factor * vBoxMaxWidth : fullSize && params.availableWidth;\n            layout.height = hBoxMaxHeight;\n        } else {\n            layout.width = vBoxMaxWidth;\n            layout.height = factor ? factor * hBoxMaxHeight : fullSize && params.availableHeight;\n        }\n    }\n    return stacks;\n}\nfunction buildLayoutBoxes(boxes) {\n    const layoutBoxes = wrapBoxes(boxes);\n    const fullSize = sortByWeight(layoutBoxes.filter((wrap)=>wrap.box.fullSize), true);\n    const left = sortByWeight(filterByPosition(layoutBoxes, 'left'), true);\n    const right = sortByWeight(filterByPosition(layoutBoxes, 'right'));\n    const top = sortByWeight(filterByPosition(layoutBoxes, 'top'), true);\n    const bottom = sortByWeight(filterByPosition(layoutBoxes, 'bottom'));\n    const centerHorizontal = filterDynamicPositionByAxis(layoutBoxes, 'x');\n    const centerVertical = filterDynamicPositionByAxis(layoutBoxes, 'y');\n    return {\n        fullSize,\n        leftAndTop: left.concat(top),\n        rightAndBottom: right.concat(centerVertical).concat(bottom).concat(centerHorizontal),\n        chartArea: filterByPosition(layoutBoxes, 'chartArea'),\n        vertical: left.concat(right).concat(centerVertical),\n        horizontal: top.concat(bottom).concat(centerHorizontal)\n    };\n}\nfunction getCombinedMax(maxPadding, chartArea, a, b) {\n    return Math.max(maxPadding[a], chartArea[a]) + Math.max(maxPadding[b], chartArea[b]);\n}\nfunction updateMaxPadding(maxPadding, boxPadding) {\n    maxPadding.top = Math.max(maxPadding.top, boxPadding.top);\n    maxPadding.left = Math.max(maxPadding.left, boxPadding.left);\n    maxPadding.bottom = Math.max(maxPadding.bottom, boxPadding.bottom);\n    maxPadding.right = Math.max(maxPadding.right, boxPadding.right);\n}\nfunction updateDims(chartArea, params, layout, stacks) {\n    const { pos , box  } = layout;\n    const maxPadding = chartArea.maxPadding;\n    if (!isObject(pos)) {\n        if (layout.size) {\n            chartArea[pos] -= layout.size;\n        }\n        const stack = stacks[layout.stack] || {\n            size: 0,\n            count: 1\n        };\n        stack.size = Math.max(stack.size, layout.horizontal ? box.height : box.width);\n        layout.size = stack.size / stack.count;\n        chartArea[pos] += layout.size;\n    }\n    if (box.getPadding) {\n        updateMaxPadding(maxPadding, box.getPadding());\n    }\n    const newWidth = Math.max(0, params.outerWidth - getCombinedMax(maxPadding, chartArea, 'left', 'right'));\n    const newHeight = Math.max(0, params.outerHeight - getCombinedMax(maxPadding, chartArea, 'top', 'bottom'));\n    const widthChanged = newWidth !== chartArea.w;\n    const heightChanged = newHeight !== chartArea.h;\n    chartArea.w = newWidth;\n    chartArea.h = newHeight;\n    return layout.horizontal ? {\n        same: widthChanged,\n        other: heightChanged\n    } : {\n        same: heightChanged,\n        other: widthChanged\n    };\n}\nfunction handleMaxPadding(chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function updatePos(pos) {\n        const change = Math.max(maxPadding[pos] - chartArea[pos], 0);\n        chartArea[pos] += change;\n        return change;\n    }\n    chartArea.y += updatePos('top');\n    chartArea.x += updatePos('left');\n    updatePos('right');\n    updatePos('bottom');\n}\nfunction getMargins(horizontal, chartArea) {\n    const maxPadding = chartArea.maxPadding;\n    function marginForPositions(positions) {\n        const margin = {\n            left: 0,\n            top: 0,\n            right: 0,\n            bottom: 0\n        };\n        positions.forEach((pos)=>{\n            margin[pos] = Math.max(chartArea[pos], maxPadding[pos]);\n        });\n        return margin;\n    }\n    return horizontal ? marginForPositions([\n        'left',\n        'right'\n    ]) : marginForPositions([\n        'top',\n        'bottom'\n    ]);\n}\nfunction fitBoxes(boxes, chartArea, params, stacks) {\n    const refitBoxes = [];\n    let i, ilen, layout, box, refit, changed;\n    for(i = 0, ilen = boxes.length, refit = 0; i < ilen; ++i){\n        layout = boxes[i];\n        box = layout.box;\n        box.update(layout.width || chartArea.w, layout.height || chartArea.h, getMargins(layout.horizontal, chartArea));\n        const { same , other  } = updateDims(chartArea, params, layout, stacks);\n        refit |= same && refitBoxes.length;\n        changed = changed || other;\n        if (!box.fullSize) {\n            refitBoxes.push(layout);\n        }\n    }\n    return refit && fitBoxes(refitBoxes, chartArea, params, stacks) || changed;\n}\nfunction setBoxDims(box, left, top, width, height) {\n    box.top = top;\n    box.left = left;\n    box.right = left + width;\n    box.bottom = top + height;\n    box.width = width;\n    box.height = height;\n}\nfunction placeBoxes(boxes, chartArea, params, stacks) {\n    const userPadding = params.padding;\n    let { x , y  } = chartArea;\n    for (const layout of boxes){\n        const box = layout.box;\n        const stack = stacks[layout.stack] || {\n            count: 1,\n            placed: 0,\n            weight: 1\n        };\n        const weight = layout.stackWeight / stack.weight || 1;\n        if (layout.horizontal) {\n            const width = chartArea.w * weight;\n            const height = stack.size || box.height;\n            if (defined(stack.start)) {\n                y = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, userPadding.left, y, params.outerWidth - userPadding.right - userPadding.left, height);\n            } else {\n                setBoxDims(box, chartArea.left + stack.placed, y, width, height);\n            }\n            stack.start = y;\n            stack.placed += width;\n            y = box.bottom;\n        } else {\n            const height = chartArea.h * weight;\n            const width = stack.size || box.width;\n            if (defined(stack.start)) {\n                x = stack.start;\n            }\n            if (box.fullSize) {\n                setBoxDims(box, x, userPadding.top, width, params.outerHeight - userPadding.bottom - userPadding.top);\n            } else {\n                setBoxDims(box, x, chartArea.top + stack.placed, width, height);\n            }\n            stack.start = x;\n            stack.placed += height;\n            x = box.right;\n        }\n    }\n    chartArea.x = x;\n    chartArea.y = y;\n}\nvar layouts = {\n addBox (chart, item) {\n        if (!chart.boxes) {\n            chart.boxes = [];\n        }\n        item.fullSize = item.fullSize || false;\n        item.position = item.position || 'top';\n        item.weight = item.weight || 0;\n        item._layers = item._layers || function() {\n            return [\n                {\n                    z: 0,\n                    draw (chartArea) {\n                        item.draw(chartArea);\n                    }\n                }\n            ];\n        };\n        chart.boxes.push(item);\n    },\n removeBox (chart, layoutItem) {\n        const index = chart.boxes ? chart.boxes.indexOf(layoutItem) : -1;\n        if (index !== -1) {\n            chart.boxes.splice(index, 1);\n        }\n    },\n configure (chart, item, options) {\n        item.fullSize = options.fullSize;\n        item.position = options.position;\n        item.weight = options.weight;\n    },\n update (chart, width, height, minPadding) {\n        if (!chart) {\n            return;\n        }\n        const padding = toPadding(chart.options.layout.padding);\n        const availableWidth = Math.max(width - padding.width, 0);\n        const availableHeight = Math.max(height - padding.height, 0);\n        const boxes = buildLayoutBoxes(chart.boxes);\n        const verticalBoxes = boxes.vertical;\n        const horizontalBoxes = boxes.horizontal;\n        each(chart.boxes, (box)=>{\n            if (typeof box.beforeLayout === 'function') {\n                box.beforeLayout();\n            }\n        });\n        const visibleVerticalBoxCount = verticalBoxes.reduce((total, wrap)=>wrap.box.options && wrap.box.options.display === false ? total : total + 1, 0) || 1;\n        const params = Object.freeze({\n            outerWidth: width,\n            outerHeight: height,\n            padding,\n            availableWidth,\n            availableHeight,\n            vBoxMaxWidth: availableWidth / 2 / visibleVerticalBoxCount,\n            hBoxMaxHeight: availableHeight / 2\n        });\n        const maxPadding = Object.assign({}, padding);\n        updateMaxPadding(maxPadding, toPadding(minPadding));\n        const chartArea = Object.assign({\n            maxPadding,\n            w: availableWidth,\n            h: availableHeight,\n            x: padding.left,\n            y: padding.top\n        }, padding);\n        const stacks = setLayoutDims(verticalBoxes.concat(horizontalBoxes), params);\n        fitBoxes(boxes.fullSize, chartArea, params, stacks);\n        fitBoxes(verticalBoxes, chartArea, params, stacks);\n        if (fitBoxes(horizontalBoxes, chartArea, params, stacks)) {\n            fitBoxes(verticalBoxes, chartArea, params, stacks);\n        }\n        handleMaxPadding(chartArea);\n        placeBoxes(boxes.leftAndTop, chartArea, params, stacks);\n        chartArea.x += chartArea.w;\n        chartArea.y += chartArea.h;\n        placeBoxes(boxes.rightAndBottom, chartArea, params, stacks);\n        chart.chartArea = {\n            left: chartArea.left,\n            top: chartArea.top,\n            right: chartArea.left + chartArea.w,\n            bottom: chartArea.top + chartArea.h,\n            height: chartArea.h,\n            width: chartArea.w\n        };\n        each(boxes.chartArea, (layout)=>{\n            const box = layout.box;\n            Object.assign(box, chart.chartArea);\n            box.update(chartArea.w, chartArea.h, {\n                left: 0,\n                top: 0,\n                right: 0,\n                bottom: 0\n            });\n        });\n    }\n};\n\nclass BasePlatform {\n acquireContext(canvas, aspectRatio) {}\n releaseContext(context) {\n        return false;\n    }\n addEventListener(chart, type, listener) {}\n removeEventListener(chart, type, listener) {}\n getDevicePixelRatio() {\n        return 1;\n    }\n getMaximumSize(element, width, height, aspectRatio) {\n        width = Math.max(0, width || element.width);\n        height = height || element.height;\n        return {\n            width,\n            height: Math.max(0, aspectRatio ? Math.floor(width / aspectRatio) : height)\n        };\n    }\n isAttached(canvas) {\n        return true;\n    }\n updateConfig(config) {\n    }\n}\n\nclass BasicPlatform extends BasePlatform {\n    acquireContext(item) {\n        return item && item.getContext && item.getContext('2d') || null;\n    }\n    updateConfig(config) {\n        config.options.animation = false;\n    }\n}\n\nconst EXPANDO_KEY = '$chartjs';\n const EVENT_TYPES = {\n    touchstart: 'mousedown',\n    touchmove: 'mousemove',\n    touchend: 'mouseup',\n    pointerenter: 'mouseenter',\n    pointerdown: 'mousedown',\n    pointermove: 'mousemove',\n    pointerup: 'mouseup',\n    pointerleave: 'mouseout',\n    pointerout: 'mouseout'\n};\nconst isNullOrEmpty = (value)=>value === null || value === '';\n function initCanvas(canvas, aspectRatio) {\n    const style = canvas.style;\n    const renderHeight = canvas.getAttribute('height');\n    const renderWidth = canvas.getAttribute('width');\n    canvas[EXPANDO_KEY] = {\n        initial: {\n            height: renderHeight,\n            width: renderWidth,\n            style: {\n                display: style.display,\n                height: style.height,\n                width: style.width\n            }\n        }\n    };\n    style.display = style.display || 'block';\n    style.boxSizing = style.boxSizing || 'border-box';\n    if (isNullOrEmpty(renderWidth)) {\n        const displayWidth = readUsedSize(canvas, 'width');\n        if (displayWidth !== undefined) {\n            canvas.width = displayWidth;\n        }\n    }\n    if (isNullOrEmpty(renderHeight)) {\n        if (canvas.style.height === '') {\n            canvas.height = canvas.width / (aspectRatio || 2);\n        } else {\n            const displayHeight = readUsedSize(canvas, 'height');\n            if (displayHeight !== undefined) {\n                canvas.height = displayHeight;\n            }\n        }\n    }\n    return canvas;\n}\nconst eventListenerOptions = supportsEventListenerOptions ? {\n    passive: true\n} : false;\nfunction addListener(node, type, listener) {\n    if (node) {\n        node.addEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction removeListener(chart, type, listener) {\n    if (chart && chart.canvas) {\n        chart.canvas.removeEventListener(type, listener, eventListenerOptions);\n    }\n}\nfunction fromNativeEvent(event, chart) {\n    const type = EVENT_TYPES[event.type] || event.type;\n    const { x , y  } = getRelativePosition(event, chart);\n    return {\n        type,\n        chart,\n        native: event,\n        x: x !== undefined ? x : null,\n        y: y !== undefined ? y : null\n    };\n}\nfunction nodeListContains(nodeList, canvas) {\n    for (const node of nodeList){\n        if (node === canvas || node.contains(canvas)) {\n            return true;\n        }\n    }\n}\nfunction createAttachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.addedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.removedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nfunction createDetachObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const observer = new MutationObserver((entries)=>{\n        let trigger = false;\n        for (const entry of entries){\n            trigger = trigger || nodeListContains(entry.removedNodes, canvas);\n            trigger = trigger && !nodeListContains(entry.addedNodes, canvas);\n        }\n        if (trigger) {\n            listener();\n        }\n    });\n    observer.observe(document, {\n        childList: true,\n        subtree: true\n    });\n    return observer;\n}\nconst drpListeningCharts = new Map();\nlet oldDevicePixelRatio = 0;\nfunction onWindowResize() {\n    const dpr = window.devicePixelRatio;\n    if (dpr === oldDevicePixelRatio) {\n        return;\n    }\n    oldDevicePixelRatio = dpr;\n    drpListeningCharts.forEach((resize, chart)=>{\n        if (chart.currentDevicePixelRatio !== dpr) {\n            resize();\n        }\n    });\n}\nfunction listenDevicePixelRatioChanges(chart, resize) {\n    if (!drpListeningCharts.size) {\n        window.addEventListener('resize', onWindowResize);\n    }\n    drpListeningCharts.set(chart, resize);\n}\nfunction unlistenDevicePixelRatioChanges(chart) {\n    drpListeningCharts.delete(chart);\n    if (!drpListeningCharts.size) {\n        window.removeEventListener('resize', onWindowResize);\n    }\n}\nfunction createResizeObserver(chart, type, listener) {\n    const canvas = chart.canvas;\n    const container = canvas && _getParentNode(canvas);\n    if (!container) {\n        return;\n    }\n    const resize = throttled((width, height)=>{\n        const w = container.clientWidth;\n        listener(width, height);\n        if (w < container.clientWidth) {\n            listener();\n        }\n    }, window);\n    const observer = new ResizeObserver((entries)=>{\n        const entry = entries[0];\n        const width = entry.contentRect.width;\n        const height = entry.contentRect.height;\n        if (width === 0 && height === 0) {\n            return;\n        }\n        resize(width, height);\n    });\n    observer.observe(container);\n    listenDevicePixelRatioChanges(chart, resize);\n    return observer;\n}\nfunction releaseObserver(chart, type, observer) {\n    if (observer) {\n        observer.disconnect();\n    }\n    if (type === 'resize') {\n        unlistenDevicePixelRatioChanges(chart);\n    }\n}\nfunction createProxyAndListen(chart, type, listener) {\n    const canvas = chart.canvas;\n    const proxy = throttled((event)=>{\n        if (chart.ctx !== null) {\n            listener(fromNativeEvent(event, chart));\n        }\n    }, chart);\n    addListener(canvas, type, proxy);\n    return proxy;\n}\n class DomPlatform extends BasePlatform {\n acquireContext(canvas, aspectRatio) {\n        const context = canvas && canvas.getContext && canvas.getContext('2d');\n        if (context && context.canvas === canvas) {\n            initCanvas(canvas, aspectRatio);\n            return context;\n        }\n        return null;\n    }\n releaseContext(context) {\n        const canvas = context.canvas;\n        if (!canvas[EXPANDO_KEY]) {\n            return false;\n        }\n        const initial = canvas[EXPANDO_KEY].initial;\n        [\n            'height',\n            'width'\n        ].forEach((prop)=>{\n            const value = initial[prop];\n            if (isNullOrUndef(value)) {\n                canvas.removeAttribute(prop);\n            } else {\n                canvas.setAttribute(prop, value);\n            }\n        });\n        const style = initial.style || {};\n        Object.keys(style).forEach((key)=>{\n            canvas.style[key] = style[key];\n        });\n        canvas.width = canvas.width;\n        delete canvas[EXPANDO_KEY];\n        return true;\n    }\n addEventListener(chart, type, listener) {\n        this.removeEventListener(chart, type);\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const handlers = {\n            attach: createAttachObserver,\n            detach: createDetachObserver,\n            resize: createResizeObserver\n        };\n        const handler = handlers[type] || createProxyAndListen;\n        proxies[type] = handler(chart, type, listener);\n    }\n removeEventListener(chart, type) {\n        const proxies = chart.$proxies || (chart.$proxies = {});\n        const proxy = proxies[type];\n        if (!proxy) {\n            return;\n        }\n        const handlers = {\n            attach: releaseObserver,\n            detach: releaseObserver,\n            resize: releaseObserver\n        };\n        const handler = handlers[type] || removeListener;\n        handler(chart, type, proxy);\n        proxies[type] = undefined;\n    }\n    getDevicePixelRatio() {\n        return window.devicePixelRatio;\n    }\n getMaximumSize(canvas, width, height, aspectRatio) {\n        return getMaximumSize(canvas, width, height, aspectRatio);\n    }\n isAttached(canvas) {\n        const container = canvas && _getParentNode(canvas);\n        return !!(container && container.isConnected);\n    }\n}\n\nfunction _detectPlatform(canvas) {\n    if (!_isDomSupported() || typeof OffscreenCanvas !== 'undefined' && canvas instanceof OffscreenCanvas) {\n        return BasicPlatform;\n    }\n    return DomPlatform;\n}\n\nclass Element {\n    static defaults = {};\n    static defaultRoutes = undefined;\n    x;\n    y;\n    active = false;\n    options;\n    $animations;\n    tooltipPosition(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    hasValue() {\n        return isNumber(this.x) && isNumber(this.y);\n    }\n    getProps(props, final) {\n        const anims = this.$animations;\n        if (!final || !anims) {\n            // let's not create an object, if not needed\n            return this;\n        }\n        const ret = {};\n        props.forEach((prop)=>{\n            ret[prop] = anims[prop] && anims[prop].active() ? anims[prop]._to : this[prop];\n        });\n        return ret;\n    }\n}\n\nfunction autoSkip(scale, ticks) {\n    const tickOpts = scale.options.ticks;\n    const determinedMaxTicks = determineMaxTicks(scale);\n    const ticksLimit = Math.min(tickOpts.maxTicksLimit || determinedMaxTicks, determinedMaxTicks);\n    const majorIndices = tickOpts.major.enabled ? getMajorIndices(ticks) : [];\n    const numMajorIndices = majorIndices.length;\n    const first = majorIndices[0];\n    const last = majorIndices[numMajorIndices - 1];\n    const newTicks = [];\n    if (numMajorIndices > ticksLimit) {\n        skipMajors(ticks, newTicks, majorIndices, numMajorIndices / ticksLimit);\n        return newTicks;\n    }\n    const spacing = calculateSpacing(majorIndices, ticks, ticksLimit);\n    if (numMajorIndices > 0) {\n        let i, ilen;\n        const avgMajorSpacing = numMajorIndices > 1 ? Math.round((last - first) / (numMajorIndices - 1)) : null;\n        skip(ticks, newTicks, spacing, isNullOrUndef(avgMajorSpacing) ? 0 : first - avgMajorSpacing, first);\n        for(i = 0, ilen = numMajorIndices - 1; i < ilen; i++){\n            skip(ticks, newTicks, spacing, majorIndices[i], majorIndices[i + 1]);\n        }\n        skip(ticks, newTicks, spacing, last, isNullOrUndef(avgMajorSpacing) ? ticks.length : last + avgMajorSpacing);\n        return newTicks;\n    }\n    skip(ticks, newTicks, spacing);\n    return newTicks;\n}\nfunction determineMaxTicks(scale) {\n    const offset = scale.options.offset;\n    const tickLength = scale._tickSize();\n    const maxScale = scale._length / tickLength + (offset ? 0 : 1);\n    const maxChart = scale._maxLength / tickLength;\n    return Math.floor(Math.min(maxScale, maxChart));\n}\n function calculateSpacing(majorIndices, ticks, ticksLimit) {\n    const evenMajorSpacing = getEvenSpacing(majorIndices);\n    const spacing = ticks.length / ticksLimit;\n    if (!evenMajorSpacing) {\n        return Math.max(spacing, 1);\n    }\n    const factors = _factorize(evenMajorSpacing);\n    for(let i = 0, ilen = factors.length - 1; i < ilen; i++){\n        const factor = factors[i];\n        if (factor > spacing) {\n            return factor;\n        }\n    }\n    return Math.max(spacing, 1);\n}\n function getMajorIndices(ticks) {\n    const result = [];\n    let i, ilen;\n    for(i = 0, ilen = ticks.length; i < ilen; i++){\n        if (ticks[i].major) {\n            result.push(i);\n        }\n    }\n    return result;\n}\n function skipMajors(ticks, newTicks, majorIndices, spacing) {\n    let count = 0;\n    let next = majorIndices[0];\n    let i;\n    spacing = Math.ceil(spacing);\n    for(i = 0; i < ticks.length; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = majorIndices[count * spacing];\n        }\n    }\n}\n function skip(ticks, newTicks, spacing, majorStart, majorEnd) {\n    const start = valueOrDefault(majorStart, 0);\n    const end = Math.min(valueOrDefault(majorEnd, ticks.length), ticks.length);\n    let count = 0;\n    let length, i, next;\n    spacing = Math.ceil(spacing);\n    if (majorEnd) {\n        length = majorEnd - majorStart;\n        spacing = length / Math.floor(length / spacing);\n    }\n    next = start;\n    while(next < 0){\n        count++;\n        next = Math.round(start + count * spacing);\n    }\n    for(i = Math.max(start, 0); i < end; i++){\n        if (i === next) {\n            newTicks.push(ticks[i]);\n            count++;\n            next = Math.round(start + count * spacing);\n        }\n    }\n}\n function getEvenSpacing(arr) {\n    const len = arr.length;\n    let i, diff;\n    if (len < 2) {\n        return false;\n    }\n    for(diff = arr[0], i = 1; i < len; ++i){\n        if (arr[i] - arr[i - 1] !== diff) {\n            return false;\n        }\n    }\n    return diff;\n}\n\nconst reverseAlign = (align)=>align === 'left' ? 'right' : align === 'right' ? 'left' : align;\nconst offsetFromEdge = (scale, edge, offset)=>edge === 'top' || edge === 'left' ? scale[edge] + offset : scale[edge] - offset;\nconst getTicksLimit = (ticksLength, maxTicksLimit)=>Math.min(maxTicksLimit || ticksLength, ticksLength);\n function sample(arr, numItems) {\n    const result = [];\n    const increment = arr.length / numItems;\n    const len = arr.length;\n    let i = 0;\n    for(; i < len; i += increment){\n        result.push(arr[Math.floor(i)]);\n    }\n    return result;\n}\n function getPixelForGridLine(scale, index, offsetGridLines) {\n    const length = scale.ticks.length;\n    const validIndex = Math.min(index, length - 1);\n    const start = scale._startPixel;\n    const end = scale._endPixel;\n    const epsilon = 1e-6;\n    let lineValue = scale.getPixelForTick(validIndex);\n    let offset;\n    if (offsetGridLines) {\n        if (length === 1) {\n            offset = Math.max(lineValue - start, end - lineValue);\n        } else if (index === 0) {\n            offset = (scale.getPixelForTick(1) - lineValue) / 2;\n        } else {\n            offset = (lineValue - scale.getPixelForTick(validIndex - 1)) / 2;\n        }\n        lineValue += validIndex < index ? offset : -offset;\n        if (lineValue < start - epsilon || lineValue > end + epsilon) {\n            return;\n        }\n    }\n    return lineValue;\n}\n function garbageCollect(caches, length) {\n    each(caches, (cache)=>{\n        const gc = cache.gc;\n        const gcLen = gc.length / 2;\n        let i;\n        if (gcLen > length) {\n            for(i = 0; i < gcLen; ++i){\n                delete cache.data[gc[i]];\n            }\n            gc.splice(0, gcLen);\n        }\n    });\n}\n function getTickMarkLength(options) {\n    return options.drawTicks ? options.tickLength : 0;\n}\n function getTitleHeight(options, fallback) {\n    if (!options.display) {\n        return 0;\n    }\n    const font = toFont(options.font, fallback);\n    const padding = toPadding(options.padding);\n    const lines = isArray(options.text) ? options.text.length : 1;\n    return lines * font.lineHeight + padding.height;\n}\nfunction createScaleContext(parent, scale) {\n    return createContext(parent, {\n        scale,\n        type: 'scale'\n    });\n}\nfunction createTickContext(parent, index, tick) {\n    return createContext(parent, {\n        tick,\n        index,\n        type: 'tick'\n    });\n}\nfunction titleAlign(align, position, reverse) {\n     let ret = _toLeftRightCenter(align);\n    if (reverse && position !== 'right' || !reverse && position === 'right') {\n        ret = reverseAlign(ret);\n    }\n    return ret;\n}\nfunction titleArgs(scale, offset, position, align) {\n    const { top , left , bottom , right , chart  } = scale;\n    const { chartArea , scales  } = chart;\n    let rotation = 0;\n    let maxWidth, titleX, titleY;\n    const height = bottom - top;\n    const width = right - left;\n    if (scale.isHorizontal()) {\n        titleX = _alignStartEnd(align, left, right);\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleY = scales[positionAxisID].getPixelForValue(value) + height - offset;\n        } else if (position === 'center') {\n            titleY = (chartArea.bottom + chartArea.top) / 2 + height - offset;\n        } else {\n            titleY = offsetFromEdge(scale, position, offset);\n        }\n        maxWidth = right - left;\n    } else {\n        if (isObject(position)) {\n            const positionAxisID = Object.keys(position)[0];\n            const value = position[positionAxisID];\n            titleX = scales[positionAxisID].getPixelForValue(value) - width + offset;\n        } else if (position === 'center') {\n            titleX = (chartArea.left + chartArea.right) / 2 - width + offset;\n        } else {\n            titleX = offsetFromEdge(scale, position, offset);\n        }\n        titleY = _alignStartEnd(align, bottom, top);\n        rotation = position === 'left' ? -HALF_PI : HALF_PI;\n    }\n    return {\n        titleX,\n        titleY,\n        maxWidth,\n        rotation\n    };\n}\nclass Scale extends Element {\n    constructor(cfg){\n        super();\n         this.id = cfg.id;\n         this.type = cfg.type;\n         this.options = undefined;\n         this.ctx = cfg.ctx;\n         this.chart = cfg.chart;\n         this.top = undefined;\n         this.bottom = undefined;\n         this.left = undefined;\n         this.right = undefined;\n         this.width = undefined;\n         this.height = undefined;\n        this._margins = {\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        };\n         this.maxWidth = undefined;\n         this.maxHeight = undefined;\n         this.paddingTop = undefined;\n         this.paddingBottom = undefined;\n         this.paddingLeft = undefined;\n         this.paddingRight = undefined;\n         this.axis = undefined;\n         this.labelRotation = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this._range = undefined;\n         this.ticks = [];\n         this._gridLineItems = null;\n         this._labelItems = null;\n         this._labelSizes = null;\n        this._length = 0;\n        this._maxLength = 0;\n        this._longestTextCache = {};\n         this._startPixel = undefined;\n         this._endPixel = undefined;\n        this._reversePixels = false;\n        this._userMax = undefined;\n        this._userMin = undefined;\n        this._suggestedMax = undefined;\n        this._suggestedMin = undefined;\n        this._ticksLength = 0;\n        this._borderValue = 0;\n        this._cache = {};\n        this._dataLimitsCached = false;\n        this.$context = undefined;\n    }\n init(options) {\n        this.options = options.setContext(this.getContext());\n        this.axis = options.axis;\n        this._userMin = this.parse(options.min);\n        this._userMax = this.parse(options.max);\n        this._suggestedMin = this.parse(options.suggestedMin);\n        this._suggestedMax = this.parse(options.suggestedMax);\n    }\n parse(raw, index) {\n        return raw;\n    }\n getUserBounds() {\n        let { _userMin , _userMax , _suggestedMin , _suggestedMax  } = this;\n        _userMin = finiteOrDefault(_userMin, Number.POSITIVE_INFINITY);\n        _userMax = finiteOrDefault(_userMax, Number.NEGATIVE_INFINITY);\n        _suggestedMin = finiteOrDefault(_suggestedMin, Number.POSITIVE_INFINITY);\n        _suggestedMax = finiteOrDefault(_suggestedMax, Number.NEGATIVE_INFINITY);\n        return {\n            min: finiteOrDefault(_userMin, _suggestedMin),\n            max: finiteOrDefault(_userMax, _suggestedMax),\n            minDefined: isNumberFinite(_userMin),\n            maxDefined: isNumberFinite(_userMax)\n        };\n    }\n getMinMax(canStack) {\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n        let range;\n        if (minDefined && maxDefined) {\n            return {\n                min,\n                max\n            };\n        }\n        const metas = this.getMatchingVisibleMetas();\n        for(let i = 0, ilen = metas.length; i < ilen; ++i){\n            range = metas[i].controller.getMinMax(this, canStack);\n            if (!minDefined) {\n                min = Math.min(min, range.min);\n            }\n            if (!maxDefined) {\n                max = Math.max(max, range.max);\n            }\n        }\n        min = maxDefined && min > max ? max : min;\n        max = minDefined && min > max ? min : max;\n        return {\n            min: finiteOrDefault(min, finiteOrDefault(max, min)),\n            max: finiteOrDefault(max, finiteOrDefault(min, max))\n        };\n    }\n getPadding() {\n        return {\n            left: this.paddingLeft || 0,\n            top: this.paddingTop || 0,\n            right: this.paddingRight || 0,\n            bottom: this.paddingBottom || 0\n        };\n    }\n getTicks() {\n        return this.ticks;\n    }\n getLabels() {\n        const data = this.chart.data;\n        return this.options.labels || (this.isHorizontal() ? data.xLabels : data.yLabels) || data.labels || [];\n    }\n getLabelItems(chartArea = this.chart.chartArea) {\n        const items = this._labelItems || (this._labelItems = this._computeLabelItems(chartArea));\n        return items;\n    }\n    beforeLayout() {\n        this._cache = {};\n        this._dataLimitsCached = false;\n    }\n    beforeUpdate() {\n        callback(this.options.beforeUpdate, [\n            this\n        ]);\n    }\n update(maxWidth, maxHeight, margins) {\n        const { beginAtZero , grace , ticks: tickOpts  } = this.options;\n        const sampleSize = tickOpts.sampleSize;\n        this.beforeUpdate();\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins = Object.assign({\n            left: 0,\n            right: 0,\n            top: 0,\n            bottom: 0\n        }, margins);\n        this.ticks = null;\n        this._labelSizes = null;\n        this._gridLineItems = null;\n        this._labelItems = null;\n        this.beforeSetDimensions();\n        this.setDimensions();\n        this.afterSetDimensions();\n        this._maxLength = this.isHorizontal() ? this.width + margins.left + margins.right : this.height + margins.top + margins.bottom;\n        if (!this._dataLimitsCached) {\n            this.beforeDataLimits();\n            this.determineDataLimits();\n            this.afterDataLimits();\n            this._range = _addGrace(this, grace, beginAtZero);\n            this._dataLimitsCached = true;\n        }\n        this.beforeBuildTicks();\n        this.ticks = this.buildTicks() || [];\n        this.afterBuildTicks();\n        const samplingEnabled = sampleSize < this.ticks.length;\n        this._convertTicksToLabels(samplingEnabled ? sample(this.ticks, sampleSize) : this.ticks);\n        this.configure();\n        this.beforeCalculateLabelRotation();\n        this.calculateLabelRotation();\n        this.afterCalculateLabelRotation();\n        if (tickOpts.display && (tickOpts.autoSkip || tickOpts.source === 'auto')) {\n            this.ticks = autoSkip(this, this.ticks);\n            this._labelSizes = null;\n            this.afterAutoSkip();\n        }\n        if (samplingEnabled) {\n            this._convertTicksToLabels(this.ticks);\n        }\n        this.beforeFit();\n        this.fit();\n        this.afterFit();\n        this.afterUpdate();\n    }\n configure() {\n        let reversePixels = this.options.reverse;\n        let startPixel, endPixel;\n        if (this.isHorizontal()) {\n            startPixel = this.left;\n            endPixel = this.right;\n        } else {\n            startPixel = this.top;\n            endPixel = this.bottom;\n            reversePixels = !reversePixels;\n        }\n        this._startPixel = startPixel;\n        this._endPixel = endPixel;\n        this._reversePixels = reversePixels;\n        this._length = endPixel - startPixel;\n        this._alignToPixels = this.options.alignToPixels;\n    }\n    afterUpdate() {\n        callback(this.options.afterUpdate, [\n            this\n        ]);\n    }\n    beforeSetDimensions() {\n        callback(this.options.beforeSetDimensions, [\n            this\n        ]);\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = 0;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = 0;\n            this.bottom = this.height;\n        }\n        this.paddingLeft = 0;\n        this.paddingTop = 0;\n        this.paddingRight = 0;\n        this.paddingBottom = 0;\n    }\n    afterSetDimensions() {\n        callback(this.options.afterSetDimensions, [\n            this\n        ]);\n    }\n    _callHooks(name) {\n        this.chart.notifyPlugins(name, this.getContext());\n        callback(this.options[name], [\n            this\n        ]);\n    }\n    beforeDataLimits() {\n        this._callHooks('beforeDataLimits');\n    }\n    determineDataLimits() {}\n    afterDataLimits() {\n        this._callHooks('afterDataLimits');\n    }\n    beforeBuildTicks() {\n        this._callHooks('beforeBuildTicks');\n    }\n buildTicks() {\n        return [];\n    }\n    afterBuildTicks() {\n        this._callHooks('afterBuildTicks');\n    }\n    beforeTickToLabelConversion() {\n        callback(this.options.beforeTickToLabelConversion, [\n            this\n        ]);\n    }\n generateTickLabels(ticks) {\n        const tickOpts = this.options.ticks;\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            tick = ticks[i];\n            tick.label = callback(tickOpts.callback, [\n                tick.value,\n                i,\n                ticks\n            ], this);\n        }\n    }\n    afterTickToLabelConversion() {\n        callback(this.options.afterTickToLabelConversion, [\n            this\n        ]);\n    }\n    beforeCalculateLabelRotation() {\n        callback(this.options.beforeCalculateLabelRotation, [\n            this\n        ]);\n    }\n    calculateLabelRotation() {\n        const options = this.options;\n        const tickOpts = options.ticks;\n        const numTicks = getTicksLimit(this.ticks.length, options.ticks.maxTicksLimit);\n        const minRotation = tickOpts.minRotation || 0;\n        const maxRotation = tickOpts.maxRotation;\n        let labelRotation = minRotation;\n        let tickWidth, maxHeight, maxLabelDiagonal;\n        if (!this._isVisible() || !tickOpts.display || minRotation >= maxRotation || numTicks <= 1 || !this.isHorizontal()) {\n            this.labelRotation = minRotation;\n            return;\n        }\n        const labelSizes = this._getLabelSizes();\n        const maxLabelWidth = labelSizes.widest.width;\n        const maxLabelHeight = labelSizes.highest.height;\n        const maxWidth = _limitValue(this.chart.width - maxLabelWidth, 0, this.maxWidth);\n        tickWidth = options.offset ? this.maxWidth / numTicks : maxWidth / (numTicks - 1);\n        if (maxLabelWidth + 6 > tickWidth) {\n            tickWidth = maxWidth / (numTicks - (options.offset ? 0.5 : 1));\n            maxHeight = this.maxHeight - getTickMarkLength(options.grid) - tickOpts.padding - getTitleHeight(options.title, this.chart.options.font);\n            maxLabelDiagonal = Math.sqrt(maxLabelWidth * maxLabelWidth + maxLabelHeight * maxLabelHeight);\n            labelRotation = toDegrees(Math.min(Math.asin(_limitValue((labelSizes.highest.height + 6) / tickWidth, -1, 1)), Math.asin(_limitValue(maxHeight / maxLabelDiagonal, -1, 1)) - Math.asin(_limitValue(maxLabelHeight / maxLabelDiagonal, -1, 1))));\n            labelRotation = Math.max(minRotation, Math.min(maxRotation, labelRotation));\n        }\n        this.labelRotation = labelRotation;\n    }\n    afterCalculateLabelRotation() {\n        callback(this.options.afterCalculateLabelRotation, [\n            this\n        ]);\n    }\n    afterAutoSkip() {}\n    beforeFit() {\n        callback(this.options.beforeFit, [\n            this\n        ]);\n    }\n    fit() {\n        const minSize = {\n            width: 0,\n            height: 0\n        };\n        const { chart , options: { ticks: tickOpts , title: titleOpts , grid: gridOpts  }  } = this;\n        const display = this._isVisible();\n        const isHorizontal = this.isHorizontal();\n        if (display) {\n            const titleHeight = getTitleHeight(titleOpts, chart.options.font);\n            if (isHorizontal) {\n                minSize.width = this.maxWidth;\n                minSize.height = getTickMarkLength(gridOpts) + titleHeight;\n            } else {\n                minSize.height = this.maxHeight;\n                minSize.width = getTickMarkLength(gridOpts) + titleHeight;\n            }\n            if (tickOpts.display && this.ticks.length) {\n                const { first , last , widest , highest  } = this._getLabelSizes();\n                const tickPadding = tickOpts.padding * 2;\n                const angleRadians = toRadians(this.labelRotation);\n                const cos = Math.cos(angleRadians);\n                const sin = Math.sin(angleRadians);\n                if (isHorizontal) {\n                    const labelHeight = tickOpts.mirror ? 0 : sin * widest.width + cos * highest.height;\n                    minSize.height = Math.min(this.maxHeight, minSize.height + labelHeight + tickPadding);\n                } else {\n                    const labelWidth = tickOpts.mirror ? 0 : cos * widest.width + sin * highest.height;\n                    minSize.width = Math.min(this.maxWidth, minSize.width + labelWidth + tickPadding);\n                }\n                this._calculatePadding(first, last, sin, cos);\n            }\n        }\n        this._handleMargins();\n        if (isHorizontal) {\n            this.width = this._length = chart.width - this._margins.left - this._margins.right;\n            this.height = minSize.height;\n        } else {\n            this.width = minSize.width;\n            this.height = this._length = chart.height - this._margins.top - this._margins.bottom;\n        }\n    }\n    _calculatePadding(first, last, sin, cos) {\n        const { ticks: { align , padding  } , position  } = this.options;\n        const isRotated = this.labelRotation !== 0;\n        const labelsBelowTicks = position !== 'top' && this.axis === 'x';\n        if (this.isHorizontal()) {\n            const offsetLeft = this.getPixelForTick(0) - this.left;\n            const offsetRight = this.right - this.getPixelForTick(this.ticks.length - 1);\n            let paddingLeft = 0;\n            let paddingRight = 0;\n            if (isRotated) {\n                if (labelsBelowTicks) {\n                    paddingLeft = cos * first.width;\n                    paddingRight = sin * last.height;\n                } else {\n                    paddingLeft = sin * first.height;\n                    paddingRight = cos * last.width;\n                }\n            } else if (align === 'start') {\n                paddingRight = last.width;\n            } else if (align === 'end') {\n                paddingLeft = first.width;\n            } else if (align !== 'inner') {\n                paddingLeft = first.width / 2;\n                paddingRight = last.width / 2;\n            }\n            this.paddingLeft = Math.max((paddingLeft - offsetLeft + padding) * this.width / (this.width - offsetLeft), 0);\n            this.paddingRight = Math.max((paddingRight - offsetRight + padding) * this.width / (this.width - offsetRight), 0);\n        } else {\n            let paddingTop = last.height / 2;\n            let paddingBottom = first.height / 2;\n            if (align === 'start') {\n                paddingTop = 0;\n                paddingBottom = first.height;\n            } else if (align === 'end') {\n                paddingTop = last.height;\n                paddingBottom = 0;\n            }\n            this.paddingTop = paddingTop + padding;\n            this.paddingBottom = paddingBottom + padding;\n        }\n    }\n _handleMargins() {\n        if (this._margins) {\n            this._margins.left = Math.max(this.paddingLeft, this._margins.left);\n            this._margins.top = Math.max(this.paddingTop, this._margins.top);\n            this._margins.right = Math.max(this.paddingRight, this._margins.right);\n            this._margins.bottom = Math.max(this.paddingBottom, this._margins.bottom);\n        }\n    }\n    afterFit() {\n        callback(this.options.afterFit, [\n            this\n        ]);\n    }\n isHorizontal() {\n        const { axis , position  } = this.options;\n        return position === 'top' || position === 'bottom' || axis === 'x';\n    }\n isFullSize() {\n        return this.options.fullSize;\n    }\n _convertTicksToLabels(ticks) {\n        this.beforeTickToLabelConversion();\n        this.generateTickLabels(ticks);\n        let i, ilen;\n        for(i = 0, ilen = ticks.length; i < ilen; i++){\n            if (isNullOrUndef(ticks[i].label)) {\n                ticks.splice(i, 1);\n                ilen--;\n                i--;\n            }\n        }\n        this.afterTickToLabelConversion();\n    }\n _getLabelSizes() {\n        let labelSizes = this._labelSizes;\n        if (!labelSizes) {\n            const sampleSize = this.options.ticks.sampleSize;\n            let ticks = this.ticks;\n            if (sampleSize < ticks.length) {\n                ticks = sample(ticks, sampleSize);\n            }\n            this._labelSizes = labelSizes = this._computeLabelSizes(ticks, ticks.length, this.options.ticks.maxTicksLimit);\n        }\n        return labelSizes;\n    }\n _computeLabelSizes(ticks, length, maxTicksLimit) {\n        const { ctx , _longestTextCache: caches  } = this;\n        const widths = [];\n        const heights = [];\n        const increment = Math.floor(length / getTicksLimit(length, maxTicksLimit));\n        let widestLabelSize = 0;\n        let highestLabelSize = 0;\n        let i, j, jlen, label, tickFont, fontString, cache, lineHeight, width, height, nestedLabel;\n        for(i = 0; i < length; i += increment){\n            label = ticks[i].label;\n            tickFont = this._resolveTickFontOptions(i);\n            ctx.font = fontString = tickFont.string;\n            cache = caches[fontString] = caches[fontString] || {\n                data: {},\n                gc: []\n            };\n            lineHeight = tickFont.lineHeight;\n            width = height = 0;\n            if (!isNullOrUndef(label) && !isArray(label)) {\n                width = _measureText(ctx, cache.data, cache.gc, width, label);\n                height = lineHeight;\n            } else if (isArray(label)) {\n                for(j = 0, jlen = label.length; j < jlen; ++j){\n                    nestedLabel =  label[j];\n                    if (!isNullOrUndef(nestedLabel) && !isArray(nestedLabel)) {\n                        width = _measureText(ctx, cache.data, cache.gc, width, nestedLabel);\n                        height += lineHeight;\n                    }\n                }\n            }\n            widths.push(width);\n            heights.push(height);\n            widestLabelSize = Math.max(width, widestLabelSize);\n            highestLabelSize = Math.max(height, highestLabelSize);\n        }\n        garbageCollect(caches, length);\n        const widest = widths.indexOf(widestLabelSize);\n        const highest = heights.indexOf(highestLabelSize);\n        const valueAt = (idx)=>({\n                width: widths[idx] || 0,\n                height: heights[idx] || 0\n            });\n        return {\n            first: valueAt(0),\n            last: valueAt(length - 1),\n            widest: valueAt(widest),\n            highest: valueAt(highest),\n            widths,\n            heights\n        };\n    }\n getLabelForValue(value) {\n        return value;\n    }\n getPixelForValue(value, index) {\n        return NaN;\n    }\n getValueForPixel(pixel) {}\n getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n getPixelForDecimal(decimal) {\n        if (this._reversePixels) {\n            decimal = 1 - decimal;\n        }\n        const pixel = this._startPixel + decimal * this._length;\n        return _int16Range(this._alignToPixels ? _alignPixel(this.chart, pixel, 0) : pixel);\n    }\n getDecimalForPixel(pixel) {\n        const decimal = (pixel - this._startPixel) / this._length;\n        return this._reversePixels ? 1 - decimal : decimal;\n    }\n getBasePixel() {\n        return this.getPixelForValue(this.getBaseValue());\n    }\n getBaseValue() {\n        const { min , max  } = this;\n        return min < 0 && max < 0 ? max : min > 0 && max > 0 ? min : 0;\n    }\n getContext(index) {\n        const ticks = this.ticks || [];\n        if (index >= 0 && index < ticks.length) {\n            const tick = ticks[index];\n            return tick.$context || (tick.$context = createTickContext(this.getContext(), index, tick));\n        }\n        return this.$context || (this.$context = createScaleContext(this.chart.getContext(), this));\n    }\n _tickSize() {\n        const optionTicks = this.options.ticks;\n        const rot = toRadians(this.labelRotation);\n        const cos = Math.abs(Math.cos(rot));\n        const sin = Math.abs(Math.sin(rot));\n        const labelSizes = this._getLabelSizes();\n        const padding = optionTicks.autoSkipPadding || 0;\n        const w = labelSizes ? labelSizes.widest.width + padding : 0;\n        const h = labelSizes ? labelSizes.highest.height + padding : 0;\n        return this.isHorizontal() ? h * cos > w * sin ? w / cos : h / sin : h * sin < w * cos ? h / cos : w / sin;\n    }\n _isVisible() {\n        const display = this.options.display;\n        if (display !== 'auto') {\n            return !!display;\n        }\n        return this.getMatchingVisibleMetas().length > 0;\n    }\n _computeGridLineItems(chartArea) {\n        const axis = this.axis;\n        const chart = this.chart;\n        const options = this.options;\n        const { grid , position , border  } = options;\n        const offset = grid.offset;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const ticksLength = ticks.length + (offset ? 1 : 0);\n        const tl = getTickMarkLength(grid);\n        const items = [];\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = borderOpts.display ? borderOpts.width : 0;\n        const axisHalfWidth = axisWidth / 2;\n        const alignBorderValue = function(pixel) {\n            return _alignPixel(chart, pixel, axisWidth);\n        };\n        let borderValue, i, lineValue, alignedLineValue;\n        let tx1, ty1, tx2, ty2, x1, y1, x2, y2;\n        if (position === 'top') {\n            borderValue = alignBorderValue(this.bottom);\n            ty1 = this.bottom - tl;\n            ty2 = borderValue - axisHalfWidth;\n            y1 = alignBorderValue(chartArea.top) + axisHalfWidth;\n            y2 = chartArea.bottom;\n        } else if (position === 'bottom') {\n            borderValue = alignBorderValue(this.top);\n            y1 = chartArea.top;\n            y2 = alignBorderValue(chartArea.bottom) - axisHalfWidth;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = this.top + tl;\n        } else if (position === 'left') {\n            borderValue = alignBorderValue(this.right);\n            tx1 = this.right - tl;\n            tx2 = borderValue - axisHalfWidth;\n            x1 = alignBorderValue(chartArea.left) + axisHalfWidth;\n            x2 = chartArea.right;\n        } else if (position === 'right') {\n            borderValue = alignBorderValue(this.left);\n            x1 = chartArea.left;\n            x2 = alignBorderValue(chartArea.right) - axisHalfWidth;\n            tx1 = borderValue + axisHalfWidth;\n            tx2 = this.left + tl;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.top + chartArea.bottom) / 2 + 0.5);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            y1 = chartArea.top;\n            y2 = chartArea.bottom;\n            ty1 = borderValue + axisHalfWidth;\n            ty2 = ty1 + tl;\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                borderValue = alignBorderValue((chartArea.left + chartArea.right) / 2);\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                borderValue = alignBorderValue(this.chart.scales[positionAxisID].getPixelForValue(value));\n            }\n            tx1 = borderValue - axisHalfWidth;\n            tx2 = tx1 - tl;\n            x1 = chartArea.left;\n            x2 = chartArea.right;\n        }\n        const limit = valueOrDefault(options.ticks.maxTicksLimit, ticksLength);\n        const step = Math.max(1, Math.ceil(ticksLength / limit));\n        for(i = 0; i < ticksLength; i += step){\n            const context = this.getContext(i);\n            const optsAtIndex = grid.setContext(context);\n            const optsAtIndexBorder = border.setContext(context);\n            const lineWidth = optsAtIndex.lineWidth;\n            const lineColor = optsAtIndex.color;\n            const borderDash = optsAtIndexBorder.dash || [];\n            const borderDashOffset = optsAtIndexBorder.dashOffset;\n            const tickWidth = optsAtIndex.tickWidth;\n            const tickColor = optsAtIndex.tickColor;\n            const tickBorderDash = optsAtIndex.tickBorderDash || [];\n            const tickBorderDashOffset = optsAtIndex.tickBorderDashOffset;\n            lineValue = getPixelForGridLine(this, i, offset);\n            if (lineValue === undefined) {\n                continue;\n            }\n            alignedLineValue = _alignPixel(chart, lineValue, lineWidth);\n            if (isHorizontal) {\n                tx1 = tx2 = x1 = x2 = alignedLineValue;\n            } else {\n                ty1 = ty2 = y1 = y2 = alignedLineValue;\n            }\n            items.push({\n                tx1,\n                ty1,\n                tx2,\n                ty2,\n                x1,\n                y1,\n                x2,\n                y2,\n                width: lineWidth,\n                color: lineColor,\n                borderDash,\n                borderDashOffset,\n                tickWidth,\n                tickColor,\n                tickBorderDash,\n                tickBorderDashOffset\n            });\n        }\n        this._ticksLength = ticksLength;\n        this._borderValue = borderValue;\n        return items;\n    }\n _computeLabelItems(chartArea) {\n        const axis = this.axis;\n        const options = this.options;\n        const { position , ticks: optionTicks  } = options;\n        const isHorizontal = this.isHorizontal();\n        const ticks = this.ticks;\n        const { align , crossAlign , padding , mirror  } = optionTicks;\n        const tl = getTickMarkLength(options.grid);\n        const tickAndPadding = tl + padding;\n        const hTickAndPadding = mirror ? -padding : tickAndPadding;\n        const rotation = -toRadians(this.labelRotation);\n        const items = [];\n        let i, ilen, tick, label, x, y, textAlign, pixel, font, lineHeight, lineCount, textOffset;\n        let textBaseline = 'middle';\n        if (position === 'top') {\n            y = this.bottom - hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'bottom') {\n            y = this.top + hTickAndPadding;\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (position === 'left') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (position === 'right') {\n            const ret = this._getYAxisLabelAlignment(tl);\n            textAlign = ret.textAlign;\n            x = ret.x;\n        } else if (axis === 'x') {\n            if (position === 'center') {\n                y = (chartArea.top + chartArea.bottom) / 2 + tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                y = this.chart.scales[positionAxisID].getPixelForValue(value) + tickAndPadding;\n            }\n            textAlign = this._getXAxisLabelAlignment();\n        } else if (axis === 'y') {\n            if (position === 'center') {\n                x = (chartArea.left + chartArea.right) / 2 - tickAndPadding;\n            } else if (isObject(position)) {\n                const positionAxisID = Object.keys(position)[0];\n                const value = position[positionAxisID];\n                x = this.chart.scales[positionAxisID].getPixelForValue(value);\n            }\n            textAlign = this._getYAxisLabelAlignment(tl).textAlign;\n        }\n        if (axis === 'y') {\n            if (align === 'start') {\n                textBaseline = 'top';\n            } else if (align === 'end') {\n                textBaseline = 'bottom';\n            }\n        }\n        const labelSizes = this._getLabelSizes();\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            label = tick.label;\n            const optsAtIndex = optionTicks.setContext(this.getContext(i));\n            pixel = this.getPixelForTick(i) + optionTicks.labelOffset;\n            font = this._resolveTickFontOptions(i);\n            lineHeight = font.lineHeight;\n            lineCount = isArray(label) ? label.length : 1;\n            const halfCount = lineCount / 2;\n            const color = optsAtIndex.color;\n            const strokeColor = optsAtIndex.textStrokeColor;\n            const strokeWidth = optsAtIndex.textStrokeWidth;\n            let tickTextAlign = textAlign;\n            if (isHorizontal) {\n                x = pixel;\n                if (textAlign === 'inner') {\n                    if (i === ilen - 1) {\n                        tickTextAlign = !this.options.reverse ? 'right' : 'left';\n                    } else if (i === 0) {\n                        tickTextAlign = !this.options.reverse ? 'left' : 'right';\n                    } else {\n                        tickTextAlign = 'center';\n                    }\n                }\n                if (position === 'top') {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = -lineCount * lineHeight + lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = -labelSizes.highest.height / 2 - halfCount * lineHeight + lineHeight;\n                    } else {\n                        textOffset = -labelSizes.highest.height + lineHeight / 2;\n                    }\n                } else {\n                    if (crossAlign === 'near' || rotation !== 0) {\n                        textOffset = lineHeight / 2;\n                    } else if (crossAlign === 'center') {\n                        textOffset = labelSizes.highest.height / 2 - halfCount * lineHeight;\n                    } else {\n                        textOffset = labelSizes.highest.height - lineCount * lineHeight;\n                    }\n                }\n                if (mirror) {\n                    textOffset *= -1;\n                }\n                if (rotation !== 0 && !optsAtIndex.showLabelBackdrop) {\n                    x += lineHeight / 2 * Math.sin(rotation);\n                }\n            } else {\n                y = pixel;\n                textOffset = (1 - lineCount) * lineHeight / 2;\n            }\n            let backdrop;\n            if (optsAtIndex.showLabelBackdrop) {\n                const labelPadding = toPadding(optsAtIndex.backdropPadding);\n                const height = labelSizes.heights[i];\n                const width = labelSizes.widths[i];\n                let top = textOffset - labelPadding.top;\n                let left = 0 - labelPadding.left;\n                switch(textBaseline){\n                    case 'middle':\n                        top -= height / 2;\n                        break;\n                    case 'bottom':\n                        top -= height;\n                        break;\n                }\n                switch(textAlign){\n                    case 'center':\n                        left -= width / 2;\n                        break;\n                    case 'right':\n                        left -= width;\n                        break;\n                    case 'inner':\n                        if (i === ilen - 1) {\n                            left -= width;\n                        } else if (i > 0) {\n                            left -= width / 2;\n                        }\n                        break;\n                }\n                backdrop = {\n                    left,\n                    top,\n                    width: width + labelPadding.width,\n                    height: height + labelPadding.height,\n                    color: optsAtIndex.backdropColor\n                };\n            }\n            items.push({\n                label,\n                font,\n                textOffset,\n                options: {\n                    rotation,\n                    color,\n                    strokeColor,\n                    strokeWidth,\n                    textAlign: tickTextAlign,\n                    textBaseline,\n                    translation: [\n                        x,\n                        y\n                    ],\n                    backdrop\n                }\n            });\n        }\n        return items;\n    }\n    _getXAxisLabelAlignment() {\n        const { position , ticks  } = this.options;\n        const rotation = -toRadians(this.labelRotation);\n        if (rotation) {\n            return position === 'top' ? 'left' : 'right';\n        }\n        let align = 'center';\n        if (ticks.align === 'start') {\n            align = 'left';\n        } else if (ticks.align === 'end') {\n            align = 'right';\n        } else if (ticks.align === 'inner') {\n            align = 'inner';\n        }\n        return align;\n    }\n    _getYAxisLabelAlignment(tl) {\n        const { position , ticks: { crossAlign , mirror , padding  }  } = this.options;\n        const labelSizes = this._getLabelSizes();\n        const tickAndPadding = tl + padding;\n        const widest = labelSizes.widest.width;\n        let textAlign;\n        let x;\n        if (position === 'left') {\n            if (mirror) {\n                x = this.right + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x += widest;\n                }\n            } else {\n                x = this.right - tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x = this.left;\n                }\n            }\n        } else if (position === 'right') {\n            if (mirror) {\n                x = this.left + padding;\n                if (crossAlign === 'near') {\n                    textAlign = 'right';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x -= widest / 2;\n                } else {\n                    textAlign = 'left';\n                    x -= widest;\n                }\n            } else {\n                x = this.left + tickAndPadding;\n                if (crossAlign === 'near') {\n                    textAlign = 'left';\n                } else if (crossAlign === 'center') {\n                    textAlign = 'center';\n                    x += widest / 2;\n                } else {\n                    textAlign = 'right';\n                    x = this.right;\n                }\n            }\n        } else {\n            textAlign = 'right';\n        }\n        return {\n            textAlign,\n            x\n        };\n    }\n _computeLabelArea() {\n        if (this.options.ticks.mirror) {\n            return;\n        }\n        const chart = this.chart;\n        const position = this.options.position;\n        if (position === 'left' || position === 'right') {\n            return {\n                top: 0,\n                left: this.left,\n                bottom: chart.height,\n                right: this.right\n            };\n        }\n        if (position === 'top' || position === 'bottom') {\n            return {\n                top: this.top,\n                left: 0,\n                bottom: this.bottom,\n                right: chart.width\n            };\n        }\n    }\n drawBackground() {\n        const { ctx , options: { backgroundColor  } , left , top , width , height  } = this;\n        if (backgroundColor) {\n            ctx.save();\n            ctx.fillStyle = backgroundColor;\n            ctx.fillRect(left, top, width, height);\n            ctx.restore();\n        }\n    }\n    getLineWidthForValue(value) {\n        const grid = this.options.grid;\n        if (!this._isVisible() || !grid.display) {\n            return 0;\n        }\n        const ticks = this.ticks;\n        const index = ticks.findIndex((t)=>t.value === value);\n        if (index >= 0) {\n            const opts = grid.setContext(this.getContext(index));\n            return opts.lineWidth;\n        }\n        return 0;\n    }\n drawGrid(chartArea) {\n        const grid = this.options.grid;\n        const ctx = this.ctx;\n        const items = this._gridLineItems || (this._gridLineItems = this._computeGridLineItems(chartArea));\n        let i, ilen;\n        const drawLine = (p1, p2, style)=>{\n            if (!style.width || !style.color) {\n                return;\n            }\n            ctx.save();\n            ctx.lineWidth = style.width;\n            ctx.strokeStyle = style.color;\n            ctx.setLineDash(style.borderDash || []);\n            ctx.lineDashOffset = style.borderDashOffset;\n            ctx.beginPath();\n            ctx.moveTo(p1.x, p1.y);\n            ctx.lineTo(p2.x, p2.y);\n            ctx.stroke();\n            ctx.restore();\n        };\n        if (grid.display) {\n            for(i = 0, ilen = items.length; i < ilen; ++i){\n                const item = items[i];\n                if (grid.drawOnChartArea) {\n                    drawLine({\n                        x: item.x1,\n                        y: item.y1\n                    }, {\n                        x: item.x2,\n                        y: item.y2\n                    }, item);\n                }\n                if (grid.drawTicks) {\n                    drawLine({\n                        x: item.tx1,\n                        y: item.ty1\n                    }, {\n                        x: item.tx2,\n                        y: item.ty2\n                    }, {\n                        color: item.tickColor,\n                        width: item.tickWidth,\n                        borderDash: item.tickBorderDash,\n                        borderDashOffset: item.tickBorderDashOffset\n                    });\n                }\n            }\n        }\n    }\n drawBorder() {\n        const { chart , ctx , options: { border , grid  }  } = this;\n        const borderOpts = border.setContext(this.getContext());\n        const axisWidth = border.display ? borderOpts.width : 0;\n        if (!axisWidth) {\n            return;\n        }\n        const lastLineWidth = grid.setContext(this.getContext(0)).lineWidth;\n        const borderValue = this._borderValue;\n        let x1, x2, y1, y2;\n        if (this.isHorizontal()) {\n            x1 = _alignPixel(chart, this.left, axisWidth) - axisWidth / 2;\n            x2 = _alignPixel(chart, this.right, lastLineWidth) + lastLineWidth / 2;\n            y1 = y2 = borderValue;\n        } else {\n            y1 = _alignPixel(chart, this.top, axisWidth) - axisWidth / 2;\n            y2 = _alignPixel(chart, this.bottom, lastLineWidth) + lastLineWidth / 2;\n            x1 = x2 = borderValue;\n        }\n        ctx.save();\n        ctx.lineWidth = borderOpts.width;\n        ctx.strokeStyle = borderOpts.color;\n        ctx.beginPath();\n        ctx.moveTo(x1, y1);\n        ctx.lineTo(x2, y2);\n        ctx.stroke();\n        ctx.restore();\n    }\n drawLabels(chartArea) {\n        const optionTicks = this.options.ticks;\n        if (!optionTicks.display) {\n            return;\n        }\n        const ctx = this.ctx;\n        const area = this._computeLabelArea();\n        if (area) {\n            clipArea(ctx, area);\n        }\n        const items = this.getLabelItems(chartArea);\n        for (const item of items){\n            const renderTextOptions = item.options;\n            const tickFont = item.font;\n            const label = item.label;\n            const y = item.textOffset;\n            renderText(ctx, label, 0, y, tickFont, renderTextOptions);\n        }\n        if (area) {\n            unclipArea(ctx);\n        }\n    }\n drawTitle() {\n        const { ctx , options: { position , title , reverse  }  } = this;\n        if (!title.display) {\n            return;\n        }\n        const font = toFont(title.font);\n        const padding = toPadding(title.padding);\n        const align = title.align;\n        let offset = font.lineHeight / 2;\n        if (position === 'bottom' || position === 'center' || isObject(position)) {\n            offset += padding.bottom;\n            if (isArray(title.text)) {\n                offset += font.lineHeight * (title.text.length - 1);\n            }\n        } else {\n            offset += padding.top;\n        }\n        const { titleX , titleY , maxWidth , rotation  } = titleArgs(this, offset, position, align);\n        renderText(ctx, title.text, 0, 0, font, {\n            color: title.color,\n            maxWidth,\n            rotation,\n            textAlign: titleAlign(align, position, reverse),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n    draw(chartArea) {\n        if (!this._isVisible()) {\n            return;\n        }\n        this.drawBackground();\n        this.drawGrid(chartArea);\n        this.drawBorder();\n        this.drawTitle();\n        this.drawLabels(chartArea);\n    }\n _layers() {\n        const opts = this.options;\n        const tz = opts.ticks && opts.ticks.z || 0;\n        const gz = valueOrDefault(opts.grid && opts.grid.z, -1);\n        const bz = valueOrDefault(opts.border && opts.border.z, 0);\n        if (!this._isVisible() || this.draw !== Scale.prototype.draw) {\n            return [\n                {\n                    z: tz,\n                    draw: (chartArea)=>{\n                        this.draw(chartArea);\n                    }\n                }\n            ];\n        }\n        return [\n            {\n                z: gz,\n                draw: (chartArea)=>{\n                    this.drawBackground();\n                    this.drawGrid(chartArea);\n                    this.drawTitle();\n                }\n            },\n            {\n                z: bz,\n                draw: ()=>{\n                    this.drawBorder();\n                }\n            },\n            {\n                z: tz,\n                draw: (chartArea)=>{\n                    this.drawLabels(chartArea);\n                }\n            }\n        ];\n    }\n getMatchingVisibleMetas(type) {\n        const metas = this.chart.getSortedVisibleDatasetMetas();\n        const axisID = this.axis + 'AxisID';\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            const meta = metas[i];\n            if (meta[axisID] === this.id && (!type || meta.type === type)) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n _resolveTickFontOptions(index) {\n        const opts = this.options.ticks.setContext(this.getContext(index));\n        return toFont(opts.font);\n    }\n _maxDigits() {\n        const fontSize = this._resolveTickFontOptions(0).lineHeight;\n        return (this.isHorizontal() ? this.width : this.height) / fontSize;\n    }\n}\n\nclass TypedRegistry {\n    constructor(type, scope, override){\n        this.type = type;\n        this.scope = scope;\n        this.override = override;\n        this.items = Object.create(null);\n    }\n    isForType(type) {\n        return Object.prototype.isPrototypeOf.call(this.type.prototype, type.prototype);\n    }\n register(item) {\n        const proto = Object.getPrototypeOf(item);\n        let parentScope;\n        if (isIChartComponent(proto)) {\n            parentScope = this.register(proto);\n        }\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope + '.' + id;\n        if (!id) {\n            throw new Error('class does not have id: ' + item);\n        }\n        if (id in items) {\n            return scope;\n        }\n        items[id] = item;\n        registerDefaults(item, scope, parentScope);\n        if (this.override) {\n            defaults.override(item.id, item.overrides);\n        }\n        return scope;\n    }\n get(id) {\n        return this.items[id];\n    }\n unregister(item) {\n        const items = this.items;\n        const id = item.id;\n        const scope = this.scope;\n        if (id in items) {\n            delete items[id];\n        }\n        if (scope && id in defaults[scope]) {\n            delete defaults[scope][id];\n            if (this.override) {\n                delete overrides[id];\n            }\n        }\n    }\n}\nfunction registerDefaults(item, scope, parentScope) {\n    const itemDefaults = merge(Object.create(null), [\n        parentScope ? defaults.get(parentScope) : {},\n        defaults.get(scope),\n        item.defaults\n    ]);\n    defaults.set(scope, itemDefaults);\n    if (item.defaultRoutes) {\n        routeDefaults(scope, item.defaultRoutes);\n    }\n    if (item.descriptors) {\n        defaults.describe(scope, item.descriptors);\n    }\n}\nfunction routeDefaults(scope, routes) {\n    Object.keys(routes).forEach((property)=>{\n        const propertyParts = property.split('.');\n        const sourceName = propertyParts.pop();\n        const sourceScope = [\n            scope\n        ].concat(propertyParts).join('.');\n        const parts = routes[property].split('.');\n        const targetName = parts.pop();\n        const targetScope = parts.join('.');\n        defaults.route(sourceScope, sourceName, targetScope, targetName);\n    });\n}\nfunction isIChartComponent(proto) {\n    return 'id' in proto && 'defaults' in proto;\n}\n\nclass Registry {\n    constructor(){\n        this.controllers = new TypedRegistry(DatasetController, 'datasets', true);\n        this.elements = new TypedRegistry(Element, 'elements');\n        this.plugins = new TypedRegistry(Object, 'plugins');\n        this.scales = new TypedRegistry(Scale, 'scales');\n        this._typedRegistries = [\n            this.controllers,\n            this.scales,\n            this.elements\n        ];\n    }\n add(...args) {\n        this._each('register', args);\n    }\n    remove(...args) {\n        this._each('unregister', args);\n    }\n addControllers(...args) {\n        this._each('register', args, this.controllers);\n    }\n addElements(...args) {\n        this._each('register', args, this.elements);\n    }\n addPlugins(...args) {\n        this._each('register', args, this.plugins);\n    }\n addScales(...args) {\n        this._each('register', args, this.scales);\n    }\n getController(id) {\n        return this._get(id, this.controllers, 'controller');\n    }\n getElement(id) {\n        return this._get(id, this.elements, 'element');\n    }\n getPlugin(id) {\n        return this._get(id, this.plugins, 'plugin');\n    }\n getScale(id) {\n        return this._get(id, this.scales, 'scale');\n    }\n removeControllers(...args) {\n        this._each('unregister', args, this.controllers);\n    }\n removeElements(...args) {\n        this._each('unregister', args, this.elements);\n    }\n removePlugins(...args) {\n        this._each('unregister', args, this.plugins);\n    }\n removeScales(...args) {\n        this._each('unregister', args, this.scales);\n    }\n _each(method, args, typedRegistry) {\n        [\n            ...args\n        ].forEach((arg)=>{\n            const reg = typedRegistry || this._getRegistryForType(arg);\n            if (typedRegistry || reg.isForType(arg) || reg === this.plugins && arg.id) {\n                this._exec(method, reg, arg);\n            } else {\n                each(arg, (item)=>{\n                    const itemReg = typedRegistry || this._getRegistryForType(item);\n                    this._exec(method, itemReg, item);\n                });\n            }\n        });\n    }\n _exec(method, registry, component) {\n        const camelMethod = _capitalize(method);\n        callback(component['before' + camelMethod], [], component);\n        registry[method](component);\n        callback(component['after' + camelMethod], [], component);\n    }\n _getRegistryForType(type) {\n        for(let i = 0; i < this._typedRegistries.length; i++){\n            const reg = this._typedRegistries[i];\n            if (reg.isForType(type)) {\n                return reg;\n            }\n        }\n        return this.plugins;\n    }\n _get(id, typedRegistry, type) {\n        const item = typedRegistry.get(id);\n        if (item === undefined) {\n            throw new Error('\"' + id + '\" is not a registered ' + type + '.');\n        }\n        return item;\n    }\n}\nvar registry = /* #__PURE__ */ new Registry();\n\nclass PluginService {\n    constructor(){\n        this._init = [];\n    }\n notify(chart, hook, args, filter) {\n        if (hook === 'beforeInit') {\n            this._init = this._createDescriptors(chart, true);\n            this._notify(this._init, chart, 'install');\n        }\n        const descriptors = filter ? this._descriptors(chart).filter(filter) : this._descriptors(chart);\n        const result = this._notify(descriptors, chart, hook, args);\n        if (hook === 'afterDestroy') {\n            this._notify(descriptors, chart, 'stop');\n            this._notify(this._init, chart, 'uninstall');\n        }\n        return result;\n    }\n _notify(descriptors, chart, hook, args) {\n        args = args || {};\n        for (const descriptor of descriptors){\n            const plugin = descriptor.plugin;\n            const method = plugin[hook];\n            const params = [\n                chart,\n                args,\n                descriptor.options\n            ];\n            if (callback(method, params, plugin) === false && args.cancelable) {\n                return false;\n            }\n        }\n        return true;\n    }\n    invalidate() {\n        if (!isNullOrUndef(this._cache)) {\n            this._oldCache = this._cache;\n            this._cache = undefined;\n        }\n    }\n _descriptors(chart) {\n        if (this._cache) {\n            return this._cache;\n        }\n        const descriptors = this._cache = this._createDescriptors(chart);\n        this._notifyStateChanges(chart);\n        return descriptors;\n    }\n    _createDescriptors(chart, all) {\n        const config = chart && chart.config;\n        const options = valueOrDefault(config.options && config.options.plugins, {});\n        const plugins = allPlugins(config);\n        return options === false && !all ? [] : createDescriptors(chart, plugins, options, all);\n    }\n _notifyStateChanges(chart) {\n        const previousDescriptors = this._oldCache || [];\n        const descriptors = this._cache;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.plugin.id === y.plugin.id));\n        this._notify(diff(previousDescriptors, descriptors), chart, 'stop');\n        this._notify(diff(descriptors, previousDescriptors), chart, 'start');\n    }\n}\n function allPlugins(config) {\n    const localIds = {};\n    const plugins = [];\n    const keys = Object.keys(registry.plugins.items);\n    for(let i = 0; i < keys.length; i++){\n        plugins.push(registry.getPlugin(keys[i]));\n    }\n    const local = config.plugins || [];\n    for(let i = 0; i < local.length; i++){\n        const plugin = local[i];\n        if (plugins.indexOf(plugin) === -1) {\n            plugins.push(plugin);\n            localIds[plugin.id] = true;\n        }\n    }\n    return {\n        plugins,\n        localIds\n    };\n}\nfunction getOpts(options, all) {\n    if (!all && options === false) {\n        return null;\n    }\n    if (options === true) {\n        return {};\n    }\n    return options;\n}\nfunction createDescriptors(chart, { plugins , localIds  }, options, all) {\n    const result = [];\n    const context = chart.getContext();\n    for (const plugin of plugins){\n        const id = plugin.id;\n        const opts = getOpts(options[id], all);\n        if (opts === null) {\n            continue;\n        }\n        result.push({\n            plugin,\n            options: pluginOpts(chart.config, {\n                plugin,\n                local: localIds[id]\n            }, opts, context)\n        });\n    }\n    return result;\n}\nfunction pluginOpts(config, { plugin , local  }, opts, context) {\n    const keys = config.pluginScopeKeys(plugin);\n    const scopes = config.getOptionScopes(opts, keys);\n    if (local && plugin.defaults) {\n        scopes.push(plugin.defaults);\n    }\n    return config.createResolver(scopes, context, [\n        ''\n    ], {\n        scriptable: false,\n        indexable: false,\n        allKeys: true\n    });\n}\n\nfunction getIndexAxis(type, options) {\n    const datasetDefaults = defaults.datasets[type] || {};\n    const datasetOptions = (options.datasets || {})[type] || {};\n    return datasetOptions.indexAxis || options.indexAxis || datasetDefaults.indexAxis || 'x';\n}\nfunction getAxisFromDefaultScaleID(id, indexAxis) {\n    let axis = id;\n    if (id === '_index_') {\n        axis = indexAxis;\n    } else if (id === '_value_') {\n        axis = indexAxis === 'x' ? 'y' : 'x';\n    }\n    return axis;\n}\nfunction getDefaultScaleIDFromAxis(axis, indexAxis) {\n    return axis === indexAxis ? '_index_' : '_value_';\n}\nfunction idMatchesAxis(id) {\n    if (id === 'x' || id === 'y' || id === 'r') {\n        return id;\n    }\n}\nfunction axisFromPosition(position) {\n    if (position === 'top' || position === 'bottom') {\n        return 'x';\n    }\n    if (position === 'left' || position === 'right') {\n        return 'y';\n    }\n}\nfunction determineAxis(id, ...scaleOptions) {\n    if (idMatchesAxis(id)) {\n        return id;\n    }\n    for (const opts of scaleOptions){\n        const axis = opts.axis || axisFromPosition(opts.position) || id.length > 1 && idMatchesAxis(id[0].toLowerCase());\n        if (axis) {\n            return axis;\n        }\n    }\n    throw new Error(`Cannot determine type of '${id}' axis. Please provide 'axis' or 'position' option.`);\n}\nfunction getAxisFromDataset(id, axis, dataset) {\n    if (dataset[axis + 'AxisID'] === id) {\n        return {\n            axis\n        };\n    }\n}\nfunction retrieveAxisFromDatasets(id, config) {\n    if (config.data && config.data.datasets) {\n        const boundDs = config.data.datasets.filter((d)=>d.xAxisID === id || d.yAxisID === id);\n        if (boundDs.length) {\n            return getAxisFromDataset(id, 'x', boundDs[0]) || getAxisFromDataset(id, 'y', boundDs[0]);\n        }\n    }\n    return {};\n}\nfunction mergeScaleConfig(config, options) {\n    const chartDefaults = overrides[config.type] || {\n        scales: {}\n    };\n    const configScales = options.scales || {};\n    const chartIndexAxis = getIndexAxis(config.type, options);\n    const scales = Object.create(null);\n    Object.keys(configScales).forEach((id)=>{\n        const scaleConf = configScales[id];\n        if (!isObject(scaleConf)) {\n            return console.error(`Invalid scale configuration for scale: ${id}`);\n        }\n        if (scaleConf._proxy) {\n            return console.warn(`Ignoring resolver passed as options for scale: ${id}`);\n        }\n        const axis = determineAxis(id, scaleConf, retrieveAxisFromDatasets(id, config), defaults.scales[scaleConf.type]);\n        const defaultId = getDefaultScaleIDFromAxis(axis, chartIndexAxis);\n        const defaultScaleOptions = chartDefaults.scales || {};\n        scales[id] = mergeIf(Object.create(null), [\n            {\n                axis\n            },\n            scaleConf,\n            defaultScaleOptions[axis],\n            defaultScaleOptions[defaultId]\n        ]);\n    });\n    config.data.datasets.forEach((dataset)=>{\n        const type = dataset.type || config.type;\n        const indexAxis = dataset.indexAxis || getIndexAxis(type, options);\n        const datasetDefaults = overrides[type] || {};\n        const defaultScaleOptions = datasetDefaults.scales || {};\n        Object.keys(defaultScaleOptions).forEach((defaultID)=>{\n            const axis = getAxisFromDefaultScaleID(defaultID, indexAxis);\n            const id = dataset[axis + 'AxisID'] || axis;\n            scales[id] = scales[id] || Object.create(null);\n            mergeIf(scales[id], [\n                {\n                    axis\n                },\n                configScales[id],\n                defaultScaleOptions[defaultID]\n            ]);\n        });\n    });\n    Object.keys(scales).forEach((key)=>{\n        const scale = scales[key];\n        mergeIf(scale, [\n            defaults.scales[scale.type],\n            defaults.scale\n        ]);\n    });\n    return scales;\n}\nfunction initOptions(config) {\n    const options = config.options || (config.options = {});\n    options.plugins = valueOrDefault(options.plugins, {});\n    options.scales = mergeScaleConfig(config, options);\n}\nfunction initData(data) {\n    data = data || {};\n    data.datasets = data.datasets || [];\n    data.labels = data.labels || [];\n    return data;\n}\nfunction initConfig(config) {\n    config = config || {};\n    config.data = initData(config.data);\n    initOptions(config);\n    return config;\n}\nconst keyCache = new Map();\nconst keysCached = new Set();\nfunction cachedKeys(cacheKey, generate) {\n    let keys = keyCache.get(cacheKey);\n    if (!keys) {\n        keys = generate();\n        keyCache.set(cacheKey, keys);\n        keysCached.add(keys);\n    }\n    return keys;\n}\nconst addIfFound = (set, obj, key)=>{\n    const opts = resolveObjectKey(obj, key);\n    if (opts !== undefined) {\n        set.add(opts);\n    }\n};\nclass Config {\n    constructor(config){\n        this._config = initConfig(config);\n        this._scopeCache = new Map();\n        this._resolverCache = new Map();\n    }\n    get platform() {\n        return this._config.platform;\n    }\n    get type() {\n        return this._config.type;\n    }\n    set type(type) {\n        this._config.type = type;\n    }\n    get data() {\n        return this._config.data;\n    }\n    set data(data) {\n        this._config.data = initData(data);\n    }\n    get options() {\n        return this._config.options;\n    }\n    set options(options) {\n        this._config.options = options;\n    }\n    get plugins() {\n        return this._config.plugins;\n    }\n    update() {\n        const config = this._config;\n        this.clearCache();\n        initOptions(config);\n    }\n    clearCache() {\n        this._scopeCache.clear();\n        this._resolverCache.clear();\n    }\n datasetScopeKeys(datasetType) {\n        return cachedKeys(datasetType, ()=>[\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetAnimationScopeKeys(datasetType, transition) {\n        return cachedKeys(`${datasetType}.transition.${transition}`, ()=>[\n                [\n                    `datasets.${datasetType}.transitions.${transition}`,\n                    `transitions.${transition}`\n                ],\n                [\n                    `datasets.${datasetType}`,\n                    ''\n                ]\n            ]);\n    }\n datasetElementScopeKeys(datasetType, elementType) {\n        return cachedKeys(`${datasetType}-${elementType}`, ()=>[\n                [\n                    `datasets.${datasetType}.elements.${elementType}`,\n                    `datasets.${datasetType}`,\n                    `elements.${elementType}`,\n                    ''\n                ]\n            ]);\n    }\n pluginScopeKeys(plugin) {\n        const id = plugin.id;\n        const type = this.type;\n        return cachedKeys(`${type}-plugin-${id}`, ()=>[\n                [\n                    `plugins.${id}`,\n                    ...plugin.additionalOptionScopes || []\n                ]\n            ]);\n    }\n _cachedScopes(mainScope, resetCache) {\n        const _scopeCache = this._scopeCache;\n        let cache = _scopeCache.get(mainScope);\n        if (!cache || resetCache) {\n            cache = new Map();\n            _scopeCache.set(mainScope, cache);\n        }\n        return cache;\n    }\n getOptionScopes(mainScope, keyLists, resetCache) {\n        const { options , type  } = this;\n        const cache = this._cachedScopes(mainScope, resetCache);\n        const cached = cache.get(keyLists);\n        if (cached) {\n            return cached;\n        }\n        const scopes = new Set();\n        keyLists.forEach((keys)=>{\n            if (mainScope) {\n                scopes.add(mainScope);\n                keys.forEach((key)=>addIfFound(scopes, mainScope, key));\n            }\n            keys.forEach((key)=>addIfFound(scopes, options, key));\n            keys.forEach((key)=>addIfFound(scopes, overrides[type] || {}, key));\n            keys.forEach((key)=>addIfFound(scopes, defaults, key));\n            keys.forEach((key)=>addIfFound(scopes, descriptors, key));\n        });\n        const array = Array.from(scopes);\n        if (array.length === 0) {\n            array.push(Object.create(null));\n        }\n        if (keysCached.has(keyLists)) {\n            cache.set(keyLists, array);\n        }\n        return array;\n    }\n chartOptionScopes() {\n        const { options , type  } = this;\n        return [\n            options,\n            overrides[type] || {},\n            defaults.datasets[type] || {},\n            {\n                type\n            },\n            defaults,\n            descriptors\n        ];\n    }\n resolveNamedOptions(scopes, names, context, prefixes = [\n        ''\n    ]) {\n        const result = {\n            $shared: true\n        };\n        const { resolver , subPrefixes  } = getResolver(this._resolverCache, scopes, prefixes);\n        let options = resolver;\n        if (needContext(resolver, names)) {\n            result.$shared = false;\n            context = isFunction(context) ? context() : context;\n            const subResolver = this.createResolver(scopes, context, subPrefixes);\n            options = _attachContext(resolver, context, subResolver);\n        }\n        for (const prop of names){\n            result[prop] = options[prop];\n        }\n        return result;\n    }\n createResolver(scopes, context, prefixes = [\n        ''\n    ], descriptorDefaults) {\n        const { resolver  } = getResolver(this._resolverCache, scopes, prefixes);\n        return isObject(context) ? _attachContext(resolver, context, undefined, descriptorDefaults) : resolver;\n    }\n}\nfunction getResolver(resolverCache, scopes, prefixes) {\n    let cache = resolverCache.get(scopes);\n    if (!cache) {\n        cache = new Map();\n        resolverCache.set(scopes, cache);\n    }\n    const cacheKey = prefixes.join();\n    let cached = cache.get(cacheKey);\n    if (!cached) {\n        const resolver = _createResolver(scopes, prefixes);\n        cached = {\n            resolver,\n            subPrefixes: prefixes.filter((p)=>!p.toLowerCase().includes('hover'))\n        };\n        cache.set(cacheKey, cached);\n    }\n    return cached;\n}\nconst hasFunction = (value)=>isObject(value) && Object.getOwnPropertyNames(value).some((key)=>isFunction(value[key]));\nfunction needContext(proxy, names) {\n    const { isScriptable , isIndexable  } = _descriptors(proxy);\n    for (const prop of names){\n        const scriptable = isScriptable(prop);\n        const indexable = isIndexable(prop);\n        const value = (indexable || scriptable) && proxy[prop];\n        if (scriptable && (isFunction(value) || hasFunction(value)) || indexable && isArray(value)) {\n            return true;\n        }\n    }\n    return false;\n}\n\nvar version = \"4.4.9\";\n\nconst KNOWN_POSITIONS = [\n    'top',\n    'bottom',\n    'left',\n    'right',\n    'chartArea'\n];\nfunction positionIsHorizontal(position, axis) {\n    return position === 'top' || position === 'bottom' || KNOWN_POSITIONS.indexOf(position) === -1 && axis === 'x';\n}\nfunction compare2Level(l1, l2) {\n    return function(a, b) {\n        return a[l1] === b[l1] ? a[l2] - b[l2] : a[l1] - b[l1];\n    };\n}\nfunction onAnimationsComplete(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    chart.notifyPlugins('afterRender');\n    callback(animationOptions && animationOptions.onComplete, [\n        context\n    ], chart);\n}\nfunction onAnimationProgress(context) {\n    const chart = context.chart;\n    const animationOptions = chart.options.animation;\n    callback(animationOptions && animationOptions.onProgress, [\n        context\n    ], chart);\n}\n function getCanvas(item) {\n    if (_isDomSupported() && typeof item === 'string') {\n        item = document.getElementById(item);\n    } else if (item && item.length) {\n        item = item[0];\n    }\n    if (item && item.canvas) {\n        item = item.canvas;\n    }\n    return item;\n}\nconst instances = {};\nconst getChart = (key)=>{\n    const canvas = getCanvas(key);\n    return Object.values(instances).filter((c)=>c.canvas === canvas).pop();\n};\nfunction moveNumericKeys(obj, start, move) {\n    const keys = Object.keys(obj);\n    for (const key of keys){\n        const intKey = +key;\n        if (intKey >= start) {\n            const value = obj[key];\n            delete obj[key];\n            if (move > 0 || intKey > start) {\n                obj[intKey + move] = value;\n            }\n        }\n    }\n}\n function determineLastEvent(e, lastEvent, inChartArea, isClick) {\n    if (!inChartArea || e.type === 'mouseout') {\n        return null;\n    }\n    if (isClick) {\n        return lastEvent;\n    }\n    return e;\n}\nclass Chart {\n    static defaults = defaults;\n    static instances = instances;\n    static overrides = overrides;\n    static registry = registry;\n    static version = version;\n    static getChart = getChart;\n    static register(...items) {\n        registry.add(...items);\n        invalidatePlugins();\n    }\n    static unregister(...items) {\n        registry.remove(...items);\n        invalidatePlugins();\n    }\n    constructor(item, userConfig){\n        const config = this.config = new Config(userConfig);\n        const initialCanvas = getCanvas(item);\n        const existingChart = getChart(initialCanvas);\n        if (existingChart) {\n            throw new Error('Canvas is already in use. Chart with ID \\'' + existingChart.id + '\\'' + ' must be destroyed before the canvas with ID \\'' + existingChart.canvas.id + '\\' can be reused.');\n        }\n        const options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        this.platform = new (config.platform || _detectPlatform(initialCanvas))();\n        this.platform.updateConfig(config);\n        const context = this.platform.acquireContext(initialCanvas, options.aspectRatio);\n        const canvas = context && context.canvas;\n        const height = canvas && canvas.height;\n        const width = canvas && canvas.width;\n        this.id = uid();\n        this.ctx = context;\n        this.canvas = canvas;\n        this.width = width;\n        this.height = height;\n        this._options = options;\n        this._aspectRatio = this.aspectRatio;\n        this._layers = [];\n        this._metasets = [];\n        this._stacks = undefined;\n        this.boxes = [];\n        this.currentDevicePixelRatio = undefined;\n        this.chartArea = undefined;\n        this._active = [];\n        this._lastEvent = undefined;\n        this._listeners = {};\n         this._responsiveListeners = undefined;\n        this._sortedMetasets = [];\n        this.scales = {};\n        this._plugins = new PluginService();\n        this.$proxies = {};\n        this._hiddenIndices = {};\n        this.attached = false;\n        this._animationsDisabled = undefined;\n        this.$context = undefined;\n        this._doResize = debounce((mode)=>this.update(mode), options.resizeDelay || 0);\n        this._dataChanges = [];\n        instances[this.id] = this;\n        if (!context || !canvas) {\n            console.error(\"Failed to create chart: can't acquire context from the given item\");\n            return;\n        }\n        animator.listen(this, 'complete', onAnimationsComplete);\n        animator.listen(this, 'progress', onAnimationProgress);\n        this._initialize();\n        if (this.attached) {\n            this.update();\n        }\n    }\n    get aspectRatio() {\n        const { options: { aspectRatio , maintainAspectRatio  } , width , height , _aspectRatio  } = this;\n        if (!isNullOrUndef(aspectRatio)) {\n            return aspectRatio;\n        }\n        if (maintainAspectRatio && _aspectRatio) {\n            return _aspectRatio;\n        }\n        return height ? width / height : null;\n    }\n    get data() {\n        return this.config.data;\n    }\n    set data(data) {\n        this.config.data = data;\n    }\n    get options() {\n        return this._options;\n    }\n    set options(options) {\n        this.config.options = options;\n    }\n    get registry() {\n        return registry;\n    }\n _initialize() {\n        this.notifyPlugins('beforeInit');\n        if (this.options.responsive) {\n            this.resize();\n        } else {\n            retinaScale(this, this.options.devicePixelRatio);\n        }\n        this.bindEvents();\n        this.notifyPlugins('afterInit');\n        return this;\n    }\n    clear() {\n        clearCanvas(this.canvas, this.ctx);\n        return this;\n    }\n    stop() {\n        animator.stop(this);\n        return this;\n    }\n resize(width, height) {\n        if (!animator.running(this)) {\n            this._resize(width, height);\n        } else {\n            this._resizeBeforeDraw = {\n                width,\n                height\n            };\n        }\n    }\n    _resize(width, height) {\n        const options = this.options;\n        const canvas = this.canvas;\n        const aspectRatio = options.maintainAspectRatio && this.aspectRatio;\n        const newSize = this.platform.getMaximumSize(canvas, width, height, aspectRatio);\n        const newRatio = options.devicePixelRatio || this.platform.getDevicePixelRatio();\n        const mode = this.width ? 'resize' : 'attach';\n        this.width = newSize.width;\n        this.height = newSize.height;\n        this._aspectRatio = this.aspectRatio;\n        if (!retinaScale(this, newRatio, true)) {\n            return;\n        }\n        this.notifyPlugins('resize', {\n            size: newSize\n        });\n        callback(options.onResize, [\n            this,\n            newSize\n        ], this);\n        if (this.attached) {\n            if (this._doResize(mode)) {\n                this.render();\n            }\n        }\n    }\n    ensureScalesHaveIDs() {\n        const options = this.options;\n        const scalesOptions = options.scales || {};\n        each(scalesOptions, (axisOptions, axisID)=>{\n            axisOptions.id = axisID;\n        });\n    }\n buildOrUpdateScales() {\n        const options = this.options;\n        const scaleOpts = options.scales;\n        const scales = this.scales;\n        const updated = Object.keys(scales).reduce((obj, id)=>{\n            obj[id] = false;\n            return obj;\n        }, {});\n        let items = [];\n        if (scaleOpts) {\n            items = items.concat(Object.keys(scaleOpts).map((id)=>{\n                const scaleOptions = scaleOpts[id];\n                const axis = determineAxis(id, scaleOptions);\n                const isRadial = axis === 'r';\n                const isHorizontal = axis === 'x';\n                return {\n                    options: scaleOptions,\n                    dposition: isRadial ? 'chartArea' : isHorizontal ? 'bottom' : 'left',\n                    dtype: isRadial ? 'radialLinear' : isHorizontal ? 'category' : 'linear'\n                };\n            }));\n        }\n        each(items, (item)=>{\n            const scaleOptions = item.options;\n            const id = scaleOptions.id;\n            const axis = determineAxis(id, scaleOptions);\n            const scaleType = valueOrDefault(scaleOptions.type, item.dtype);\n            if (scaleOptions.position === undefined || positionIsHorizontal(scaleOptions.position, axis) !== positionIsHorizontal(item.dposition)) {\n                scaleOptions.position = item.dposition;\n            }\n            updated[id] = true;\n            let scale = null;\n            if (id in scales && scales[id].type === scaleType) {\n                scale = scales[id];\n            } else {\n                const scaleClass = registry.getScale(scaleType);\n                scale = new scaleClass({\n                    id,\n                    type: scaleType,\n                    ctx: this.ctx,\n                    chart: this\n                });\n                scales[scale.id] = scale;\n            }\n            scale.init(scaleOptions, options);\n        });\n        each(updated, (hasUpdated, id)=>{\n            if (!hasUpdated) {\n                delete scales[id];\n            }\n        });\n        each(scales, (scale)=>{\n            layouts.configure(this, scale, scale.options);\n            layouts.addBox(this, scale);\n        });\n    }\n _updateMetasets() {\n        const metasets = this._metasets;\n        const numData = this.data.datasets.length;\n        const numMeta = metasets.length;\n        metasets.sort((a, b)=>a.index - b.index);\n        if (numMeta > numData) {\n            for(let i = numData; i < numMeta; ++i){\n                this._destroyDatasetMeta(i);\n            }\n            metasets.splice(numData, numMeta - numData);\n        }\n        this._sortedMetasets = metasets.slice(0).sort(compare2Level('order', 'index'));\n    }\n _removeUnreferencedMetasets() {\n        const { _metasets: metasets , data: { datasets  }  } = this;\n        if (metasets.length > datasets.length) {\n            delete this._stacks;\n        }\n        metasets.forEach((meta, index)=>{\n            if (datasets.filter((x)=>x === meta._dataset).length === 0) {\n                this._destroyDatasetMeta(index);\n            }\n        });\n    }\n    buildOrUpdateControllers() {\n        const newControllers = [];\n        const datasets = this.data.datasets;\n        let i, ilen;\n        this._removeUnreferencedMetasets();\n        for(i = 0, ilen = datasets.length; i < ilen; i++){\n            const dataset = datasets[i];\n            let meta = this.getDatasetMeta(i);\n            const type = dataset.type || this.config.type;\n            if (meta.type && meta.type !== type) {\n                this._destroyDatasetMeta(i);\n                meta = this.getDatasetMeta(i);\n            }\n            meta.type = type;\n            meta.indexAxis = dataset.indexAxis || getIndexAxis(type, this.options);\n            meta.order = dataset.order || 0;\n            meta.index = i;\n            meta.label = '' + dataset.label;\n            meta.visible = this.isDatasetVisible(i);\n            if (meta.controller) {\n                meta.controller.updateIndex(i);\n                meta.controller.linkScales();\n            } else {\n                const ControllerClass = registry.getController(type);\n                const { datasetElementType , dataElementType  } = defaults.datasets[type];\n                Object.assign(ControllerClass, {\n                    dataElementType: registry.getElement(dataElementType),\n                    datasetElementType: datasetElementType && registry.getElement(datasetElementType)\n                });\n                meta.controller = new ControllerClass(this, i);\n                newControllers.push(meta.controller);\n            }\n        }\n        this._updateMetasets();\n        return newControllers;\n    }\n _resetElements() {\n        each(this.data.datasets, (dataset, datasetIndex)=>{\n            this.getDatasetMeta(datasetIndex).controller.reset();\n        }, this);\n    }\n reset() {\n        this._resetElements();\n        this.notifyPlugins('reset');\n    }\n    update(mode) {\n        const config = this.config;\n        config.update();\n        const options = this._options = config.createResolver(config.chartOptionScopes(), this.getContext());\n        const animsDisabled = this._animationsDisabled = !options.animation;\n        this._updateScales();\n        this._checkEventBindings();\n        this._updateHiddenIndices();\n        this._plugins.invalidate();\n        if (this.notifyPlugins('beforeUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const newControllers = this.buildOrUpdateControllers();\n        this.notifyPlugins('beforeElementsUpdate');\n        let minPadding = 0;\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; i++){\n            const { controller  } = this.getDatasetMeta(i);\n            const reset = !animsDisabled && newControllers.indexOf(controller) === -1;\n            controller.buildOrUpdateElements(reset);\n            minPadding = Math.max(+controller.getMaxOverflow(), minPadding);\n        }\n        minPadding = this._minPadding = options.layout.autoPadding ? minPadding : 0;\n        this._updateLayout(minPadding);\n        if (!animsDisabled) {\n            each(newControllers, (controller)=>{\n                controller.reset();\n            });\n        }\n        this._updateDatasets(mode);\n        this.notifyPlugins('afterUpdate', {\n            mode\n        });\n        this._layers.sort(compare2Level('z', '_idx'));\n        const { _active , _lastEvent  } = this;\n        if (_lastEvent) {\n            this._eventHandler(_lastEvent, true);\n        } else if (_active.length) {\n            this._updateHoverStyles(_active, _active, true);\n        }\n        this.render();\n    }\n _updateScales() {\n        each(this.scales, (scale)=>{\n            layouts.removeBox(this, scale);\n        });\n        this.ensureScalesHaveIDs();\n        this.buildOrUpdateScales();\n    }\n _checkEventBindings() {\n        const options = this.options;\n        const existingEvents = new Set(Object.keys(this._listeners));\n        const newEvents = new Set(options.events);\n        if (!setsEqual(existingEvents, newEvents) || !!this._responsiveListeners !== options.responsive) {\n            this.unbindEvents();\n            this.bindEvents();\n        }\n    }\n _updateHiddenIndices() {\n        const { _hiddenIndices  } = this;\n        const changes = this._getUniformDataChanges() || [];\n        for (const { method , start , count  } of changes){\n            const move = method === '_removeElements' ? -count : count;\n            moveNumericKeys(_hiddenIndices, start, move);\n        }\n    }\n _getUniformDataChanges() {\n        const _dataChanges = this._dataChanges;\n        if (!_dataChanges || !_dataChanges.length) {\n            return;\n        }\n        this._dataChanges = [];\n        const datasetCount = this.data.datasets.length;\n        const makeSet = (idx)=>new Set(_dataChanges.filter((c)=>c[0] === idx).map((c, i)=>i + ',' + c.splice(1).join(',')));\n        const changeSet = makeSet(0);\n        for(let i = 1; i < datasetCount; i++){\n            if (!setsEqual(changeSet, makeSet(i))) {\n                return;\n            }\n        }\n        return Array.from(changeSet).map((c)=>c.split(',')).map((a)=>({\n                method: a[1],\n                start: +a[2],\n                count: +a[3]\n            }));\n    }\n _updateLayout(minPadding) {\n        if (this.notifyPlugins('beforeLayout', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        layouts.update(this, this.width, this.height, minPadding);\n        const area = this.chartArea;\n        const noArea = area.width <= 0 || area.height <= 0;\n        this._layers = [];\n        each(this.boxes, (box)=>{\n            if (noArea && box.position === 'chartArea') {\n                return;\n            }\n            if (box.configure) {\n                box.configure();\n            }\n            this._layers.push(...box._layers());\n        }, this);\n        this._layers.forEach((item, index)=>{\n            item._idx = index;\n        });\n        this.notifyPlugins('afterLayout');\n    }\n _updateDatasets(mode) {\n        if (this.notifyPlugins('beforeDatasetsUpdate', {\n            mode,\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this.getDatasetMeta(i).controller.configure();\n        }\n        for(let i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._updateDataset(i, isFunction(mode) ? mode({\n                datasetIndex: i\n            }) : mode);\n        }\n        this.notifyPlugins('afterDatasetsUpdate', {\n            mode\n        });\n    }\n _updateDataset(index, mode) {\n        const meta = this.getDatasetMeta(index);\n        const args = {\n            meta,\n            index,\n            mode,\n            cancelable: true\n        };\n        if (this.notifyPlugins('beforeDatasetUpdate', args) === false) {\n            return;\n        }\n        meta.controller._update(mode);\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetUpdate', args);\n    }\n    render() {\n        if (this.notifyPlugins('beforeRender', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        if (animator.has(this)) {\n            if (this.attached && !animator.running(this)) {\n                animator.start(this);\n            }\n        } else {\n            this.draw();\n            onAnimationsComplete({\n                chart: this\n            });\n        }\n    }\n    draw() {\n        let i;\n        if (this._resizeBeforeDraw) {\n            const { width , height  } = this._resizeBeforeDraw;\n            this._resizeBeforeDraw = null;\n            this._resize(width, height);\n        }\n        this.clear();\n        if (this.width <= 0 || this.height <= 0) {\n            return;\n        }\n        if (this.notifyPlugins('beforeDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const layers = this._layers;\n        for(i = 0; i < layers.length && layers[i].z <= 0; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this._drawDatasets();\n        for(; i < layers.length; ++i){\n            layers[i].draw(this.chartArea);\n        }\n        this.notifyPlugins('afterDraw');\n    }\n _getSortedDatasetMetas(filterVisible) {\n        const metasets = this._sortedMetasets;\n        const result = [];\n        let i, ilen;\n        for(i = 0, ilen = metasets.length; i < ilen; ++i){\n            const meta = metasets[i];\n            if (!filterVisible || meta.visible) {\n                result.push(meta);\n            }\n        }\n        return result;\n    }\n getSortedVisibleDatasetMetas() {\n        return this._getSortedDatasetMetas(true);\n    }\n _drawDatasets() {\n        if (this.notifyPlugins('beforeDatasetsDraw', {\n            cancelable: true\n        }) === false) {\n            return;\n        }\n        const metasets = this.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            this._drawDataset(metasets[i]);\n        }\n        this.notifyPlugins('afterDatasetsDraw');\n    }\n _drawDataset(meta) {\n        const ctx = this.ctx;\n        const args = {\n            meta,\n            index: meta.index,\n            cancelable: true\n        };\n        const clip = getDatasetClipArea(this, meta);\n        if (this.notifyPlugins('beforeDatasetDraw', args) === false) {\n            return;\n        }\n        if (clip) {\n            clipArea(ctx, clip);\n        }\n        meta.controller.draw();\n        if (clip) {\n            unclipArea(ctx);\n        }\n        args.cancelable = false;\n        this.notifyPlugins('afterDatasetDraw', args);\n    }\n isPointInArea(point) {\n        return _isPointInArea(point, this.chartArea, this._minPadding);\n    }\n    getElementsAtEventForMode(e, mode, options, useFinalPosition) {\n        const method = Interaction.modes[mode];\n        if (typeof method === 'function') {\n            return method(this, e, options, useFinalPosition);\n        }\n        return [];\n    }\n    getDatasetMeta(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        const metasets = this._metasets;\n        let meta = metasets.filter((x)=>x && x._dataset === dataset).pop();\n        if (!meta) {\n            meta = {\n                type: null,\n                data: [],\n                dataset: null,\n                controller: null,\n                hidden: null,\n                xAxisID: null,\n                yAxisID: null,\n                order: dataset && dataset.order || 0,\n                index: datasetIndex,\n                _dataset: dataset,\n                _parsed: [],\n                _sorted: false\n            };\n            metasets.push(meta);\n        }\n        return meta;\n    }\n    getContext() {\n        return this.$context || (this.$context = createContext(null, {\n            chart: this,\n            type: 'chart'\n        }));\n    }\n    getVisibleDatasetCount() {\n        return this.getSortedVisibleDatasetMetas().length;\n    }\n    isDatasetVisible(datasetIndex) {\n        const dataset = this.data.datasets[datasetIndex];\n        if (!dataset) {\n            return false;\n        }\n        const meta = this.getDatasetMeta(datasetIndex);\n        return typeof meta.hidden === 'boolean' ? !meta.hidden : !dataset.hidden;\n    }\n    setDatasetVisibility(datasetIndex, visible) {\n        const meta = this.getDatasetMeta(datasetIndex);\n        meta.hidden = !visible;\n    }\n    toggleDataVisibility(index) {\n        this._hiddenIndices[index] = !this._hiddenIndices[index];\n    }\n    getDataVisibility(index) {\n        return !this._hiddenIndices[index];\n    }\n _updateVisibility(datasetIndex, dataIndex, visible) {\n        const mode = visible ? 'show' : 'hide';\n        const meta = this.getDatasetMeta(datasetIndex);\n        const anims = meta.controller._resolveAnimations(undefined, mode);\n        if (defined(dataIndex)) {\n            meta.data[dataIndex].hidden = !visible;\n            this.update();\n        } else {\n            this.setDatasetVisibility(datasetIndex, visible);\n            anims.update(meta, {\n                visible\n            });\n            this.update((ctx)=>ctx.datasetIndex === datasetIndex ? mode : undefined);\n        }\n    }\n    hide(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, false);\n    }\n    show(datasetIndex, dataIndex) {\n        this._updateVisibility(datasetIndex, dataIndex, true);\n    }\n _destroyDatasetMeta(datasetIndex) {\n        const meta = this._metasets[datasetIndex];\n        if (meta && meta.controller) {\n            meta.controller._destroy();\n        }\n        delete this._metasets[datasetIndex];\n    }\n    _stop() {\n        let i, ilen;\n        this.stop();\n        animator.remove(this);\n        for(i = 0, ilen = this.data.datasets.length; i < ilen; ++i){\n            this._destroyDatasetMeta(i);\n        }\n    }\n    destroy() {\n        this.notifyPlugins('beforeDestroy');\n        const { canvas , ctx  } = this;\n        this._stop();\n        this.config.clearCache();\n        if (canvas) {\n            this.unbindEvents();\n            clearCanvas(canvas, ctx);\n            this.platform.releaseContext(ctx);\n            this.canvas = null;\n            this.ctx = null;\n        }\n        delete instances[this.id];\n        this.notifyPlugins('afterDestroy');\n    }\n    toBase64Image(...args) {\n        return this.canvas.toDataURL(...args);\n    }\n bindEvents() {\n        this.bindUserEvents();\n        if (this.options.responsive) {\n            this.bindResponsiveEvents();\n        } else {\n            this.attached = true;\n        }\n    }\n bindUserEvents() {\n        const listeners = this._listeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const listener = (e, x, y)=>{\n            e.offsetX = x;\n            e.offsetY = y;\n            this._eventHandler(e);\n        };\n        each(this.options.events, (type)=>_add(type, listener));\n    }\n bindResponsiveEvents() {\n        if (!this._responsiveListeners) {\n            this._responsiveListeners = {};\n        }\n        const listeners = this._responsiveListeners;\n        const platform = this.platform;\n        const _add = (type, listener)=>{\n            platform.addEventListener(this, type, listener);\n            listeners[type] = listener;\n        };\n        const _remove = (type, listener)=>{\n            if (listeners[type]) {\n                platform.removeEventListener(this, type, listener);\n                delete listeners[type];\n            }\n        };\n        const listener = (width, height)=>{\n            if (this.canvas) {\n                this.resize(width, height);\n            }\n        };\n        let detached;\n        const attached = ()=>{\n            _remove('attach', attached);\n            this.attached = true;\n            this.resize();\n            _add('resize', listener);\n            _add('detach', detached);\n        };\n        detached = ()=>{\n            this.attached = false;\n            _remove('resize', listener);\n            this._stop();\n            this._resize(0, 0);\n            _add('attach', attached);\n        };\n        if (platform.isAttached(this.canvas)) {\n            attached();\n        } else {\n            detached();\n        }\n    }\n unbindEvents() {\n        each(this._listeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._listeners = {};\n        each(this._responsiveListeners, (listener, type)=>{\n            this.platform.removeEventListener(this, type, listener);\n        });\n        this._responsiveListeners = undefined;\n    }\n    updateHoverStyle(items, mode, enabled) {\n        const prefix = enabled ? 'set' : 'remove';\n        let meta, item, i, ilen;\n        if (mode === 'dataset') {\n            meta = this.getDatasetMeta(items[0].datasetIndex);\n            meta.controller['_' + prefix + 'DatasetHoverStyle']();\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            item = items[i];\n            const controller = item && this.getDatasetMeta(item.datasetIndex).controller;\n            if (controller) {\n                controller[prefix + 'HoverStyle'](item.element, item.datasetIndex, item.index);\n            }\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements) {\n        const lastActive = this._active || [];\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('No dataset found at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed) {\n            this._active = active;\n            this._lastEvent = null;\n            this._updateHoverStyles(active, lastActive);\n        }\n    }\n notifyPlugins(hook, args, filter) {\n        return this._plugins.notify(this, hook, args, filter);\n    }\n isPluginEnabled(pluginId) {\n        return this._plugins._cache.filter((p)=>p.plugin.id === pluginId).length === 1;\n    }\n _updateHoverStyles(active, lastActive, replay) {\n        const hoverOptions = this.options.hover;\n        const diff = (a, b)=>a.filter((x)=>!b.some((y)=>x.datasetIndex === y.datasetIndex && x.index === y.index));\n        const deactivated = diff(lastActive, active);\n        const activated = replay ? active : diff(active, lastActive);\n        if (deactivated.length) {\n            this.updateHoverStyle(deactivated, hoverOptions.mode, false);\n        }\n        if (activated.length && hoverOptions.mode) {\n            this.updateHoverStyle(activated, hoverOptions.mode, true);\n        }\n    }\n _eventHandler(e, replay) {\n        const args = {\n            event: e,\n            replay,\n            cancelable: true,\n            inChartArea: this.isPointInArea(e)\n        };\n        const eventFilter = (plugin)=>(plugin.options.events || this.options.events).includes(e.native.type);\n        if (this.notifyPlugins('beforeEvent', args, eventFilter) === false) {\n            return;\n        }\n        const changed = this._handleEvent(e, replay, args.inChartArea);\n        args.cancelable = false;\n        this.notifyPlugins('afterEvent', args, eventFilter);\n        if (changed || args.changed) {\n            this.render();\n        }\n        return this;\n    }\n _handleEvent(e, replay, inChartArea) {\n        const { _active: lastActive = [] , options  } = this;\n        const useFinalPosition = replay;\n        const active = this._getActiveElements(e, lastActive, inChartArea, useFinalPosition);\n        const isClick = _isClickEvent(e);\n        const lastEvent = determineLastEvent(e, this._lastEvent, inChartArea, isClick);\n        if (inChartArea) {\n            this._lastEvent = null;\n            callback(options.onHover, [\n                e,\n                active,\n                this\n            ], this);\n            if (isClick) {\n                callback(options.onClick, [\n                    e,\n                    active,\n                    this\n                ], this);\n            }\n        }\n        const changed = !_elementsEqual(active, lastActive);\n        if (changed || replay) {\n            this._active = active;\n            this._updateHoverStyles(active, lastActive, replay);\n        }\n        this._lastEvent = lastEvent;\n        return changed;\n    }\n _getActiveElements(e, lastActive, inChartArea, useFinalPosition) {\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive;\n        }\n        const hoverOptions = this.options.hover;\n        return this.getElementsAtEventForMode(e, hoverOptions.mode, hoverOptions, useFinalPosition);\n    }\n}\nfunction invalidatePlugins() {\n    return each(Chart.instances, (chart)=>chart._plugins.invalidate());\n}\n\nfunction clipArc(ctx, element, endAngle) {\n    const { startAngle , pixelMargin , x , y , outerRadius , innerRadius  } = element;\n    let angleMargin = pixelMargin / outerRadius;\n    // Draw an inner border by clipping the arc and drawing a double-width border\n    // Enlarge the clipping arc by 0.33 pixels to eliminate glitches between borders\n    ctx.beginPath();\n    ctx.arc(x, y, outerRadius, startAngle - angleMargin, endAngle + angleMargin);\n    if (innerRadius > pixelMargin) {\n        angleMargin = pixelMargin / innerRadius;\n        ctx.arc(x, y, innerRadius, endAngle + angleMargin, startAngle - angleMargin, true);\n    } else {\n        ctx.arc(x, y, pixelMargin, endAngle + HALF_PI, startAngle - HALF_PI);\n    }\n    ctx.closePath();\n    ctx.clip();\n}\nfunction toRadiusCorners(value) {\n    return _readValueToProps(value, [\n        'outerStart',\n        'outerEnd',\n        'innerStart',\n        'innerEnd'\n    ]);\n}\n/**\n * Parse border radius from the provided options\n */ function parseBorderRadius$1(arc, innerRadius, outerRadius, angleDelta) {\n    const o = toRadiusCorners(arc.options.borderRadius);\n    const halfThickness = (outerRadius - innerRadius) / 2;\n    const innerLimit = Math.min(halfThickness, angleDelta * innerRadius / 2);\n    // Outer limits are complicated. We want to compute the available angular distance at\n    // a radius of outerRadius - borderRadius because for small angular distances, this term limits.\n    // We compute at r = outerRadius - borderRadius because this circle defines the center of the border corners.\n    //\n    // If the borderRadius is large, that value can become negative.\n    // This causes the outer borders to lose their radius entirely, which is rather unexpected. To solve that, if borderRadius > outerRadius\n    // we know that the thickness term will dominate and compute the limits at that point\n    const computeOuterLimit = (val)=>{\n        const outerArcLimit = (outerRadius - Math.min(halfThickness, val)) * angleDelta / 2;\n        return _limitValue(val, 0, Math.min(halfThickness, outerArcLimit));\n    };\n    return {\n        outerStart: computeOuterLimit(o.outerStart),\n        outerEnd: computeOuterLimit(o.outerEnd),\n        innerStart: _limitValue(o.innerStart, 0, innerLimit),\n        innerEnd: _limitValue(o.innerEnd, 0, innerLimit)\n    };\n}\n/**\n * Convert (r, 𝜃) to (x, y)\n */ function rThetaToXY(r, theta, x, y) {\n    return {\n        x: x + r * Math.cos(theta),\n        y: y + r * Math.sin(theta)\n    };\n}\n/**\n * Path the arc, respecting border radius by separating into left and right halves.\n *\n *   Start      End\n *\n *    1--->a--->2    Outer\n *   /           \\\n *   8           3\n *   |           |\n *   |           |\n *   7           4\n *   \\           /\n *    6<---b<---5    Inner\n */ function pathArc(ctx, element, offset, spacing, end, circular) {\n    const { x , y , startAngle: start , pixelMargin , innerRadius: innerR  } = element;\n    const outerRadius = Math.max(element.outerRadius + spacing + offset - pixelMargin, 0);\n    const innerRadius = innerR > 0 ? innerR + spacing + offset + pixelMargin : 0;\n    let spacingOffset = 0;\n    const alpha = end - start;\n    if (spacing) {\n        // When spacing is present, it is the same for all items\n        // So we adjust the start and end angle of the arc such that\n        // the distance is the same as it would be without the spacing\n        const noSpacingInnerRadius = innerR > 0 ? innerR - spacing : 0;\n        const noSpacingOuterRadius = outerRadius > 0 ? outerRadius - spacing : 0;\n        const avNogSpacingRadius = (noSpacingInnerRadius + noSpacingOuterRadius) / 2;\n        const adjustedAngle = avNogSpacingRadius !== 0 ? alpha * avNogSpacingRadius / (avNogSpacingRadius + spacing) : alpha;\n        spacingOffset = (alpha - adjustedAngle) / 2;\n    }\n    const beta = Math.max(0.001, alpha * outerRadius - offset / PI) / outerRadius;\n    const angleOffset = (alpha - beta) / 2;\n    const startAngle = start + angleOffset + spacingOffset;\n    const endAngle = end - angleOffset - spacingOffset;\n    const { outerStart , outerEnd , innerStart , innerEnd  } = parseBorderRadius$1(element, innerRadius, outerRadius, endAngle - startAngle);\n    const outerStartAdjustedRadius = outerRadius - outerStart;\n    const outerEndAdjustedRadius = outerRadius - outerEnd;\n    const outerStartAdjustedAngle = startAngle + outerStart / outerStartAdjustedRadius;\n    const outerEndAdjustedAngle = endAngle - outerEnd / outerEndAdjustedRadius;\n    const innerStartAdjustedRadius = innerRadius + innerStart;\n    const innerEndAdjustedRadius = innerRadius + innerEnd;\n    const innerStartAdjustedAngle = startAngle + innerStart / innerStartAdjustedRadius;\n    const innerEndAdjustedAngle = endAngle - innerEnd / innerEndAdjustedRadius;\n    ctx.beginPath();\n    if (circular) {\n        // The first arc segments from point 1 to point a to point 2\n        const outerMidAdjustedAngle = (outerStartAdjustedAngle + outerEndAdjustedAngle) / 2;\n        ctx.arc(x, y, outerRadius, outerStartAdjustedAngle, outerMidAdjustedAngle);\n        ctx.arc(x, y, outerRadius, outerMidAdjustedAngle, outerEndAdjustedAngle);\n        // The corner segment from point 2 to point 3\n        if (outerEnd > 0) {\n            const pCenter = rThetaToXY(outerEndAdjustedRadius, outerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerEnd, outerEndAdjustedAngle, endAngle + HALF_PI);\n        }\n        // The line from point 3 to point 4\n        const p4 = rThetaToXY(innerEndAdjustedRadius, endAngle, x, y);\n        ctx.lineTo(p4.x, p4.y);\n        // The corner segment from point 4 to point 5\n        if (innerEnd > 0) {\n            const pCenter = rThetaToXY(innerEndAdjustedRadius, innerEndAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerEnd, endAngle + HALF_PI, innerEndAdjustedAngle + Math.PI);\n        }\n        // The inner arc from point 5 to point b to point 6\n        const innerMidAdjustedAngle = (endAngle - innerEnd / innerRadius + (startAngle + innerStart / innerRadius)) / 2;\n        ctx.arc(x, y, innerRadius, endAngle - innerEnd / innerRadius, innerMidAdjustedAngle, true);\n        ctx.arc(x, y, innerRadius, innerMidAdjustedAngle, startAngle + innerStart / innerRadius, true);\n        // The corner segment from point 6 to point 7\n        if (innerStart > 0) {\n            const pCenter = rThetaToXY(innerStartAdjustedRadius, innerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, innerStart, innerStartAdjustedAngle + Math.PI, startAngle - HALF_PI);\n        }\n        // The line from point 7 to point 8\n        const p8 = rThetaToXY(outerStartAdjustedRadius, startAngle, x, y);\n        ctx.lineTo(p8.x, p8.y);\n        // The corner segment from point 8 to point 1\n        if (outerStart > 0) {\n            const pCenter = rThetaToXY(outerStartAdjustedRadius, outerStartAdjustedAngle, x, y);\n            ctx.arc(pCenter.x, pCenter.y, outerStart, startAngle - HALF_PI, outerStartAdjustedAngle);\n        }\n    } else {\n        ctx.moveTo(x, y);\n        const outerStartX = Math.cos(outerStartAdjustedAngle) * outerRadius + x;\n        const outerStartY = Math.sin(outerStartAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerStartX, outerStartY);\n        const outerEndX = Math.cos(outerEndAdjustedAngle) * outerRadius + x;\n        const outerEndY = Math.sin(outerEndAdjustedAngle) * outerRadius + y;\n        ctx.lineTo(outerEndX, outerEndY);\n    }\n    ctx.closePath();\n}\nfunction drawArc(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference  } = element;\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.fill();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    pathArc(ctx, element, offset, spacing, endAngle, circular);\n    ctx.fill();\n    return endAngle;\n}\nfunction drawBorder(ctx, element, offset, spacing, circular) {\n    const { fullCircles , startAngle , circumference , options  } = element;\n    const { borderWidth , borderJoinStyle , borderDash , borderDashOffset  } = options;\n    const inner = options.borderAlign === 'inner';\n    if (!borderWidth) {\n        return;\n    }\n    ctx.setLineDash(borderDash || []);\n    ctx.lineDashOffset = borderDashOffset;\n    if (inner) {\n        ctx.lineWidth = borderWidth * 2;\n        ctx.lineJoin = borderJoinStyle || 'round';\n    } else {\n        ctx.lineWidth = borderWidth;\n        ctx.lineJoin = borderJoinStyle || 'bevel';\n    }\n    let endAngle = element.endAngle;\n    if (fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        for(let i = 0; i < fullCircles; ++i){\n            ctx.stroke();\n        }\n        if (!isNaN(circumference)) {\n            endAngle = startAngle + (circumference % TAU || TAU);\n        }\n    }\n    if (inner) {\n        clipArc(ctx, element, endAngle);\n    }\n    if (!fullCircles) {\n        pathArc(ctx, element, offset, spacing, endAngle, circular);\n        ctx.stroke();\n    }\n}\nclass ArcElement extends Element {\n    static id = 'arc';\n    static defaults = {\n        borderAlign: 'center',\n        borderColor: '#fff',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: undefined,\n        borderRadius: 0,\n        borderWidth: 2,\n        offset: 0,\n        spacing: 0,\n        angle: undefined,\n        circular: true\n    };\n    static defaultRoutes = {\n        backgroundColor: 'backgroundColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash'\n    };\n    circumference;\n    endAngle;\n    fullCircles;\n    innerRadius;\n    outerRadius;\n    pixelMargin;\n    startAngle;\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.circumference = undefined;\n        this.startAngle = undefined;\n        this.endAngle = undefined;\n        this.innerRadius = undefined;\n        this.outerRadius = undefined;\n        this.pixelMargin = 0;\n        this.fullCircles = 0;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(chartX, chartY, useFinalPosition) {\n        const point = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        const { angle , distance  } = getAngleFromPoint(point, {\n            x: chartX,\n            y: chartY\n        });\n        const { startAngle , endAngle , innerRadius , outerRadius , circumference  } = this.getProps([\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius',\n            'circumference'\n        ], useFinalPosition);\n        const rAdjust = (this.options.spacing + this.options.borderWidth) / 2;\n        const _circumference = valueOrDefault(circumference, endAngle - startAngle);\n        const nonZeroBetween = _angleBetween(angle, startAngle, endAngle) && startAngle !== endAngle;\n        const betweenAngles = _circumference >= TAU || nonZeroBetween;\n        const withinRadius = _isBetween(distance, innerRadius + rAdjust, outerRadius + rAdjust);\n        return betweenAngles && withinRadius;\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , startAngle , endAngle , innerRadius , outerRadius  } = this.getProps([\n            'x',\n            'y',\n            'startAngle',\n            'endAngle',\n            'innerRadius',\n            'outerRadius'\n        ], useFinalPosition);\n        const { offset , spacing  } = this.options;\n        const halfAngle = (startAngle + endAngle) / 2;\n        const halfRadius = (innerRadius + outerRadius + spacing + offset) / 2;\n        return {\n            x: x + Math.cos(halfAngle) * halfRadius,\n            y: y + Math.sin(halfAngle) * halfRadius\n        };\n    }\n    tooltipPosition(useFinalPosition) {\n        return this.getCenterPoint(useFinalPosition);\n    }\n    draw(ctx) {\n        const { options , circumference  } = this;\n        const offset = (options.offset || 0) / 4;\n        const spacing = (options.spacing || 0) / 2;\n        const circular = options.circular;\n        this.pixelMargin = options.borderAlign === 'inner' ? 0.33 : 0;\n        this.fullCircles = circumference > TAU ? Math.floor(circumference / TAU) : 0;\n        if (circumference === 0 || this.innerRadius < 0 || this.outerRadius < 0) {\n            return;\n        }\n        ctx.save();\n        const halfAngle = (this.startAngle + this.endAngle) / 2;\n        ctx.translate(Math.cos(halfAngle) * offset, Math.sin(halfAngle) * offset);\n        const fix = 1 - Math.sin(Math.min(PI, circumference || 0));\n        const radiusOffset = offset * fix;\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        drawArc(ctx, this, radiusOffset, spacing, circular);\n        drawBorder(ctx, this, radiusOffset, spacing, circular);\n        ctx.restore();\n    }\n}\n\nfunction setStyle(ctx, options, style = options) {\n    ctx.lineCap = valueOrDefault(style.borderCapStyle, options.borderCapStyle);\n    ctx.setLineDash(valueOrDefault(style.borderDash, options.borderDash));\n    ctx.lineDashOffset = valueOrDefault(style.borderDashOffset, options.borderDashOffset);\n    ctx.lineJoin = valueOrDefault(style.borderJoinStyle, options.borderJoinStyle);\n    ctx.lineWidth = valueOrDefault(style.borderWidth, options.borderWidth);\n    ctx.strokeStyle = valueOrDefault(style.borderColor, options.borderColor);\n}\nfunction lineTo(ctx, previous, target) {\n    ctx.lineTo(target.x, target.y);\n}\n function getLineMethod(options) {\n    if (options.stepped) {\n        return _steppedLineTo;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierCurveTo;\n    }\n    return lineTo;\n}\nfunction pathVars(points, segment, params = {}) {\n    const count = points.length;\n    const { start: paramsStart = 0 , end: paramsEnd = count - 1  } = params;\n    const { start: segmentStart , end: segmentEnd  } = segment;\n    const start = Math.max(paramsStart, segmentStart);\n    const end = Math.min(paramsEnd, segmentEnd);\n    const outside = paramsStart < segmentStart && paramsEnd < segmentStart || paramsStart > segmentEnd && paramsEnd > segmentEnd;\n    return {\n        count,\n        start,\n        loop: segment.loop,\n        ilen: end < start && !outside ? count + end - start : end - start\n    };\n}\n function pathSegment(ctx, line, segment, params) {\n    const { points , options  } = line;\n    const { count , start , loop , ilen  } = pathVars(points, segment, params);\n    const lineMethod = getLineMethod(options);\n    let { move =true , reverse  } = params || {};\n    let i, point, prev;\n    for(i = 0; i <= ilen; ++i){\n        point = points[(start + (reverse ? ilen - i : i)) % count];\n        if (point.skip) {\n            continue;\n        } else if (move) {\n            ctx.moveTo(point.x, point.y);\n            move = false;\n        } else {\n            lineMethod(ctx, prev, point, reverse, options.stepped);\n        }\n        prev = point;\n    }\n    if (loop) {\n        point = points[(start + (reverse ? ilen : 0)) % count];\n        lineMethod(ctx, prev, point, reverse, options.stepped);\n    }\n    return !!loop;\n}\n function fastPathSegment(ctx, line, segment, params) {\n    const points = line.points;\n    const { count , start , ilen  } = pathVars(points, segment, params);\n    const { move =true , reverse  } = params || {};\n    let avgX = 0;\n    let countX = 0;\n    let i, point, prevX, minY, maxY, lastY;\n    const pointIndex = (index)=>(start + (reverse ? ilen - index : index)) % count;\n    const drawX = ()=>{\n        if (minY !== maxY) {\n            ctx.lineTo(avgX, maxY);\n            ctx.lineTo(avgX, minY);\n            ctx.lineTo(avgX, lastY);\n        }\n    };\n    if (move) {\n        point = points[pointIndex(0)];\n        ctx.moveTo(point.x, point.y);\n    }\n    for(i = 0; i <= ilen; ++i){\n        point = points[pointIndex(i)];\n        if (point.skip) {\n            continue;\n        }\n        const x = point.x;\n        const y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n            } else if (y > maxY) {\n                maxY = y;\n            }\n            avgX = (countX * avgX + x) / ++countX;\n        } else {\n            drawX();\n            ctx.lineTo(x, y);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n        }\n        lastY = y;\n    }\n    drawX();\n}\n function _getSegmentMethod(line) {\n    const opts = line.options;\n    const borderDash = opts.borderDash && opts.borderDash.length;\n    const useFastPath = !line._decimated && !line._loop && !opts.tension && opts.cubicInterpolationMode !== 'monotone' && !opts.stepped && !borderDash;\n    return useFastPath ? fastPathSegment : pathSegment;\n}\n function _getInterpolationMethod(options) {\n    if (options.stepped) {\n        return _steppedInterpolation;\n    }\n    if (options.tension || options.cubicInterpolationMode === 'monotone') {\n        return _bezierInterpolation;\n    }\n    return _pointInLine;\n}\nfunction strokePathWithCache(ctx, line, start, count) {\n    let path = line._path;\n    if (!path) {\n        path = line._path = new Path2D();\n        if (line.path(path, start, count)) {\n            path.closePath();\n        }\n    }\n    setStyle(ctx, line.options);\n    ctx.stroke(path);\n}\nfunction strokePathDirect(ctx, line, start, count) {\n    const { segments , options  } = line;\n    const segmentMethod = _getSegmentMethod(line);\n    for (const segment of segments){\n        setStyle(ctx, options, segment.style);\n        ctx.beginPath();\n        if (segmentMethod(ctx, line, segment, {\n            start,\n            end: start + count - 1\n        })) {\n            ctx.closePath();\n        }\n        ctx.stroke();\n    }\n}\nconst usePath2D = typeof Path2D === 'function';\nfunction draw(ctx, line, start, count) {\n    if (usePath2D && !line.options.segment) {\n        strokePathWithCache(ctx, line, start, count);\n    } else {\n        strokePathDirect(ctx, line, start, count);\n    }\n}\nclass LineElement extends Element {\n    static id = 'line';\n static defaults = {\n        borderCapStyle: 'butt',\n        borderDash: [],\n        borderDashOffset: 0,\n        borderJoinStyle: 'miter',\n        borderWidth: 3,\n        capBezierPoints: true,\n        cubicInterpolationMode: 'default',\n        fill: false,\n        spanGaps: false,\n        stepped: false,\n        tension: 0\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    static descriptors = {\n        _scriptable: true,\n        _indexable: (name)=>name !== 'borderDash' && name !== 'fill'\n    };\n    constructor(cfg){\n        super();\n        this.animated = true;\n        this.options = undefined;\n        this._chart = undefined;\n        this._loop = undefined;\n        this._fullLoop = undefined;\n        this._path = undefined;\n        this._points = undefined;\n        this._segments = undefined;\n        this._decimated = false;\n        this._pointsUpdated = false;\n        this._datasetIndex = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    updateControlPoints(chartArea, indexAxis) {\n        const options = this.options;\n        if ((options.tension || options.cubicInterpolationMode === 'monotone') && !options.stepped && !this._pointsUpdated) {\n            const loop = options.spanGaps ? this._loop : this._fullLoop;\n            _updateBezierControlPoints(this._points, options, chartArea, loop, indexAxis);\n            this._pointsUpdated = true;\n        }\n    }\n    set points(points) {\n        this._points = points;\n        delete this._segments;\n        delete this._path;\n        this._pointsUpdated = false;\n    }\n    get points() {\n        return this._points;\n    }\n    get segments() {\n        return this._segments || (this._segments = _computeSegments(this, this.options.segment));\n    }\n first() {\n        const segments = this.segments;\n        const points = this.points;\n        return segments.length && points[segments[0].start];\n    }\n last() {\n        const segments = this.segments;\n        const points = this.points;\n        const count = segments.length;\n        return count && points[segments[count - 1].end];\n    }\n interpolate(point, property) {\n        const options = this.options;\n        const value = point[property];\n        const points = this.points;\n        const segments = _boundSegments(this, {\n            property,\n            start: value,\n            end: value\n        });\n        if (!segments.length) {\n            return;\n        }\n        const result = [];\n        const _interpolate = _getInterpolationMethod(options);\n        let i, ilen;\n        for(i = 0, ilen = segments.length; i < ilen; ++i){\n            const { start , end  } = segments[i];\n            const p1 = points[start];\n            const p2 = points[end];\n            if (p1 === p2) {\n                result.push(p1);\n                continue;\n            }\n            const t = Math.abs((value - p1[property]) / (p2[property] - p1[property]));\n            const interpolated = _interpolate(p1, p2, t, options.stepped);\n            interpolated[property] = point[property];\n            result.push(interpolated);\n        }\n        return result.length === 1 ? result[0] : result;\n    }\n pathSegment(ctx, segment, params) {\n        const segmentMethod = _getSegmentMethod(this);\n        return segmentMethod(ctx, this, segment, params);\n    }\n path(ctx, start, count) {\n        const segments = this.segments;\n        const segmentMethod = _getSegmentMethod(this);\n        let loop = this._loop;\n        start = start || 0;\n        count = count || this.points.length - start;\n        for (const segment of segments){\n            loop &= segmentMethod(ctx, this, segment, {\n                start,\n                end: start + count - 1\n            });\n        }\n        return !!loop;\n    }\n draw(ctx, chartArea, start, count) {\n        const options = this.options || {};\n        const points = this.points || [];\n        if (points.length && options.borderWidth) {\n            ctx.save();\n            draw(ctx, this, start, count);\n            ctx.restore();\n        }\n        if (this.animated) {\n            this._pointsUpdated = false;\n            this._path = undefined;\n        }\n    }\n}\n\nfunction inRange$1(el, pos, axis, useFinalPosition) {\n    const options = el.options;\n    const { [axis]: value  } = el.getProps([\n        axis\n    ], useFinalPosition);\n    return Math.abs(pos - value) < options.radius + options.hitRadius;\n}\nclass PointElement extends Element {\n    static id = 'point';\n    parsed;\n    skip;\n    stop;\n    /**\n   * @type {any}\n   */ static defaults = {\n        borderWidth: 1,\n        hitRadius: 1,\n        hoverBorderWidth: 1,\n        hoverRadius: 4,\n        pointStyle: 'circle',\n        radius: 3,\n        rotation: 0\n    };\n    /**\n   * @type {any}\n   */ static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.parsed = undefined;\n        this.skip = undefined;\n        this.stop = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        const options = this.options;\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return Math.pow(mouseX - x, 2) + Math.pow(mouseY - y, 2) < Math.pow(options.hitRadius + options.radius, 2);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange$1(this, mouseX, 'x', useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange$1(this, mouseY, 'y', useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y  } = this.getProps([\n            'x',\n            'y'\n        ], useFinalPosition);\n        return {\n            x,\n            y\n        };\n    }\n    size(options) {\n        options = options || this.options || {};\n        let radius = options.radius || 0;\n        radius = Math.max(radius, radius && options.hoverRadius || 0);\n        const borderWidth = radius && options.borderWidth || 0;\n        return (radius + borderWidth) * 2;\n    }\n    draw(ctx, area) {\n        const options = this.options;\n        if (this.skip || options.radius < 0.1 || !_isPointInArea(this, area, this.size(options) / 2)) {\n            return;\n        }\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.fillStyle = options.backgroundColor;\n        drawPoint(ctx, options, this.x, this.y);\n    }\n    getRange() {\n        const options = this.options || {};\n        // @ts-expect-error Fallbacks should never be hit in practice\n        return options.radius + options.hitRadius;\n    }\n}\n\nfunction getBarBounds(bar, useFinalPosition) {\n    const { x , y , base , width , height  } =  bar.getProps([\n        'x',\n        'y',\n        'base',\n        'width',\n        'height'\n    ], useFinalPosition);\n    let left, right, top, bottom, half;\n    if (bar.horizontal) {\n        half = height / 2;\n        left = Math.min(x, base);\n        right = Math.max(x, base);\n        top = y - half;\n        bottom = y + half;\n    } else {\n        half = width / 2;\n        left = x - half;\n        right = x + half;\n        top = Math.min(y, base);\n        bottom = Math.max(y, base);\n    }\n    return {\n        left,\n        top,\n        right,\n        bottom\n    };\n}\nfunction skipOrLimit(skip, value, min, max) {\n    return skip ? 0 : _limitValue(value, min, max);\n}\nfunction parseBorderWidth(bar, maxW, maxH) {\n    const value = bar.options.borderWidth;\n    const skip = bar.borderSkipped;\n    const o = toTRBL(value);\n    return {\n        t: skipOrLimit(skip.top, o.top, 0, maxH),\n        r: skipOrLimit(skip.right, o.right, 0, maxW),\n        b: skipOrLimit(skip.bottom, o.bottom, 0, maxH),\n        l: skipOrLimit(skip.left, o.left, 0, maxW)\n    };\n}\nfunction parseBorderRadius(bar, maxW, maxH) {\n    const { enableBorderRadius  } = bar.getProps([\n        'enableBorderRadius'\n    ]);\n    const value = bar.options.borderRadius;\n    const o = toTRBLCorners(value);\n    const maxR = Math.min(maxW, maxH);\n    const skip = bar.borderSkipped;\n    const enableBorder = enableBorderRadius || isObject(value);\n    return {\n        topLeft: skipOrLimit(!enableBorder || skip.top || skip.left, o.topLeft, 0, maxR),\n        topRight: skipOrLimit(!enableBorder || skip.top || skip.right, o.topRight, 0, maxR),\n        bottomLeft: skipOrLimit(!enableBorder || skip.bottom || skip.left, o.bottomLeft, 0, maxR),\n        bottomRight: skipOrLimit(!enableBorder || skip.bottom || skip.right, o.bottomRight, 0, maxR)\n    };\n}\nfunction boundingRects(bar) {\n    const bounds = getBarBounds(bar);\n    const width = bounds.right - bounds.left;\n    const height = bounds.bottom - bounds.top;\n    const border = parseBorderWidth(bar, width / 2, height / 2);\n    const radius = parseBorderRadius(bar, width / 2, height / 2);\n    return {\n        outer: {\n            x: bounds.left,\n            y: bounds.top,\n            w: width,\n            h: height,\n            radius\n        },\n        inner: {\n            x: bounds.left + border.l,\n            y: bounds.top + border.t,\n            w: width - border.l - border.r,\n            h: height - border.t - border.b,\n            radius: {\n                topLeft: Math.max(0, radius.topLeft - Math.max(border.t, border.l)),\n                topRight: Math.max(0, radius.topRight - Math.max(border.t, border.r)),\n                bottomLeft: Math.max(0, radius.bottomLeft - Math.max(border.b, border.l)),\n                bottomRight: Math.max(0, radius.bottomRight - Math.max(border.b, border.r))\n            }\n        }\n    };\n}\nfunction inRange(bar, x, y, useFinalPosition) {\n    const skipX = x === null;\n    const skipY = y === null;\n    const skipBoth = skipX && skipY;\n    const bounds = bar && !skipBoth && getBarBounds(bar, useFinalPosition);\n    return bounds && (skipX || _isBetween(x, bounds.left, bounds.right)) && (skipY || _isBetween(y, bounds.top, bounds.bottom));\n}\nfunction hasRadius(radius) {\n    return radius.topLeft || radius.topRight || radius.bottomLeft || radius.bottomRight;\n}\n function addNormalRectPath(ctx, rect) {\n    ctx.rect(rect.x, rect.y, rect.w, rect.h);\n}\nfunction inflateRect(rect, amount, refRect = {}) {\n    const x = rect.x !== refRect.x ? -amount : 0;\n    const y = rect.y !== refRect.y ? -amount : 0;\n    const w = (rect.x + rect.w !== refRect.x + refRect.w ? amount : 0) - x;\n    const h = (rect.y + rect.h !== refRect.y + refRect.h ? amount : 0) - y;\n    return {\n        x: rect.x + x,\n        y: rect.y + y,\n        w: rect.w + w,\n        h: rect.h + h,\n        radius: rect.radius\n    };\n}\nclass BarElement extends Element {\n    static id = 'bar';\n static defaults = {\n        borderSkipped: 'start',\n        borderWidth: 0,\n        borderRadius: 0,\n        inflateAmount: 'auto',\n        pointStyle: undefined\n    };\n static defaultRoutes = {\n        backgroundColor: 'backgroundColor',\n        borderColor: 'borderColor'\n    };\n    constructor(cfg){\n        super();\n        this.options = undefined;\n        this.horizontal = undefined;\n        this.base = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.inflateAmount = undefined;\n        if (cfg) {\n            Object.assign(this, cfg);\n        }\n    }\n    draw(ctx) {\n        const { inflateAmount , options: { borderColor , backgroundColor  }  } = this;\n        const { inner , outer  } = boundingRects(this);\n        const addRectPath = hasRadius(outer.radius) ? addRoundedRectPath : addNormalRectPath;\n        ctx.save();\n        if (outer.w !== inner.w || outer.h !== inner.h) {\n            ctx.beginPath();\n            addRectPath(ctx, inflateRect(outer, inflateAmount, inner));\n            ctx.clip();\n            addRectPath(ctx, inflateRect(inner, -inflateAmount, outer));\n            ctx.fillStyle = borderColor;\n            ctx.fill('evenodd');\n        }\n        ctx.beginPath();\n        addRectPath(ctx, inflateRect(inner, inflateAmount));\n        ctx.fillStyle = backgroundColor;\n        ctx.fill();\n        ctx.restore();\n    }\n    inRange(mouseX, mouseY, useFinalPosition) {\n        return inRange(this, mouseX, mouseY, useFinalPosition);\n    }\n    inXRange(mouseX, useFinalPosition) {\n        return inRange(this, mouseX, null, useFinalPosition);\n    }\n    inYRange(mouseY, useFinalPosition) {\n        return inRange(this, null, mouseY, useFinalPosition);\n    }\n    getCenterPoint(useFinalPosition) {\n        const { x , y , base , horizontal  } =  this.getProps([\n            'x',\n            'y',\n            'base',\n            'horizontal'\n        ], useFinalPosition);\n        return {\n            x: horizontal ? (x + base) / 2 : x,\n            y: horizontal ? y : (y + base) / 2\n        };\n    }\n    getRange(axis) {\n        return axis === 'x' ? this.width / 2 : this.height / 2;\n    }\n}\n\nvar elements = /*#__PURE__*/Object.freeze({\n__proto__: null,\nArcElement: ArcElement,\nBarElement: BarElement,\nLineElement: LineElement,\nPointElement: PointElement\n});\n\nconst BORDER_COLORS = [\n    'rgb(54, 162, 235)',\n    'rgb(255, 99, 132)',\n    'rgb(255, 159, 64)',\n    'rgb(255, 205, 86)',\n    'rgb(75, 192, 192)',\n    'rgb(153, 102, 255)',\n    'rgb(201, 203, 207)' // grey\n];\n// Border colors with 50% transparency\nconst BACKGROUND_COLORS = /* #__PURE__ */ BORDER_COLORS.map((color)=>color.replace('rgb(', 'rgba(').replace(')', ', 0.5)'));\nfunction getBorderColor(i) {\n    return BORDER_COLORS[i % BORDER_COLORS.length];\n}\nfunction getBackgroundColor(i) {\n    return BACKGROUND_COLORS[i % BACKGROUND_COLORS.length];\n}\nfunction colorizeDefaultDataset(dataset, i) {\n    dataset.borderColor = getBorderColor(i);\n    dataset.backgroundColor = getBackgroundColor(i);\n    return ++i;\n}\nfunction colorizeDoughnutDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBorderColor(i++));\n    return i;\n}\nfunction colorizePolarAreaDataset(dataset, i) {\n    dataset.backgroundColor = dataset.data.map(()=>getBackgroundColor(i++));\n    return i;\n}\nfunction getColorizer(chart) {\n    let i = 0;\n    return (dataset, datasetIndex)=>{\n        const controller = chart.getDatasetMeta(datasetIndex).controller;\n        if (controller instanceof DoughnutController) {\n            i = colorizeDoughnutDataset(dataset, i);\n        } else if (controller instanceof PolarAreaController) {\n            i = colorizePolarAreaDataset(dataset, i);\n        } else if (controller) {\n            i = colorizeDefaultDataset(dataset, i);\n        }\n    };\n}\nfunction containsColorsDefinitions(descriptors) {\n    let k;\n    for(k in descriptors){\n        if (descriptors[k].borderColor || descriptors[k].backgroundColor) {\n            return true;\n        }\n    }\n    return false;\n}\nfunction containsColorsDefinition(descriptor) {\n    return descriptor && (descriptor.borderColor || descriptor.backgroundColor);\n}\nfunction containsDefaultColorsDefenitions() {\n    return defaults.borderColor !== 'rgba(0,0,0,0.1)' || defaults.backgroundColor !== 'rgba(0,0,0,0.1)';\n}\nvar plugin_colors = {\n    id: 'colors',\n    defaults: {\n        enabled: true,\n        forceOverride: false\n    },\n    beforeLayout (chart, _args, options) {\n        if (!options.enabled) {\n            return;\n        }\n        const { data: { datasets  } , options: chartOptions  } = chart.config;\n        const { elements  } = chartOptions;\n        const containsColorDefenition = containsColorsDefinitions(datasets) || containsColorsDefinition(chartOptions) || elements && containsColorsDefinitions(elements) || containsDefaultColorsDefenitions();\n        if (!options.forceOverride && containsColorDefenition) {\n            return;\n        }\n        const colorizer = getColorizer(chart);\n        datasets.forEach(colorizer);\n    }\n};\n\nfunction lttbDecimation(data, start, count, availableWidth, options) {\n const samples = options.samples || availableWidth;\n    if (samples >= count) {\n        return data.slice(start, start + count);\n    }\n    const decimated = [];\n    const bucketWidth = (count - 2) / (samples - 2);\n    let sampledIndex = 0;\n    const endIndex = start + count - 1;\n    let a = start;\n    let i, maxAreaPoint, maxArea, area, nextA;\n    decimated[sampledIndex++] = data[a];\n    for(i = 0; i < samples - 2; i++){\n        let avgX = 0;\n        let avgY = 0;\n        let j;\n        const avgRangeStart = Math.floor((i + 1) * bucketWidth) + 1 + start;\n        const avgRangeEnd = Math.min(Math.floor((i + 2) * bucketWidth) + 1, count) + start;\n        const avgRangeLength = avgRangeEnd - avgRangeStart;\n        for(j = avgRangeStart; j < avgRangeEnd; j++){\n            avgX += data[j].x;\n            avgY += data[j].y;\n        }\n        avgX /= avgRangeLength;\n        avgY /= avgRangeLength;\n        const rangeOffs = Math.floor(i * bucketWidth) + 1 + start;\n        const rangeTo = Math.min(Math.floor((i + 1) * bucketWidth) + 1, count) + start;\n        const { x: pointAx , y: pointAy  } = data[a];\n        maxArea = area = -1;\n        for(j = rangeOffs; j < rangeTo; j++){\n            area = 0.5 * Math.abs((pointAx - avgX) * (data[j].y - pointAy) - (pointAx - data[j].x) * (avgY - pointAy));\n            if (area > maxArea) {\n                maxArea = area;\n                maxAreaPoint = data[j];\n                nextA = j;\n            }\n        }\n        decimated[sampledIndex++] = maxAreaPoint;\n        a = nextA;\n    }\n    decimated[sampledIndex++] = data[endIndex];\n    return decimated;\n}\nfunction minMaxDecimation(data, start, count, availableWidth) {\n    let avgX = 0;\n    let countX = 0;\n    let i, point, x, y, prevX, minIndex, maxIndex, startIndex, minY, maxY;\n    const decimated = [];\n    const endIndex = start + count - 1;\n    const xMin = data[start].x;\n    const xMax = data[endIndex].x;\n    const dx = xMax - xMin;\n    for(i = start; i < start + count; ++i){\n        point = data[i];\n        x = (point.x - xMin) / dx * availableWidth;\n        y = point.y;\n        const truncX = x | 0;\n        if (truncX === prevX) {\n            if (y < minY) {\n                minY = y;\n                minIndex = i;\n            } else if (y > maxY) {\n                maxY = y;\n                maxIndex = i;\n            }\n            avgX = (countX * avgX + point.x) / ++countX;\n        } else {\n            const lastIndex = i - 1;\n            if (!isNullOrUndef(minIndex) && !isNullOrUndef(maxIndex)) {\n                const intermediateIndex1 = Math.min(minIndex, maxIndex);\n                const intermediateIndex2 = Math.max(minIndex, maxIndex);\n                if (intermediateIndex1 !== startIndex && intermediateIndex1 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex1],\n                        x: avgX\n                    });\n                }\n                if (intermediateIndex2 !== startIndex && intermediateIndex2 !== lastIndex) {\n                    decimated.push({\n                        ...data[intermediateIndex2],\n                        x: avgX\n                    });\n                }\n            }\n            if (i > 0 && lastIndex !== startIndex) {\n                decimated.push(data[lastIndex]);\n            }\n            decimated.push(point);\n            prevX = truncX;\n            countX = 0;\n            minY = maxY = y;\n            minIndex = maxIndex = startIndex = i;\n        }\n    }\n    return decimated;\n}\nfunction cleanDecimatedDataset(dataset) {\n    if (dataset._decimated) {\n        const data = dataset._data;\n        delete dataset._decimated;\n        delete dataset._data;\n        Object.defineProperty(dataset, 'data', {\n            configurable: true,\n            enumerable: true,\n            writable: true,\n            value: data\n        });\n    }\n}\nfunction cleanDecimatedData(chart) {\n    chart.data.datasets.forEach((dataset)=>{\n        cleanDecimatedDataset(dataset);\n    });\n}\nfunction getStartAndCountOfVisiblePointsSimplified(meta, points) {\n    const pointCount = points.length;\n    let start = 0;\n    let count;\n    const { iScale  } = meta;\n    const { min , max , minDefined , maxDefined  } = iScale.getUserBounds();\n    if (minDefined) {\n        start = _limitValue(_lookupByKey(points, iScale.axis, min).lo, 0, pointCount - 1);\n    }\n    if (maxDefined) {\n        count = _limitValue(_lookupByKey(points, iScale.axis, max).hi + 1, start, pointCount) - start;\n    } else {\n        count = pointCount - start;\n    }\n    return {\n        start,\n        count\n    };\n}\nvar plugin_decimation = {\n    id: 'decimation',\n    defaults: {\n        algorithm: 'min-max',\n        enabled: false\n    },\n    beforeElementsUpdate: (chart, args, options)=>{\n        if (!options.enabled) {\n            cleanDecimatedData(chart);\n            return;\n        }\n        const availableWidth = chart.width;\n        chart.data.datasets.forEach((dataset, datasetIndex)=>{\n            const { _data , indexAxis  } = dataset;\n            const meta = chart.getDatasetMeta(datasetIndex);\n            const data = _data || dataset.data;\n            if (resolve([\n                indexAxis,\n                chart.options.indexAxis\n            ]) === 'y') {\n                return;\n            }\n            if (!meta.controller.supportsDecimation) {\n                return;\n            }\n            const xAxis = chart.scales[meta.xAxisID];\n            if (xAxis.type !== 'linear' && xAxis.type !== 'time') {\n                return;\n            }\n            if (chart.options.parsing) {\n                return;\n            }\n            let { start , count  } = getStartAndCountOfVisiblePointsSimplified(meta, data);\n            const threshold = options.threshold || 4 * availableWidth;\n            if (count <= threshold) {\n                cleanDecimatedDataset(dataset);\n                return;\n            }\n            if (isNullOrUndef(_data)) {\n                dataset._data = data;\n                delete dataset.data;\n                Object.defineProperty(dataset, 'data', {\n                    configurable: true,\n                    enumerable: true,\n                    get: function() {\n                        return this._decimated;\n                    },\n                    set: function(d) {\n                        this._data = d;\n                    }\n                });\n            }\n            let decimated;\n            switch(options.algorithm){\n                case 'lttb':\n                    decimated = lttbDecimation(data, start, count, availableWidth, options);\n                    break;\n                case 'min-max':\n                    decimated = minMaxDecimation(data, start, count, availableWidth);\n                    break;\n                default:\n                    throw new Error(`Unsupported decimation algorithm '${options.algorithm}'`);\n            }\n            dataset._decimated = decimated;\n        });\n    },\n    destroy (chart) {\n        cleanDecimatedData(chart);\n    }\n};\n\nfunction _segments(line, target, property) {\n    const segments = line.segments;\n    const points = line.points;\n    const tpoints = target.points;\n    const parts = [];\n    for (const segment of segments){\n        let { start , end  } = segment;\n        end = _findSegmentEnd(start, end, points);\n        const bounds = _getBounds(property, points[start], points[end], segment.loop);\n        if (!target.segments) {\n            parts.push({\n                source: segment,\n                target: bounds,\n                start: points[start],\n                end: points[end]\n            });\n            continue;\n        }\n        const targetSegments = _boundSegments(target, bounds);\n        for (const tgt of targetSegments){\n            const subBounds = _getBounds(property, tpoints[tgt.start], tpoints[tgt.end], tgt.loop);\n            const fillSources = _boundSegment(segment, points, subBounds);\n            for (const fillSource of fillSources){\n                parts.push({\n                    source: fillSource,\n                    target: tgt,\n                    start: {\n                        [property]: _getEdge(bounds, subBounds, 'start', Math.max)\n                    },\n                    end: {\n                        [property]: _getEdge(bounds, subBounds, 'end', Math.min)\n                    }\n                });\n            }\n        }\n    }\n    return parts;\n}\nfunction _getBounds(property, first, last, loop) {\n    if (loop) {\n        return;\n    }\n    let start = first[property];\n    let end = last[property];\n    if (property === 'angle') {\n        start = _normalizeAngle(start);\n        end = _normalizeAngle(end);\n    }\n    return {\n        property,\n        start,\n        end\n    };\n}\nfunction _pointsFromSegments(boundary, line) {\n    const { x =null , y =null  } = boundary || {};\n    const linePoints = line.points;\n    const points = [];\n    line.segments.forEach(({ start , end  })=>{\n        end = _findSegmentEnd(start, end, linePoints);\n        const first = linePoints[start];\n        const last = linePoints[end];\n        if (y !== null) {\n            points.push({\n                x: first.x,\n                y\n            });\n            points.push({\n                x: last.x,\n                y\n            });\n        } else if (x !== null) {\n            points.push({\n                x,\n                y: first.y\n            });\n            points.push({\n                x,\n                y: last.y\n            });\n        }\n    });\n    return points;\n}\nfunction _findSegmentEnd(start, end, points) {\n    for(; end > start; end--){\n        const point = points[end];\n        if (!isNaN(point.x) && !isNaN(point.y)) {\n            break;\n        }\n    }\n    return end;\n}\nfunction _getEdge(a, b, prop, fn) {\n    if (a && b) {\n        return fn(a[prop], b[prop]);\n    }\n    return a ? a[prop] : b ? b[prop] : 0;\n}\n\nfunction _createBoundaryLine(boundary, line) {\n    let points = [];\n    let _loop = false;\n    if (isArray(boundary)) {\n        _loop = true;\n        points = boundary;\n    } else {\n        points = _pointsFromSegments(boundary, line);\n    }\n    return points.length ? new LineElement({\n        points,\n        options: {\n            tension: 0\n        },\n        _loop,\n        _fullLoop: _loop\n    }) : null;\n}\nfunction _shouldApplyFill(source) {\n    return source && source.fill !== false;\n}\n\nfunction _resolveTarget(sources, index, propagate) {\n    const source = sources[index];\n    let fill = source.fill;\n    const visited = [\n        index\n    ];\n    let target;\n    if (!propagate) {\n        return fill;\n    }\n    while(fill !== false && visited.indexOf(fill) === -1){\n        if (!isNumberFinite(fill)) {\n            return fill;\n        }\n        target = sources[fill];\n        if (!target) {\n            return false;\n        }\n        if (target.visible) {\n            return fill;\n        }\n        visited.push(fill);\n        fill = target.fill;\n    }\n    return false;\n}\n function _decodeFill(line, index, count) {\n     const fill = parseFillOption(line);\n    if (isObject(fill)) {\n        return isNaN(fill.value) ? false : fill;\n    }\n    let target = parseFloat(fill);\n    if (isNumberFinite(target) && Math.floor(target) === target) {\n        return decodeTargetIndex(fill[0], index, target, count);\n    }\n    return [\n        'origin',\n        'start',\n        'end',\n        'stack',\n        'shape'\n    ].indexOf(fill) >= 0 && fill;\n}\nfunction decodeTargetIndex(firstCh, index, target, count) {\n    if (firstCh === '-' || firstCh === '+') {\n        target = index + target;\n    }\n    if (target === index || target < 0 || target >= count) {\n        return false;\n    }\n    return target;\n}\n function _getTargetPixel(fill, scale) {\n    let pixel = null;\n    if (fill === 'start') {\n        pixel = scale.bottom;\n    } else if (fill === 'end') {\n        pixel = scale.top;\n    } else if (isObject(fill)) {\n        pixel = scale.getPixelForValue(fill.value);\n    } else if (scale.getBasePixel) {\n        pixel = scale.getBasePixel();\n    }\n    return pixel;\n}\n function _getTargetValue(fill, scale, startValue) {\n    let value;\n    if (fill === 'start') {\n        value = startValue;\n    } else if (fill === 'end') {\n        value = scale.options.reverse ? scale.min : scale.max;\n    } else if (isObject(fill)) {\n        value = fill.value;\n    } else {\n        value = scale.getBaseValue();\n    }\n    return value;\n}\n function parseFillOption(line) {\n    const options = line.options;\n    const fillOption = options.fill;\n    let fill = valueOrDefault(fillOption && fillOption.target, fillOption);\n    if (fill === undefined) {\n        fill = !!options.backgroundColor;\n    }\n    if (fill === false || fill === null) {\n        return false;\n    }\n    if (fill === true) {\n        return 'origin';\n    }\n    return fill;\n}\n\nfunction _buildStackLine(source) {\n    const { scale , index , line  } = source;\n    const points = [];\n    const segments = line.segments;\n    const sourcePoints = line.points;\n    const linesBelow = getLinesBelow(scale, index);\n    linesBelow.push(_createBoundaryLine({\n        x: null,\n        y: scale.bottom\n    }, line));\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        for(let j = segment.start; j <= segment.end; j++){\n            addPointsBelow(points, sourcePoints[j], linesBelow);\n        }\n    }\n    return new LineElement({\n        points,\n        options: {}\n    });\n}\n function getLinesBelow(scale, index) {\n    const below = [];\n    const metas = scale.getMatchingVisibleMetas('line');\n    for(let i = 0; i < metas.length; i++){\n        const meta = metas[i];\n        if (meta.index === index) {\n            break;\n        }\n        if (!meta.hidden) {\n            below.unshift(meta.dataset);\n        }\n    }\n    return below;\n}\n function addPointsBelow(points, sourcePoint, linesBelow) {\n    const postponed = [];\n    for(let j = 0; j < linesBelow.length; j++){\n        const line = linesBelow[j];\n        const { first , last , point  } = findPoint(line, sourcePoint, 'x');\n        if (!point || first && last) {\n            continue;\n        }\n        if (first) {\n            postponed.unshift(point);\n        } else {\n            points.push(point);\n            if (!last) {\n                break;\n            }\n        }\n    }\n    points.push(...postponed);\n}\n function findPoint(line, sourcePoint, property) {\n    const point = line.interpolate(sourcePoint, property);\n    if (!point) {\n        return {};\n    }\n    const pointValue = point[property];\n    const segments = line.segments;\n    const linePoints = line.points;\n    let first = false;\n    let last = false;\n    for(let i = 0; i < segments.length; i++){\n        const segment = segments[i];\n        const firstValue = linePoints[segment.start][property];\n        const lastValue = linePoints[segment.end][property];\n        if (_isBetween(pointValue, firstValue, lastValue)) {\n            first = pointValue === firstValue;\n            last = pointValue === lastValue;\n            break;\n        }\n    }\n    return {\n        first,\n        last,\n        point\n    };\n}\n\nclass simpleArc {\n    constructor(opts){\n        this.x = opts.x;\n        this.y = opts.y;\n        this.radius = opts.radius;\n    }\n    pathSegment(ctx, bounds, opts) {\n        const { x , y , radius  } = this;\n        bounds = bounds || {\n            start: 0,\n            end: TAU\n        };\n        ctx.arc(x, y, radius, bounds.end, bounds.start, true);\n        return !opts.bounds;\n    }\n    interpolate(point) {\n        const { x , y , radius  } = this;\n        const angle = point.angle;\n        return {\n            x: x + Math.cos(angle) * radius,\n            y: y + Math.sin(angle) * radius,\n            angle\n        };\n    }\n}\n\nfunction _getTarget(source) {\n    const { chart , fill , line  } = source;\n    if (isNumberFinite(fill)) {\n        return getLineByIndex(chart, fill);\n    }\n    if (fill === 'stack') {\n        return _buildStackLine(source);\n    }\n    if (fill === 'shape') {\n        return true;\n    }\n    const boundary = computeBoundary(source);\n    if (boundary instanceof simpleArc) {\n        return boundary;\n    }\n    return _createBoundaryLine(boundary, line);\n}\n function getLineByIndex(chart, index) {\n    const meta = chart.getDatasetMeta(index);\n    const visible = meta && chart.isDatasetVisible(index);\n    return visible ? meta.dataset : null;\n}\nfunction computeBoundary(source) {\n    const scale = source.scale || {};\n    if (scale.getPointPositionForValue) {\n        return computeCircularBoundary(source);\n    }\n    return computeLinearBoundary(source);\n}\nfunction computeLinearBoundary(source) {\n    const { scale ={} , fill  } = source;\n    const pixel = _getTargetPixel(fill, scale);\n    if (isNumberFinite(pixel)) {\n        const horizontal = scale.isHorizontal();\n        return {\n            x: horizontal ? pixel : null,\n            y: horizontal ? null : pixel\n        };\n    }\n    return null;\n}\nfunction computeCircularBoundary(source) {\n    const { scale , fill  } = source;\n    const options = scale.options;\n    const length = scale.getLabels().length;\n    const start = options.reverse ? scale.max : scale.min;\n    const value = _getTargetValue(fill, scale, start);\n    const target = [];\n    if (options.grid.circular) {\n        const center = scale.getPointPositionForValue(0, start);\n        return new simpleArc({\n            x: center.x,\n            y: center.y,\n            radius: scale.getDistanceFromCenterForValue(value)\n        });\n    }\n    for(let i = 0; i < length; ++i){\n        target.push(scale.getPointPositionForValue(i, value));\n    }\n    return target;\n}\n\nfunction _drawfill(ctx, source, area) {\n    const target = _getTarget(source);\n    const { chart , index , line , scale , axis  } = source;\n    const lineOpts = line.options;\n    const fillOption = lineOpts.fill;\n    const color = lineOpts.backgroundColor;\n    const { above =color , below =color  } = fillOption || {};\n    const meta = chart.getDatasetMeta(index);\n    const clip = getDatasetClipArea(chart, meta);\n    if (target && line.points.length) {\n        clipArea(ctx, area);\n        doFill(ctx, {\n            line,\n            target,\n            above,\n            below,\n            area,\n            scale,\n            axis,\n            clip\n        });\n        unclipArea(ctx);\n    }\n}\nfunction doFill(ctx, cfg) {\n    const { line , target , above , below , area , scale , clip  } = cfg;\n    const property = line._loop ? 'angle' : cfg.axis;\n    ctx.save();\n    if (property === 'x' && below !== above) {\n        clipVertical(ctx, target, area.top);\n        fill(ctx, {\n            line,\n            target,\n            color: above,\n            scale,\n            property,\n            clip\n        });\n        ctx.restore();\n        ctx.save();\n        clipVertical(ctx, target, area.bottom);\n    }\n    fill(ctx, {\n        line,\n        target,\n        color: below,\n        scale,\n        property,\n        clip\n    });\n    ctx.restore();\n}\nfunction clipVertical(ctx, target, clipY) {\n    const { segments , points  } = target;\n    let first = true;\n    let lineLoop = false;\n    ctx.beginPath();\n    for (const segment of segments){\n        const { start , end  } = segment;\n        const firstPoint = points[start];\n        const lastPoint = points[_findSegmentEnd(start, end, points)];\n        if (first) {\n            ctx.moveTo(firstPoint.x, firstPoint.y);\n            first = false;\n        } else {\n            ctx.lineTo(firstPoint.x, clipY);\n            ctx.lineTo(firstPoint.x, firstPoint.y);\n        }\n        lineLoop = !!target.pathSegment(ctx, segment, {\n            move: lineLoop\n        });\n        if (lineLoop) {\n            ctx.closePath();\n        } else {\n            ctx.lineTo(lastPoint.x, clipY);\n        }\n    }\n    ctx.lineTo(target.first().x, clipY);\n    ctx.closePath();\n    ctx.clip();\n}\nfunction fill(ctx, cfg) {\n    const { line , target , property , color , scale , clip  } = cfg;\n    const segments = _segments(line, target, property);\n    for (const { source: src , target: tgt , start , end  } of segments){\n        const { style: { backgroundColor =color  } = {}  } = src;\n        const notShape = target !== true;\n        ctx.save();\n        ctx.fillStyle = backgroundColor;\n        clipBounds(ctx, scale, clip, notShape && _getBounds(property, start, end));\n        ctx.beginPath();\n        const lineLoop = !!line.pathSegment(ctx, src);\n        let loop;\n        if (notShape) {\n            if (lineLoop) {\n                ctx.closePath();\n            } else {\n                interpolatedLineTo(ctx, target, end, property);\n            }\n            const targetLoop = !!target.pathSegment(ctx, tgt, {\n                move: lineLoop,\n                reverse: true\n            });\n            loop = lineLoop && targetLoop;\n            if (!loop) {\n                interpolatedLineTo(ctx, target, start, property);\n            }\n        }\n        ctx.closePath();\n        ctx.fill(loop ? 'evenodd' : 'nonzero');\n        ctx.restore();\n    }\n}\nfunction clipBounds(ctx, scale, clip, bounds) {\n    const chartArea = scale.chart.chartArea;\n    const { property , start , end  } = bounds || {};\n    if (property === 'x' || property === 'y') {\n        let left, top, right, bottom;\n        if (property === 'x') {\n            left = start;\n            top = chartArea.top;\n            right = end;\n            bottom = chartArea.bottom;\n        } else {\n            left = chartArea.left;\n            top = start;\n            right = chartArea.right;\n            bottom = end;\n        }\n        ctx.beginPath();\n        if (clip) {\n            left = Math.max(left, clip.left);\n            right = Math.min(right, clip.right);\n            top = Math.max(top, clip.top);\n            bottom = Math.min(bottom, clip.bottom);\n        }\n        ctx.rect(left, top, right - left, bottom - top);\n        ctx.clip();\n    }\n}\nfunction interpolatedLineTo(ctx, target, point, property) {\n    const interpolatedPoint = target.interpolate(point, property);\n    if (interpolatedPoint) {\n        ctx.lineTo(interpolatedPoint.x, interpolatedPoint.y);\n    }\n}\n\nvar index = {\n    id: 'filler',\n    afterDatasetsUpdate (chart, _args, options) {\n        const count = (chart.data.datasets || []).length;\n        const sources = [];\n        let meta, i, line, source;\n        for(i = 0; i < count; ++i){\n            meta = chart.getDatasetMeta(i);\n            line = meta.dataset;\n            source = null;\n            if (line && line.options && line instanceof LineElement) {\n                source = {\n                    visible: chart.isDatasetVisible(i),\n                    index: i,\n                    fill: _decodeFill(line, i, count),\n                    chart,\n                    axis: meta.controller.options.indexAxis,\n                    scale: meta.vScale,\n                    line\n                };\n            }\n            meta.$filler = source;\n            sources.push(source);\n        }\n        for(i = 0; i < count; ++i){\n            source = sources[i];\n            if (!source || source.fill === false) {\n                continue;\n            }\n            source.fill = _resolveTarget(sources, i, options.propagate);\n        }\n    },\n    beforeDraw (chart, _args, options) {\n        const draw = options.drawTime === 'beforeDraw';\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        const area = chart.chartArea;\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (!source) {\n                continue;\n            }\n            source.line.updateControlPoints(area, source.axis);\n            if (draw && source.fill) {\n                _drawfill(chart.ctx, source, area);\n            }\n        }\n    },\n    beforeDatasetsDraw (chart, _args, options) {\n        if (options.drawTime !== 'beforeDatasetsDraw') {\n            return;\n        }\n        const metasets = chart.getSortedVisibleDatasetMetas();\n        for(let i = metasets.length - 1; i >= 0; --i){\n            const source = metasets[i].$filler;\n            if (_shouldApplyFill(source)) {\n                _drawfill(chart.ctx, source, chart.chartArea);\n            }\n        }\n    },\n    beforeDatasetDraw (chart, args, options) {\n        const source = args.meta.$filler;\n        if (!_shouldApplyFill(source) || options.drawTime !== 'beforeDatasetDraw') {\n            return;\n        }\n        _drawfill(chart.ctx, source, chart.chartArea);\n    },\n    defaults: {\n        propagate: true,\n        drawTime: 'beforeDatasetDraw'\n    }\n};\n\nconst getBoxSize = (labelOpts, fontSize)=>{\n    let { boxHeight =fontSize , boxWidth =fontSize  } = labelOpts;\n    if (labelOpts.usePointStyle) {\n        boxHeight = Math.min(boxHeight, fontSize);\n        boxWidth = labelOpts.pointStyleWidth || Math.min(boxWidth, fontSize);\n    }\n    return {\n        boxWidth,\n        boxHeight,\n        itemHeight: Math.max(fontSize, boxHeight)\n    };\n};\nconst itemsEqual = (a, b)=>a !== null && b !== null && a.datasetIndex === b.datasetIndex && a.index === b.index;\nclass Legend extends Element {\n constructor(config){\n        super();\n        this._added = false;\n        this.legendHitBoxes = [];\n this._hoveredItem = null;\n        this.doughnutMode = false;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this.legendItems = undefined;\n        this.columnSizes = undefined;\n        this.lineWidths = undefined;\n        this.maxHeight = undefined;\n        this.maxWidth = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this._margins = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight, margins) {\n        this.maxWidth = maxWidth;\n        this.maxHeight = maxHeight;\n        this._margins = margins;\n        this.setDimensions();\n        this.buildLabels();\n        this.fit();\n    }\n    setDimensions() {\n        if (this.isHorizontal()) {\n            this.width = this.maxWidth;\n            this.left = this._margins.left;\n            this.right = this.width;\n        } else {\n            this.height = this.maxHeight;\n            this.top = this._margins.top;\n            this.bottom = this.height;\n        }\n    }\n    buildLabels() {\n        const labelOpts = this.options.labels || {};\n        let legendItems = callback(labelOpts.generateLabels, [\n            this.chart\n        ], this) || [];\n        if (labelOpts.filter) {\n            legendItems = legendItems.filter((item)=>labelOpts.filter(item, this.chart.data));\n        }\n        if (labelOpts.sort) {\n            legendItems = legendItems.sort((a, b)=>labelOpts.sort(a, b, this.chart.data));\n        }\n        if (this.options.reverse) {\n            legendItems.reverse();\n        }\n        this.legendItems = legendItems;\n    }\n    fit() {\n        const { options , ctx  } = this;\n        if (!options.display) {\n            this.width = this.height = 0;\n            return;\n        }\n        const labelOpts = options.labels;\n        const labelFont = toFont(labelOpts.font);\n        const fontSize = labelFont.size;\n        const titleHeight = this._computeTitleHeight();\n        const { boxWidth , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        let width, height;\n        ctx.font = labelFont.string;\n        if (this.isHorizontal()) {\n            width = this.maxWidth;\n            height = this._fitRows(titleHeight, fontSize, boxWidth, itemHeight) + 10;\n        } else {\n            height = this.maxHeight;\n            width = this._fitCols(titleHeight, labelFont, boxWidth, itemHeight) + 10;\n        }\n        this.width = Math.min(width, options.maxWidth || this.maxWidth);\n        this.height = Math.min(height, options.maxHeight || this.maxHeight);\n    }\n _fitRows(titleHeight, fontSize, boxWidth, itemHeight) {\n        const { ctx , maxWidth , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const lineWidths = this.lineWidths = [\n            0\n        ];\n        const lineHeight = itemHeight + padding;\n        let totalHeight = titleHeight;\n        ctx.textAlign = 'left';\n        ctx.textBaseline = 'middle';\n        let row = -1;\n        let top = -lineHeight;\n        this.legendItems.forEach((legendItem, i)=>{\n            const itemWidth = boxWidth + fontSize / 2 + ctx.measureText(legendItem.text).width;\n            if (i === 0 || lineWidths[lineWidths.length - 1] + itemWidth + 2 * padding > maxWidth) {\n                totalHeight += lineHeight;\n                lineWidths[lineWidths.length - (i > 0 ? 0 : 1)] = 0;\n                top += lineHeight;\n                row++;\n            }\n            hitboxes[i] = {\n                left: 0,\n                top,\n                row,\n                width: itemWidth,\n                height: itemHeight\n            };\n            lineWidths[lineWidths.length - 1] += itemWidth + padding;\n        });\n        return totalHeight;\n    }\n    _fitCols(titleHeight, labelFont, boxWidth, _itemHeight) {\n        const { ctx , maxHeight , options: { labels: { padding  }  }  } = this;\n        const hitboxes = this.legendHitBoxes = [];\n        const columnSizes = this.columnSizes = [];\n        const heightLimit = maxHeight - titleHeight;\n        let totalWidth = padding;\n        let currentColWidth = 0;\n        let currentColHeight = 0;\n        let left = 0;\n        let col = 0;\n        this.legendItems.forEach((legendItem, i)=>{\n            const { itemWidth , itemHeight  } = calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight);\n            if (i > 0 && currentColHeight + itemHeight + 2 * padding > heightLimit) {\n                totalWidth += currentColWidth + padding;\n                columnSizes.push({\n                    width: currentColWidth,\n                    height: currentColHeight\n                });\n                left += currentColWidth + padding;\n                col++;\n                currentColWidth = currentColHeight = 0;\n            }\n            hitboxes[i] = {\n                left,\n                top: currentColHeight,\n                col,\n                width: itemWidth,\n                height: itemHeight\n            };\n            currentColWidth = Math.max(currentColWidth, itemWidth);\n            currentColHeight += itemHeight + padding;\n        });\n        totalWidth += currentColWidth;\n        columnSizes.push({\n            width: currentColWidth,\n            height: currentColHeight\n        });\n        return totalWidth;\n    }\n    adjustHitBoxes() {\n        if (!this.options.display) {\n            return;\n        }\n        const titleHeight = this._computeTitleHeight();\n        const { legendHitBoxes: hitboxes , options: { align , labels: { padding  } , rtl  }  } = this;\n        const rtlHelper = getRtlAdapter(rtl, this.left, this.width);\n        if (this.isHorizontal()) {\n            let row = 0;\n            let left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n            for (const hitbox of hitboxes){\n                if (row !== hitbox.row) {\n                    row = hitbox.row;\n                    left = _alignStartEnd(align, this.left + padding, this.right - this.lineWidths[row]);\n                }\n                hitbox.top += this.top + titleHeight + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(left), hitbox.width);\n                left += hitbox.width + padding;\n            }\n        } else {\n            let col = 0;\n            let top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n            for (const hitbox of hitboxes){\n                if (hitbox.col !== col) {\n                    col = hitbox.col;\n                    top = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - this.columnSizes[col].height);\n                }\n                hitbox.top = top;\n                hitbox.left += this.left + padding;\n                hitbox.left = rtlHelper.leftForLtr(rtlHelper.x(hitbox.left), hitbox.width);\n                top += hitbox.height + padding;\n            }\n        }\n    }\n    isHorizontal() {\n        return this.options.position === 'top' || this.options.position === 'bottom';\n    }\n    draw() {\n        if (this.options.display) {\n            const ctx = this.ctx;\n            clipArea(ctx, this);\n            this._draw();\n            unclipArea(ctx);\n        }\n    }\n _draw() {\n        const { options: opts , columnSizes , lineWidths , ctx  } = this;\n        const { align , labels: labelOpts  } = opts;\n        const defaultColor = defaults.color;\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const labelFont = toFont(labelOpts.font);\n        const { padding  } = labelOpts;\n        const fontSize = labelFont.size;\n        const halfFontSize = fontSize / 2;\n        let cursor;\n        this.drawTitle();\n        ctx.textAlign = rtlHelper.textAlign('left');\n        ctx.textBaseline = 'middle';\n        ctx.lineWidth = 0.5;\n        ctx.font = labelFont.string;\n        const { boxWidth , boxHeight , itemHeight  } = getBoxSize(labelOpts, fontSize);\n        const drawLegendBox = function(x, y, legendItem) {\n            if (isNaN(boxWidth) || boxWidth <= 0 || isNaN(boxHeight) || boxHeight < 0) {\n                return;\n            }\n            ctx.save();\n            const lineWidth = valueOrDefault(legendItem.lineWidth, 1);\n            ctx.fillStyle = valueOrDefault(legendItem.fillStyle, defaultColor);\n            ctx.lineCap = valueOrDefault(legendItem.lineCap, 'butt');\n            ctx.lineDashOffset = valueOrDefault(legendItem.lineDashOffset, 0);\n            ctx.lineJoin = valueOrDefault(legendItem.lineJoin, 'miter');\n            ctx.lineWidth = lineWidth;\n            ctx.strokeStyle = valueOrDefault(legendItem.strokeStyle, defaultColor);\n            ctx.setLineDash(valueOrDefault(legendItem.lineDash, []));\n            if (labelOpts.usePointStyle) {\n                const drawOptions = {\n                    radius: boxHeight * Math.SQRT2 / 2,\n                    pointStyle: legendItem.pointStyle,\n                    rotation: legendItem.rotation,\n                    borderWidth: lineWidth\n                };\n                const centerX = rtlHelper.xPlus(x, boxWidth / 2);\n                const centerY = y + halfFontSize;\n                drawPointLegend(ctx, drawOptions, centerX, centerY, labelOpts.pointStyleWidth && boxWidth);\n            } else {\n                const yBoxTop = y + Math.max((fontSize - boxHeight) / 2, 0);\n                const xBoxLeft = rtlHelper.leftForLtr(x, boxWidth);\n                const borderRadius = toTRBLCorners(legendItem.borderRadius);\n                ctx.beginPath();\n                if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                    addRoundedRectPath(ctx, {\n                        x: xBoxLeft,\n                        y: yBoxTop,\n                        w: boxWidth,\n                        h: boxHeight,\n                        radius: borderRadius\n                    });\n                } else {\n                    ctx.rect(xBoxLeft, yBoxTop, boxWidth, boxHeight);\n                }\n                ctx.fill();\n                if (lineWidth !== 0) {\n                    ctx.stroke();\n                }\n            }\n            ctx.restore();\n        };\n        const fillText = function(x, y, legendItem) {\n            renderText(ctx, legendItem.text, x, y + itemHeight / 2, labelFont, {\n                strikethrough: legendItem.hidden,\n                textAlign: rtlHelper.textAlign(legendItem.textAlign)\n            });\n        };\n        const isHorizontal = this.isHorizontal();\n        const titleHeight = this._computeTitleHeight();\n        if (isHorizontal) {\n            cursor = {\n                x: _alignStartEnd(align, this.left + padding, this.right - lineWidths[0]),\n                y: this.top + padding + titleHeight,\n                line: 0\n            };\n        } else {\n            cursor = {\n                x: this.left + padding,\n                y: _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[0].height),\n                line: 0\n            };\n        }\n        overrideTextDirection(this.ctx, opts.textDirection);\n        const lineHeight = itemHeight + padding;\n        this.legendItems.forEach((legendItem, i)=>{\n            ctx.strokeStyle = legendItem.fontColor;\n            ctx.fillStyle = legendItem.fontColor;\n            const textWidth = ctx.measureText(legendItem.text).width;\n            const textAlign = rtlHelper.textAlign(legendItem.textAlign || (legendItem.textAlign = labelOpts.textAlign));\n            const width = boxWidth + halfFontSize + textWidth;\n            let x = cursor.x;\n            let y = cursor.y;\n            rtlHelper.setWidth(this.width);\n            if (isHorizontal) {\n                if (i > 0 && x + width + padding > this.right) {\n                    y = cursor.y += lineHeight;\n                    cursor.line++;\n                    x = cursor.x = _alignStartEnd(align, this.left + padding, this.right - lineWidths[cursor.line]);\n                }\n            } else if (i > 0 && y + lineHeight > this.bottom) {\n                x = cursor.x = x + columnSizes[cursor.line].width + padding;\n                cursor.line++;\n                y = cursor.y = _alignStartEnd(align, this.top + titleHeight + padding, this.bottom - columnSizes[cursor.line].height);\n            }\n            const realX = rtlHelper.x(x);\n            drawLegendBox(realX, y, legendItem);\n            x = _textX(textAlign, x + boxWidth + halfFontSize, isHorizontal ? x + width : this.right, opts.rtl);\n            fillText(rtlHelper.x(x), y, legendItem);\n            if (isHorizontal) {\n                cursor.x += width + padding;\n            } else if (typeof legendItem.text !== 'string') {\n                const fontLineHeight = labelFont.lineHeight;\n                cursor.y += calculateLegendItemHeight(legendItem, fontLineHeight) + padding;\n            } else {\n                cursor.y += lineHeight;\n            }\n        });\n        restoreTextDirection(this.ctx, opts.textDirection);\n    }\n drawTitle() {\n        const opts = this.options;\n        const titleOpts = opts.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        if (!titleOpts.display) {\n            return;\n        }\n        const rtlHelper = getRtlAdapter(opts.rtl, this.left, this.width);\n        const ctx = this.ctx;\n        const position = titleOpts.position;\n        const halfFontSize = titleFont.size / 2;\n        const topPaddingPlusHalfFontSize = titlePadding.top + halfFontSize;\n        let y;\n        let left = this.left;\n        let maxWidth = this.width;\n        if (this.isHorizontal()) {\n            maxWidth = Math.max(...this.lineWidths);\n            y = this.top + topPaddingPlusHalfFontSize;\n            left = _alignStartEnd(opts.align, left, this.right - maxWidth);\n        } else {\n            const maxHeight = this.columnSizes.reduce((acc, size)=>Math.max(acc, size.height), 0);\n            y = topPaddingPlusHalfFontSize + _alignStartEnd(opts.align, this.top, this.bottom - maxHeight - opts.labels.padding - this._computeTitleHeight());\n        }\n        const x = _alignStartEnd(position, left, left + maxWidth);\n        ctx.textAlign = rtlHelper.textAlign(_toLeftRightCenter(position));\n        ctx.textBaseline = 'middle';\n        ctx.strokeStyle = titleOpts.color;\n        ctx.fillStyle = titleOpts.color;\n        ctx.font = titleFont.string;\n        renderText(ctx, titleOpts.text, x, y, titleFont);\n    }\n _computeTitleHeight() {\n        const titleOpts = this.options.title;\n        const titleFont = toFont(titleOpts.font);\n        const titlePadding = toPadding(titleOpts.padding);\n        return titleOpts.display ? titleFont.lineHeight + titlePadding.height : 0;\n    }\n _getLegendItemAt(x, y) {\n        let i, hitBox, lh;\n        if (_isBetween(x, this.left, this.right) && _isBetween(y, this.top, this.bottom)) {\n            lh = this.legendHitBoxes;\n            for(i = 0; i < lh.length; ++i){\n                hitBox = lh[i];\n                if (_isBetween(x, hitBox.left, hitBox.left + hitBox.width) && _isBetween(y, hitBox.top, hitBox.top + hitBox.height)) {\n                    return this.legendItems[i];\n                }\n            }\n        }\n        return null;\n    }\n handleEvent(e) {\n        const opts = this.options;\n        if (!isListened(e.type, opts)) {\n            return;\n        }\n        const hoveredItem = this._getLegendItemAt(e.x, e.y);\n        if (e.type === 'mousemove' || e.type === 'mouseout') {\n            const previous = this._hoveredItem;\n            const sameItem = itemsEqual(previous, hoveredItem);\n            if (previous && !sameItem) {\n                callback(opts.onLeave, [\n                    e,\n                    previous,\n                    this\n                ], this);\n            }\n            this._hoveredItem = hoveredItem;\n            if (hoveredItem && !sameItem) {\n                callback(opts.onHover, [\n                    e,\n                    hoveredItem,\n                    this\n                ], this);\n            }\n        } else if (hoveredItem) {\n            callback(opts.onClick, [\n                e,\n                hoveredItem,\n                this\n            ], this);\n        }\n    }\n}\nfunction calculateItemSize(boxWidth, labelFont, ctx, legendItem, _itemHeight) {\n    const itemWidth = calculateItemWidth(legendItem, boxWidth, labelFont, ctx);\n    const itemHeight = calculateItemHeight(_itemHeight, legendItem, labelFont.lineHeight);\n    return {\n        itemWidth,\n        itemHeight\n    };\n}\nfunction calculateItemWidth(legendItem, boxWidth, labelFont, ctx) {\n    let legendItemText = legendItem.text;\n    if (legendItemText && typeof legendItemText !== 'string') {\n        legendItemText = legendItemText.reduce((a, b)=>a.length > b.length ? a : b);\n    }\n    return boxWidth + labelFont.size / 2 + ctx.measureText(legendItemText).width;\n}\nfunction calculateItemHeight(_itemHeight, legendItem, fontLineHeight) {\n    let itemHeight = _itemHeight;\n    if (typeof legendItem.text !== 'string') {\n        itemHeight = calculateLegendItemHeight(legendItem, fontLineHeight);\n    }\n    return itemHeight;\n}\nfunction calculateLegendItemHeight(legendItem, fontLineHeight) {\n    const labelHeight = legendItem.text ? legendItem.text.length : 0;\n    return fontLineHeight * labelHeight;\n}\nfunction isListened(type, opts) {\n    if ((type === 'mousemove' || type === 'mouseout') && (opts.onHover || opts.onLeave)) {\n        return true;\n    }\n    if (opts.onClick && (type === 'click' || type === 'mouseup')) {\n        return true;\n    }\n    return false;\n}\nvar plugin_legend = {\n    id: 'legend',\n _element: Legend,\n    start (chart, _args, options) {\n        const legend = chart.legend = new Legend({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, legend, options);\n        layouts.addBox(chart, legend);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, chart.legend);\n        delete chart.legend;\n    },\n    beforeUpdate (chart, _args, options) {\n        const legend = chart.legend;\n        layouts.configure(chart, legend, options);\n        legend.options = options;\n    },\n    afterUpdate (chart) {\n        const legend = chart.legend;\n        legend.buildLabels();\n        legend.adjustHitBoxes();\n    },\n    afterEvent (chart, args) {\n        if (!args.replay) {\n            chart.legend.handleEvent(args.event);\n        }\n    },\n    defaults: {\n        display: true,\n        position: 'top',\n        align: 'center',\n        fullSize: true,\n        reverse: false,\n        weight: 1000,\n        onClick (e, legendItem, legend) {\n            const index = legendItem.datasetIndex;\n            const ci = legend.chart;\n            if (ci.isDatasetVisible(index)) {\n                ci.hide(index);\n                legendItem.hidden = true;\n            } else {\n                ci.show(index);\n                legendItem.hidden = false;\n            }\n        },\n        onHover: null,\n        onLeave: null,\n        labels: {\n            color: (ctx)=>ctx.chart.options.color,\n            boxWidth: 40,\n            padding: 10,\n            generateLabels (chart) {\n                const datasets = chart.data.datasets;\n                const { labels: { usePointStyle , pointStyle , textAlign , color , useBorderRadius , borderRadius  }  } = chart.legend.options;\n                return chart._getSortedDatasetMetas().map((meta)=>{\n                    const style = meta.controller.getStyle(usePointStyle ? 0 : undefined);\n                    const borderWidth = toPadding(style.borderWidth);\n                    return {\n                        text: datasets[meta.index].label,\n                        fillStyle: style.backgroundColor,\n                        fontColor: color,\n                        hidden: !meta.visible,\n                        lineCap: style.borderCapStyle,\n                        lineDash: style.borderDash,\n                        lineDashOffset: style.borderDashOffset,\n                        lineJoin: style.borderJoinStyle,\n                        lineWidth: (borderWidth.width + borderWidth.height) / 4,\n                        strokeStyle: style.borderColor,\n                        pointStyle: pointStyle || style.pointStyle,\n                        rotation: style.rotation,\n                        textAlign: textAlign || style.textAlign,\n                        borderRadius: useBorderRadius && (borderRadius || style.borderRadius),\n                        datasetIndex: meta.index\n                    };\n                }, this);\n            }\n        },\n        title: {\n            color: (ctx)=>ctx.chart.options.color,\n            display: false,\n            position: 'center',\n            text: ''\n        }\n    },\n    descriptors: {\n        _scriptable: (name)=>!name.startsWith('on'),\n        labels: {\n            _scriptable: (name)=>![\n                    'generateLabels',\n                    'filter',\n                    'sort'\n                ].includes(name)\n        }\n    }\n};\n\nclass Title extends Element {\n constructor(config){\n        super();\n        this.chart = config.chart;\n        this.options = config.options;\n        this.ctx = config.ctx;\n        this._padding = undefined;\n        this.top = undefined;\n        this.bottom = undefined;\n        this.left = undefined;\n        this.right = undefined;\n        this.width = undefined;\n        this.height = undefined;\n        this.position = undefined;\n        this.weight = undefined;\n        this.fullSize = undefined;\n    }\n    update(maxWidth, maxHeight) {\n        const opts = this.options;\n        this.left = 0;\n        this.top = 0;\n        if (!opts.display) {\n            this.width = this.height = this.right = this.bottom = 0;\n            return;\n        }\n        this.width = this.right = maxWidth;\n        this.height = this.bottom = maxHeight;\n        const lineCount = isArray(opts.text) ? opts.text.length : 1;\n        this._padding = toPadding(opts.padding);\n        const textSize = lineCount * toFont(opts.font).lineHeight + this._padding.height;\n        if (this.isHorizontal()) {\n            this.height = textSize;\n        } else {\n            this.width = textSize;\n        }\n    }\n    isHorizontal() {\n        const pos = this.options.position;\n        return pos === 'top' || pos === 'bottom';\n    }\n    _drawArgs(offset) {\n        const { top , left , bottom , right , options  } = this;\n        const align = options.align;\n        let rotation = 0;\n        let maxWidth, titleX, titleY;\n        if (this.isHorizontal()) {\n            titleX = _alignStartEnd(align, left, right);\n            titleY = top + offset;\n            maxWidth = right - left;\n        } else {\n            if (options.position === 'left') {\n                titleX = left + offset;\n                titleY = _alignStartEnd(align, bottom, top);\n                rotation = PI * -0.5;\n            } else {\n                titleX = right - offset;\n                titleY = _alignStartEnd(align, top, bottom);\n                rotation = PI * 0.5;\n            }\n            maxWidth = bottom - top;\n        }\n        return {\n            titleX,\n            titleY,\n            maxWidth,\n            rotation\n        };\n    }\n    draw() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        if (!opts.display) {\n            return;\n        }\n        const fontOpts = toFont(opts.font);\n        const lineHeight = fontOpts.lineHeight;\n        const offset = lineHeight / 2 + this._padding.top;\n        const { titleX , titleY , maxWidth , rotation  } = this._drawArgs(offset);\n        renderText(ctx, opts.text, 0, 0, fontOpts, {\n            color: opts.color,\n            maxWidth,\n            rotation,\n            textAlign: _toLeftRightCenter(opts.align),\n            textBaseline: 'middle',\n            translation: [\n                titleX,\n                titleY\n            ]\n        });\n    }\n}\nfunction createTitle(chart, titleOpts) {\n    const title = new Title({\n        ctx: chart.ctx,\n        options: titleOpts,\n        chart\n    });\n    layouts.configure(chart, title, titleOpts);\n    layouts.addBox(chart, title);\n    chart.titleBlock = title;\n}\nvar plugin_title = {\n    id: 'title',\n _element: Title,\n    start (chart, _args, options) {\n        createTitle(chart, options);\n    },\n    stop (chart) {\n        const titleBlock = chart.titleBlock;\n        layouts.removeBox(chart, titleBlock);\n        delete chart.titleBlock;\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = chart.titleBlock;\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'bold'\n        },\n        fullSize: true,\n        padding: 10,\n        position: 'top',\n        text: '',\n        weight: 2000\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst map = new WeakMap();\nvar plugin_subtitle = {\n    id: 'subtitle',\n    start (chart, _args, options) {\n        const title = new Title({\n            ctx: chart.ctx,\n            options,\n            chart\n        });\n        layouts.configure(chart, title, options);\n        layouts.addBox(chart, title);\n        map.set(chart, title);\n    },\n    stop (chart) {\n        layouts.removeBox(chart, map.get(chart));\n        map.delete(chart);\n    },\n    beforeUpdate (chart, _args, options) {\n        const title = map.get(chart);\n        layouts.configure(chart, title, options);\n        title.options = options;\n    },\n    defaults: {\n        align: 'center',\n        display: false,\n        font: {\n            weight: 'normal'\n        },\n        fullSize: true,\n        padding: 0,\n        position: 'top',\n        text: '',\n        weight: 1500\n    },\n    defaultRoutes: {\n        color: 'color'\n    },\n    descriptors: {\n        _scriptable: true,\n        _indexable: false\n    }\n};\n\nconst positioners = {\n average (items) {\n        if (!items.length) {\n            return false;\n        }\n        let i, len;\n        let xSet = new Set();\n        let y = 0;\n        let count = 0;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const pos = el.tooltipPosition();\n                xSet.add(pos.x);\n                y += pos.y;\n                ++count;\n            }\n        }\n        if (count === 0 || xSet.size === 0) {\n            return false;\n        }\n        const xAverage = [\n            ...xSet\n        ].reduce((a, b)=>a + b) / xSet.size;\n        return {\n            x: xAverage,\n            y: y / count\n        };\n    },\n nearest (items, eventPosition) {\n        if (!items.length) {\n            return false;\n        }\n        let x = eventPosition.x;\n        let y = eventPosition.y;\n        let minDistance = Number.POSITIVE_INFINITY;\n        let i, len, nearestElement;\n        for(i = 0, len = items.length; i < len; ++i){\n            const el = items[i].element;\n            if (el && el.hasValue()) {\n                const center = el.getCenterPoint();\n                const d = distanceBetweenPoints(eventPosition, center);\n                if (d < minDistance) {\n                    minDistance = d;\n                    nearestElement = el;\n                }\n            }\n        }\n        if (nearestElement) {\n            const tp = nearestElement.tooltipPosition();\n            x = tp.x;\n            y = tp.y;\n        }\n        return {\n            x,\n            y\n        };\n    }\n};\nfunction pushOrConcat(base, toPush) {\n    if (toPush) {\n        if (isArray(toPush)) {\n            Array.prototype.push.apply(base, toPush);\n        } else {\n            base.push(toPush);\n        }\n    }\n    return base;\n}\n function splitNewlines(str) {\n    if ((typeof str === 'string' || str instanceof String) && str.indexOf('\\n') > -1) {\n        return str.split('\\n');\n    }\n    return str;\n}\n function createTooltipItem(chart, item) {\n    const { element , datasetIndex , index  } = item;\n    const controller = chart.getDatasetMeta(datasetIndex).controller;\n    const { label , value  } = controller.getLabelAndValue(index);\n    return {\n        chart,\n        label,\n        parsed: controller.getParsed(index),\n        raw: chart.data.datasets[datasetIndex].data[index],\n        formattedValue: value,\n        dataset: controller.getDataset(),\n        dataIndex: index,\n        datasetIndex,\n        element\n    };\n}\n function getTooltipSize(tooltip, options) {\n    const ctx = tooltip.chart.ctx;\n    const { body , footer , title  } = tooltip;\n    const { boxWidth , boxHeight  } = options;\n    const bodyFont = toFont(options.bodyFont);\n    const titleFont = toFont(options.titleFont);\n    const footerFont = toFont(options.footerFont);\n    const titleLineCount = title.length;\n    const footerLineCount = footer.length;\n    const bodyLineItemCount = body.length;\n    const padding = toPadding(options.padding);\n    let height = padding.height;\n    let width = 0;\n    let combinedBodyLength = body.reduce((count, bodyItem)=>count + bodyItem.before.length + bodyItem.lines.length + bodyItem.after.length, 0);\n    combinedBodyLength += tooltip.beforeBody.length + tooltip.afterBody.length;\n    if (titleLineCount) {\n        height += titleLineCount * titleFont.lineHeight + (titleLineCount - 1) * options.titleSpacing + options.titleMarginBottom;\n    }\n    if (combinedBodyLength) {\n        const bodyLineHeight = options.displayColors ? Math.max(boxHeight, bodyFont.lineHeight) : bodyFont.lineHeight;\n        height += bodyLineItemCount * bodyLineHeight + (combinedBodyLength - bodyLineItemCount) * bodyFont.lineHeight + (combinedBodyLength - 1) * options.bodySpacing;\n    }\n    if (footerLineCount) {\n        height += options.footerMarginTop + footerLineCount * footerFont.lineHeight + (footerLineCount - 1) * options.footerSpacing;\n    }\n    let widthPadding = 0;\n    const maxLineWidth = function(line) {\n        width = Math.max(width, ctx.measureText(line).width + widthPadding);\n    };\n    ctx.save();\n    ctx.font = titleFont.string;\n    each(tooltip.title, maxLineWidth);\n    ctx.font = bodyFont.string;\n    each(tooltip.beforeBody.concat(tooltip.afterBody), maxLineWidth);\n    widthPadding = options.displayColors ? boxWidth + 2 + options.boxPadding : 0;\n    each(body, (bodyItem)=>{\n        each(bodyItem.before, maxLineWidth);\n        each(bodyItem.lines, maxLineWidth);\n        each(bodyItem.after, maxLineWidth);\n    });\n    widthPadding = 0;\n    ctx.font = footerFont.string;\n    each(tooltip.footer, maxLineWidth);\n    ctx.restore();\n    width += padding.width;\n    return {\n        width,\n        height\n    };\n}\nfunction determineYAlign(chart, size) {\n    const { y , height  } = size;\n    if (y < height / 2) {\n        return 'top';\n    } else if (y > chart.height - height / 2) {\n        return 'bottom';\n    }\n    return 'center';\n}\nfunction doesNotFitWithAlign(xAlign, chart, options, size) {\n    const { x , width  } = size;\n    const caret = options.caretSize + options.caretPadding;\n    if (xAlign === 'left' && x + width + caret > chart.width) {\n        return true;\n    }\n    if (xAlign === 'right' && x - width - caret < 0) {\n        return true;\n    }\n}\nfunction determineXAlign(chart, options, size, yAlign) {\n    const { x , width  } = size;\n    const { width: chartWidth , chartArea: { left , right  }  } = chart;\n    let xAlign = 'center';\n    if (yAlign === 'center') {\n        xAlign = x <= (left + right) / 2 ? 'left' : 'right';\n    } else if (x <= width / 2) {\n        xAlign = 'left';\n    } else if (x >= chartWidth - width / 2) {\n        xAlign = 'right';\n    }\n    if (doesNotFitWithAlign(xAlign, chart, options, size)) {\n        xAlign = 'center';\n    }\n    return xAlign;\n}\n function determineAlignment(chart, options, size) {\n    const yAlign = size.yAlign || options.yAlign || determineYAlign(chart, size);\n    return {\n        xAlign: size.xAlign || options.xAlign || determineXAlign(chart, options, size, yAlign),\n        yAlign\n    };\n}\nfunction alignX(size, xAlign) {\n    let { x , width  } = size;\n    if (xAlign === 'right') {\n        x -= width;\n    } else if (xAlign === 'center') {\n        x -= width / 2;\n    }\n    return x;\n}\nfunction alignY(size, yAlign, paddingAndSize) {\n    let { y , height  } = size;\n    if (yAlign === 'top') {\n        y += paddingAndSize;\n    } else if (yAlign === 'bottom') {\n        y -= height + paddingAndSize;\n    } else {\n        y -= height / 2;\n    }\n    return y;\n}\n function getBackgroundPoint(options, size, alignment, chart) {\n    const { caretSize , caretPadding , cornerRadius  } = options;\n    const { xAlign , yAlign  } = alignment;\n    const paddingAndSize = caretSize + caretPadding;\n    const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n    let x = alignX(size, xAlign);\n    const y = alignY(size, yAlign, paddingAndSize);\n    if (yAlign === 'center') {\n        if (xAlign === 'left') {\n            x += paddingAndSize;\n        } else if (xAlign === 'right') {\n            x -= paddingAndSize;\n        }\n    } else if (xAlign === 'left') {\n        x -= Math.max(topLeft, bottomLeft) + caretSize;\n    } else if (xAlign === 'right') {\n        x += Math.max(topRight, bottomRight) + caretSize;\n    }\n    return {\n        x: _limitValue(x, 0, chart.width - size.width),\n        y: _limitValue(y, 0, chart.height - size.height)\n    };\n}\nfunction getAlignedX(tooltip, align, options) {\n    const padding = toPadding(options.padding);\n    return align === 'center' ? tooltip.x + tooltip.width / 2 : align === 'right' ? tooltip.x + tooltip.width - padding.right : tooltip.x + padding.left;\n}\n function getBeforeAfterBodyLines(callback) {\n    return pushOrConcat([], splitNewlines(callback));\n}\nfunction createTooltipContext(parent, tooltip, tooltipItems) {\n    return createContext(parent, {\n        tooltip,\n        tooltipItems,\n        type: 'tooltip'\n    });\n}\nfunction overrideCallbacks(callbacks, context) {\n    const override = context && context.dataset && context.dataset.tooltip && context.dataset.tooltip.callbacks;\n    return override ? callbacks.override(override) : callbacks;\n}\nconst defaultCallbacks = {\n    beforeTitle: noop,\n    title (tooltipItems) {\n        if (tooltipItems.length > 0) {\n            const item = tooltipItems[0];\n            const labels = item.chart.data.labels;\n            const labelCount = labels ? labels.length : 0;\n            if (this && this.options && this.options.mode === 'dataset') {\n                return item.dataset.label || '';\n            } else if (item.label) {\n                return item.label;\n            } else if (labelCount > 0 && item.dataIndex < labelCount) {\n                return labels[item.dataIndex];\n            }\n        }\n        return '';\n    },\n    afterTitle: noop,\n    beforeBody: noop,\n    beforeLabel: noop,\n    label (tooltipItem) {\n        if (this && this.options && this.options.mode === 'dataset') {\n            return tooltipItem.label + ': ' + tooltipItem.formattedValue || tooltipItem.formattedValue;\n        }\n        let label = tooltipItem.dataset.label || '';\n        if (label) {\n            label += ': ';\n        }\n        const value = tooltipItem.formattedValue;\n        if (!isNullOrUndef(value)) {\n            label += value;\n        }\n        return label;\n    },\n    labelColor (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            borderColor: options.borderColor,\n            backgroundColor: options.backgroundColor,\n            borderWidth: options.borderWidth,\n            borderDash: options.borderDash,\n            borderDashOffset: options.borderDashOffset,\n            borderRadius: 0\n        };\n    },\n    labelTextColor () {\n        return this.options.bodyColor;\n    },\n    labelPointStyle (tooltipItem) {\n        const meta = tooltipItem.chart.getDatasetMeta(tooltipItem.datasetIndex);\n        const options = meta.controller.getStyle(tooltipItem.dataIndex);\n        return {\n            pointStyle: options.pointStyle,\n            rotation: options.rotation\n        };\n    },\n    afterLabel: noop,\n    afterBody: noop,\n    beforeFooter: noop,\n    footer: noop,\n    afterFooter: noop\n};\n function invokeCallbackWithFallback(callbacks, name, ctx, arg) {\n    const result = callbacks[name].call(ctx, arg);\n    if (typeof result === 'undefined') {\n        return defaultCallbacks[name].call(ctx, arg);\n    }\n    return result;\n}\nclass Tooltip extends Element {\n static positioners = positioners;\n    constructor(config){\n        super();\n        this.opacity = 0;\n        this._active = [];\n        this._eventPosition = undefined;\n        this._size = undefined;\n        this._cachedAnimations = undefined;\n        this._tooltipItems = [];\n        this.$animations = undefined;\n        this.$context = undefined;\n        this.chart = config.chart;\n        this.options = config.options;\n        this.dataPoints = undefined;\n        this.title = undefined;\n        this.beforeBody = undefined;\n        this.body = undefined;\n        this.afterBody = undefined;\n        this.footer = undefined;\n        this.xAlign = undefined;\n        this.yAlign = undefined;\n        this.x = undefined;\n        this.y = undefined;\n        this.height = undefined;\n        this.width = undefined;\n        this.caretX = undefined;\n        this.caretY = undefined;\n        this.labelColors = undefined;\n        this.labelPointStyles = undefined;\n        this.labelTextColors = undefined;\n    }\n    initialize(options) {\n        this.options = options;\n        this._cachedAnimations = undefined;\n        this.$context = undefined;\n    }\n _resolveAnimations() {\n        const cached = this._cachedAnimations;\n        if (cached) {\n            return cached;\n        }\n        const chart = this.chart;\n        const options = this.options.setContext(this.getContext());\n        const opts = options.enabled && chart.options.animation && options.animations;\n        const animations = new Animations(this.chart, opts);\n        if (opts._cacheable) {\n            this._cachedAnimations = Object.freeze(animations);\n        }\n        return animations;\n    }\n getContext() {\n        return this.$context || (this.$context = createTooltipContext(this.chart.getContext(), this, this._tooltipItems));\n    }\n    getTitle(context, options) {\n        const { callbacks  } = options;\n        const beforeTitle = invokeCallbackWithFallback(callbacks, 'beforeTitle', this, context);\n        const title = invokeCallbackWithFallback(callbacks, 'title', this, context);\n        const afterTitle = invokeCallbackWithFallback(callbacks, 'afterTitle', this, context);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeTitle));\n        lines = pushOrConcat(lines, splitNewlines(title));\n        lines = pushOrConcat(lines, splitNewlines(afterTitle));\n        return lines;\n    }\n    getBeforeBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'beforeBody', this, tooltipItems));\n    }\n    getBody(tooltipItems, options) {\n        const { callbacks  } = options;\n        const bodyItems = [];\n        each(tooltipItems, (context)=>{\n            const bodyItem = {\n                before: [],\n                lines: [],\n                after: []\n            };\n            const scoped = overrideCallbacks(callbacks, context);\n            pushOrConcat(bodyItem.before, splitNewlines(invokeCallbackWithFallback(scoped, 'beforeLabel', this, context)));\n            pushOrConcat(bodyItem.lines, invokeCallbackWithFallback(scoped, 'label', this, context));\n            pushOrConcat(bodyItem.after, splitNewlines(invokeCallbackWithFallback(scoped, 'afterLabel', this, context)));\n            bodyItems.push(bodyItem);\n        });\n        return bodyItems;\n    }\n    getAfterBody(tooltipItems, options) {\n        return getBeforeAfterBodyLines(invokeCallbackWithFallback(options.callbacks, 'afterBody', this, tooltipItems));\n    }\n    getFooter(tooltipItems, options) {\n        const { callbacks  } = options;\n        const beforeFooter = invokeCallbackWithFallback(callbacks, 'beforeFooter', this, tooltipItems);\n        const footer = invokeCallbackWithFallback(callbacks, 'footer', this, tooltipItems);\n        const afterFooter = invokeCallbackWithFallback(callbacks, 'afterFooter', this, tooltipItems);\n        let lines = [];\n        lines = pushOrConcat(lines, splitNewlines(beforeFooter));\n        lines = pushOrConcat(lines, splitNewlines(footer));\n        lines = pushOrConcat(lines, splitNewlines(afterFooter));\n        return lines;\n    }\n _createItems(options) {\n        const active = this._active;\n        const data = this.chart.data;\n        const labelColors = [];\n        const labelPointStyles = [];\n        const labelTextColors = [];\n        let tooltipItems = [];\n        let i, len;\n        for(i = 0, len = active.length; i < len; ++i){\n            tooltipItems.push(createTooltipItem(this.chart, active[i]));\n        }\n        if (options.filter) {\n            tooltipItems = tooltipItems.filter((element, index, array)=>options.filter(element, index, array, data));\n        }\n        if (options.itemSort) {\n            tooltipItems = tooltipItems.sort((a, b)=>options.itemSort(a, b, data));\n        }\n        each(tooltipItems, (context)=>{\n            const scoped = overrideCallbacks(options.callbacks, context);\n            labelColors.push(invokeCallbackWithFallback(scoped, 'labelColor', this, context));\n            labelPointStyles.push(invokeCallbackWithFallback(scoped, 'labelPointStyle', this, context));\n            labelTextColors.push(invokeCallbackWithFallback(scoped, 'labelTextColor', this, context));\n        });\n        this.labelColors = labelColors;\n        this.labelPointStyles = labelPointStyles;\n        this.labelTextColors = labelTextColors;\n        this.dataPoints = tooltipItems;\n        return tooltipItems;\n    }\n    update(changed, replay) {\n        const options = this.options.setContext(this.getContext());\n        const active = this._active;\n        let properties;\n        let tooltipItems = [];\n        if (!active.length) {\n            if (this.opacity !== 0) {\n                properties = {\n                    opacity: 0\n                };\n            }\n        } else {\n            const position = positioners[options.position].call(this, active, this._eventPosition);\n            tooltipItems = this._createItems(options);\n            this.title = this.getTitle(tooltipItems, options);\n            this.beforeBody = this.getBeforeBody(tooltipItems, options);\n            this.body = this.getBody(tooltipItems, options);\n            this.afterBody = this.getAfterBody(tooltipItems, options);\n            this.footer = this.getFooter(tooltipItems, options);\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, size);\n            const alignment = determineAlignment(this.chart, options, positionAndSize);\n            const backgroundPoint = getBackgroundPoint(options, positionAndSize, alignment, this.chart);\n            this.xAlign = alignment.xAlign;\n            this.yAlign = alignment.yAlign;\n            properties = {\n                opacity: 1,\n                x: backgroundPoint.x,\n                y: backgroundPoint.y,\n                width: size.width,\n                height: size.height,\n                caretX: position.x,\n                caretY: position.y\n            };\n        }\n        this._tooltipItems = tooltipItems;\n        this.$context = undefined;\n        if (properties) {\n            this._resolveAnimations().update(this, properties);\n        }\n        if (changed && options.external) {\n            options.external.call(this, {\n                chart: this.chart,\n                tooltip: this,\n                replay\n            });\n        }\n    }\n    drawCaret(tooltipPoint, ctx, size, options) {\n        const caretPosition = this.getCaretPosition(tooltipPoint, size, options);\n        ctx.lineTo(caretPosition.x1, caretPosition.y1);\n        ctx.lineTo(caretPosition.x2, caretPosition.y2);\n        ctx.lineTo(caretPosition.x3, caretPosition.y3);\n    }\n    getCaretPosition(tooltipPoint, size, options) {\n        const { xAlign , yAlign  } = this;\n        const { caretSize , cornerRadius  } = options;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(cornerRadius);\n        const { x: ptX , y: ptY  } = tooltipPoint;\n        const { width , height  } = size;\n        let x1, x2, x3, y1, y2, y3;\n        if (yAlign === 'center') {\n            y2 = ptY + height / 2;\n            if (xAlign === 'left') {\n                x1 = ptX;\n                x2 = x1 - caretSize;\n                y1 = y2 + caretSize;\n                y3 = y2 - caretSize;\n            } else {\n                x1 = ptX + width;\n                x2 = x1 + caretSize;\n                y1 = y2 - caretSize;\n                y3 = y2 + caretSize;\n            }\n            x3 = x1;\n        } else {\n            if (xAlign === 'left') {\n                x2 = ptX + Math.max(topLeft, bottomLeft) + caretSize;\n            } else if (xAlign === 'right') {\n                x2 = ptX + width - Math.max(topRight, bottomRight) - caretSize;\n            } else {\n                x2 = this.caretX;\n            }\n            if (yAlign === 'top') {\n                y1 = ptY;\n                y2 = y1 - caretSize;\n                x1 = x2 - caretSize;\n                x3 = x2 + caretSize;\n            } else {\n                y1 = ptY + height;\n                y2 = y1 + caretSize;\n                x1 = x2 + caretSize;\n                x3 = x2 - caretSize;\n            }\n            y3 = y1;\n        }\n        return {\n            x1,\n            x2,\n            x3,\n            y1,\n            y2,\n            y3\n        };\n    }\n    drawTitle(pt, ctx, options) {\n        const title = this.title;\n        const length = title.length;\n        let titleFont, titleSpacing, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.titleAlign, options);\n            ctx.textAlign = rtlHelper.textAlign(options.titleAlign);\n            ctx.textBaseline = 'middle';\n            titleFont = toFont(options.titleFont);\n            titleSpacing = options.titleSpacing;\n            ctx.fillStyle = options.titleColor;\n            ctx.font = titleFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(title[i], rtlHelper.x(pt.x), pt.y + titleFont.lineHeight / 2);\n                pt.y += titleFont.lineHeight + titleSpacing;\n                if (i + 1 === length) {\n                    pt.y += options.titleMarginBottom - titleSpacing;\n                }\n            }\n        }\n    }\n _drawColorBox(ctx, pt, i, rtlHelper, options) {\n        const labelColor = this.labelColors[i];\n        const labelPointStyle = this.labelPointStyles[i];\n        const { boxHeight , boxWidth  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        const colorX = getAlignedX(this, 'left', options);\n        const rtlColorX = rtlHelper.x(colorX);\n        const yOffSet = boxHeight < bodyFont.lineHeight ? (bodyFont.lineHeight - boxHeight) / 2 : 0;\n        const colorY = pt.y + yOffSet;\n        if (options.usePointStyle) {\n            const drawOptions = {\n                radius: Math.min(boxWidth, boxHeight) / 2,\n                pointStyle: labelPointStyle.pointStyle,\n                rotation: labelPointStyle.rotation,\n                borderWidth: 1\n            };\n            const centerX = rtlHelper.leftForLtr(rtlColorX, boxWidth) + boxWidth / 2;\n            const centerY = colorY + boxHeight / 2;\n            ctx.strokeStyle = options.multiKeyBackground;\n            ctx.fillStyle = options.multiKeyBackground;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.fillStyle = labelColor.backgroundColor;\n            drawPoint(ctx, drawOptions, centerX, centerY);\n        } else {\n            ctx.lineWidth = isObject(labelColor.borderWidth) ? Math.max(...Object.values(labelColor.borderWidth)) : labelColor.borderWidth || 1;\n            ctx.strokeStyle = labelColor.borderColor;\n            ctx.setLineDash(labelColor.borderDash || []);\n            ctx.lineDashOffset = labelColor.borderDashOffset || 0;\n            const outerX = rtlHelper.leftForLtr(rtlColorX, boxWidth);\n            const innerX = rtlHelper.leftForLtr(rtlHelper.xPlus(rtlColorX, 1), boxWidth - 2);\n            const borderRadius = toTRBLCorners(labelColor.borderRadius);\n            if (Object.values(borderRadius).some((v)=>v !== 0)) {\n                ctx.beginPath();\n                ctx.fillStyle = options.multiKeyBackground;\n                addRoundedRectPath(ctx, {\n                    x: outerX,\n                    y: colorY,\n                    w: boxWidth,\n                    h: boxHeight,\n                    radius: borderRadius\n                });\n                ctx.fill();\n                ctx.stroke();\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.beginPath();\n                addRoundedRectPath(ctx, {\n                    x: innerX,\n                    y: colorY + 1,\n                    w: boxWidth - 2,\n                    h: boxHeight - 2,\n                    radius: borderRadius\n                });\n                ctx.fill();\n            } else {\n                ctx.fillStyle = options.multiKeyBackground;\n                ctx.fillRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.strokeRect(outerX, colorY, boxWidth, boxHeight);\n                ctx.fillStyle = labelColor.backgroundColor;\n                ctx.fillRect(innerX, colorY + 1, boxWidth - 2, boxHeight - 2);\n            }\n        }\n        ctx.fillStyle = this.labelTextColors[i];\n    }\n    drawBody(pt, ctx, options) {\n        const { body  } = this;\n        const { bodySpacing , bodyAlign , displayColors , boxHeight , boxWidth , boxPadding  } = options;\n        const bodyFont = toFont(options.bodyFont);\n        let bodyLineHeight = bodyFont.lineHeight;\n        let xLinePadding = 0;\n        const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n        const fillLineOfText = function(line) {\n            ctx.fillText(line, rtlHelper.x(pt.x + xLinePadding), pt.y + bodyLineHeight / 2);\n            pt.y += bodyLineHeight + bodySpacing;\n        };\n        const bodyAlignForCalculation = rtlHelper.textAlign(bodyAlign);\n        let bodyItem, textColor, lines, i, j, ilen, jlen;\n        ctx.textAlign = bodyAlign;\n        ctx.textBaseline = 'middle';\n        ctx.font = bodyFont.string;\n        pt.x = getAlignedX(this, bodyAlignForCalculation, options);\n        ctx.fillStyle = options.bodyColor;\n        each(this.beforeBody, fillLineOfText);\n        xLinePadding = displayColors && bodyAlignForCalculation !== 'right' ? bodyAlign === 'center' ? boxWidth / 2 + boxPadding : boxWidth + 2 + boxPadding : 0;\n        for(i = 0, ilen = body.length; i < ilen; ++i){\n            bodyItem = body[i];\n            textColor = this.labelTextColors[i];\n            ctx.fillStyle = textColor;\n            each(bodyItem.before, fillLineOfText);\n            lines = bodyItem.lines;\n            if (displayColors && lines.length) {\n                this._drawColorBox(ctx, pt, i, rtlHelper, options);\n                bodyLineHeight = Math.max(bodyFont.lineHeight, boxHeight);\n            }\n            for(j = 0, jlen = lines.length; j < jlen; ++j){\n                fillLineOfText(lines[j]);\n                bodyLineHeight = bodyFont.lineHeight;\n            }\n            each(bodyItem.after, fillLineOfText);\n        }\n        xLinePadding = 0;\n        bodyLineHeight = bodyFont.lineHeight;\n        each(this.afterBody, fillLineOfText);\n        pt.y -= bodySpacing;\n    }\n    drawFooter(pt, ctx, options) {\n        const footer = this.footer;\n        const length = footer.length;\n        let footerFont, i;\n        if (length) {\n            const rtlHelper = getRtlAdapter(options.rtl, this.x, this.width);\n            pt.x = getAlignedX(this, options.footerAlign, options);\n            pt.y += options.footerMarginTop;\n            ctx.textAlign = rtlHelper.textAlign(options.footerAlign);\n            ctx.textBaseline = 'middle';\n            footerFont = toFont(options.footerFont);\n            ctx.fillStyle = options.footerColor;\n            ctx.font = footerFont.string;\n            for(i = 0; i < length; ++i){\n                ctx.fillText(footer[i], rtlHelper.x(pt.x), pt.y + footerFont.lineHeight / 2);\n                pt.y += footerFont.lineHeight + options.footerSpacing;\n            }\n        }\n    }\n    drawBackground(pt, ctx, tooltipSize, options) {\n        const { xAlign , yAlign  } = this;\n        const { x , y  } = pt;\n        const { width , height  } = tooltipSize;\n        const { topLeft , topRight , bottomLeft , bottomRight  } = toTRBLCorners(options.cornerRadius);\n        ctx.fillStyle = options.backgroundColor;\n        ctx.strokeStyle = options.borderColor;\n        ctx.lineWidth = options.borderWidth;\n        ctx.beginPath();\n        ctx.moveTo(x + topLeft, y);\n        if (yAlign === 'top') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width - topRight, y);\n        ctx.quadraticCurveTo(x + width, y, x + width, y + topRight);\n        if (yAlign === 'center' && xAlign === 'right') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + width, y + height - bottomRight);\n        ctx.quadraticCurveTo(x + width, y + height, x + width - bottomRight, y + height);\n        if (yAlign === 'bottom') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x + bottomLeft, y + height);\n        ctx.quadraticCurveTo(x, y + height, x, y + height - bottomLeft);\n        if (yAlign === 'center' && xAlign === 'left') {\n            this.drawCaret(pt, ctx, tooltipSize, options);\n        }\n        ctx.lineTo(x, y + topLeft);\n        ctx.quadraticCurveTo(x, y, x + topLeft, y);\n        ctx.closePath();\n        ctx.fill();\n        if (options.borderWidth > 0) {\n            ctx.stroke();\n        }\n    }\n _updateAnimationTarget(options) {\n        const chart = this.chart;\n        const anims = this.$animations;\n        const animX = anims && anims.x;\n        const animY = anims && anims.y;\n        if (animX || animY) {\n            const position = positioners[options.position].call(this, this._active, this._eventPosition);\n            if (!position) {\n                return;\n            }\n            const size = this._size = getTooltipSize(this, options);\n            const positionAndSize = Object.assign({}, position, this._size);\n            const alignment = determineAlignment(chart, options, positionAndSize);\n            const point = getBackgroundPoint(options, positionAndSize, alignment, chart);\n            if (animX._to !== point.x || animY._to !== point.y) {\n                this.xAlign = alignment.xAlign;\n                this.yAlign = alignment.yAlign;\n                this.width = size.width;\n                this.height = size.height;\n                this.caretX = position.x;\n                this.caretY = position.y;\n                this._resolveAnimations().update(this, point);\n            }\n        }\n    }\n _willRender() {\n        return !!this.opacity;\n    }\n    draw(ctx) {\n        const options = this.options.setContext(this.getContext());\n        let opacity = this.opacity;\n        if (!opacity) {\n            return;\n        }\n        this._updateAnimationTarget(options);\n        const tooltipSize = {\n            width: this.width,\n            height: this.height\n        };\n        const pt = {\n            x: this.x,\n            y: this.y\n        };\n        opacity = Math.abs(opacity) < 1e-3 ? 0 : opacity;\n        const padding = toPadding(options.padding);\n        const hasTooltipContent = this.title.length || this.beforeBody.length || this.body.length || this.afterBody.length || this.footer.length;\n        if (options.enabled && hasTooltipContent) {\n            ctx.save();\n            ctx.globalAlpha = opacity;\n            this.drawBackground(pt, ctx, tooltipSize, options);\n            overrideTextDirection(ctx, options.textDirection);\n            pt.y += padding.top;\n            this.drawTitle(pt, ctx, options);\n            this.drawBody(pt, ctx, options);\n            this.drawFooter(pt, ctx, options);\n            restoreTextDirection(ctx, options.textDirection);\n            ctx.restore();\n        }\n    }\n getActiveElements() {\n        return this._active || [];\n    }\n setActiveElements(activeElements, eventPosition) {\n        const lastActive = this._active;\n        const active = activeElements.map(({ datasetIndex , index  })=>{\n            const meta = this.chart.getDatasetMeta(datasetIndex);\n            if (!meta) {\n                throw new Error('Cannot find a dataset at index ' + datasetIndex);\n            }\n            return {\n                datasetIndex,\n                element: meta.data[index],\n                index\n            };\n        });\n        const changed = !_elementsEqual(lastActive, active);\n        const positionChanged = this._positionChanged(active, eventPosition);\n        if (changed || positionChanged) {\n            this._active = active;\n            this._eventPosition = eventPosition;\n            this._ignoreReplayEvents = true;\n            this.update(true);\n        }\n    }\n handleEvent(e, replay, inChartArea = true) {\n        if (replay && this._ignoreReplayEvents) {\n            return false;\n        }\n        this._ignoreReplayEvents = false;\n        const options = this.options;\n        const lastActive = this._active || [];\n        const active = this._getActiveElements(e, lastActive, replay, inChartArea);\n        const positionChanged = this._positionChanged(active, e);\n        const changed = replay || !_elementsEqual(active, lastActive) || positionChanged;\n        if (changed) {\n            this._active = active;\n            if (options.enabled || options.external) {\n                this._eventPosition = {\n                    x: e.x,\n                    y: e.y\n                };\n                this.update(true, replay);\n            }\n        }\n        return changed;\n    }\n _getActiveElements(e, lastActive, replay, inChartArea) {\n        const options = this.options;\n        if (e.type === 'mouseout') {\n            return [];\n        }\n        if (!inChartArea) {\n            return lastActive.filter((i)=>this.chart.data.datasets[i.datasetIndex] && this.chart.getDatasetMeta(i.datasetIndex).controller.getParsed(i.index) !== undefined);\n        }\n        const active = this.chart.getElementsAtEventForMode(e, options.mode, options, replay);\n        if (options.reverse) {\n            active.reverse();\n        }\n        return active;\n    }\n _positionChanged(active, e) {\n        const { caretX , caretY , options  } = this;\n        const position = positioners[options.position].call(this, active, e);\n        return position !== false && (caretX !== position.x || caretY !== position.y);\n    }\n}\nvar plugin_tooltip = {\n    id: 'tooltip',\n    _element: Tooltip,\n    positioners,\n    afterInit (chart, _args, options) {\n        if (options) {\n            chart.tooltip = new Tooltip({\n                chart,\n                options\n            });\n        }\n    },\n    beforeUpdate (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    reset (chart, _args, options) {\n        if (chart.tooltip) {\n            chart.tooltip.initialize(options);\n        }\n    },\n    afterDraw (chart) {\n        const tooltip = chart.tooltip;\n        if (tooltip && tooltip._willRender()) {\n            const args = {\n                tooltip\n            };\n            if (chart.notifyPlugins('beforeTooltipDraw', {\n                ...args,\n                cancelable: true\n            }) === false) {\n                return;\n            }\n            tooltip.draw(chart.ctx);\n            chart.notifyPlugins('afterTooltipDraw', args);\n        }\n    },\n    afterEvent (chart, args) {\n        if (chart.tooltip) {\n            const useFinalPosition = args.replay;\n            if (chart.tooltip.handleEvent(args.event, useFinalPosition, args.inChartArea)) {\n                args.changed = true;\n            }\n        }\n    },\n    defaults: {\n        enabled: true,\n        external: null,\n        position: 'average',\n        backgroundColor: 'rgba(0,0,0,0.8)',\n        titleColor: '#fff',\n        titleFont: {\n            weight: 'bold'\n        },\n        titleSpacing: 2,\n        titleMarginBottom: 6,\n        titleAlign: 'left',\n        bodyColor: '#fff',\n        bodySpacing: 2,\n        bodyFont: {},\n        bodyAlign: 'left',\n        footerColor: '#fff',\n        footerSpacing: 2,\n        footerMarginTop: 6,\n        footerFont: {\n            weight: 'bold'\n        },\n        footerAlign: 'left',\n        padding: 6,\n        caretPadding: 2,\n        caretSize: 5,\n        cornerRadius: 6,\n        boxHeight: (ctx, opts)=>opts.bodyFont.size,\n        boxWidth: (ctx, opts)=>opts.bodyFont.size,\n        multiKeyBackground: '#fff',\n        displayColors: true,\n        boxPadding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n        borderWidth: 0,\n        animation: {\n            duration: 400,\n            easing: 'easeOutQuart'\n        },\n        animations: {\n            numbers: {\n                type: 'number',\n                properties: [\n                    'x',\n                    'y',\n                    'width',\n                    'height',\n                    'caretX',\n                    'caretY'\n                ]\n            },\n            opacity: {\n                easing: 'linear',\n                duration: 200\n            }\n        },\n        callbacks: defaultCallbacks\n    },\n    defaultRoutes: {\n        bodyFont: 'font',\n        footerFont: 'font',\n        titleFont: 'font'\n    },\n    descriptors: {\n        _scriptable: (name)=>name !== 'filter' && name !== 'itemSort' && name !== 'external',\n        _indexable: false,\n        callbacks: {\n            _scriptable: false,\n            _indexable: false\n        },\n        animation: {\n            _fallback: false\n        },\n        animations: {\n            _fallback: 'animation'\n        }\n    },\n    additionalOptionScopes: [\n        'interaction'\n    ]\n};\n\nvar plugins = /*#__PURE__*/Object.freeze({\n__proto__: null,\nColors: plugin_colors,\nDecimation: plugin_decimation,\nFiller: index,\nLegend: plugin_legend,\nSubTitle: plugin_subtitle,\nTitle: plugin_title,\nTooltip: plugin_tooltip\n});\n\nconst addIfString = (labels, raw, index, addedLabels)=>{\n    if (typeof raw === 'string') {\n        index = labels.push(raw) - 1;\n        addedLabels.unshift({\n            index,\n            label: raw\n        });\n    } else if (isNaN(raw)) {\n        index = null;\n    }\n    return index;\n};\nfunction findOrAddLabel(labels, raw, index, addedLabels) {\n    const first = labels.indexOf(raw);\n    if (first === -1) {\n        return addIfString(labels, raw, index, addedLabels);\n    }\n    const last = labels.lastIndexOf(raw);\n    return first !== last ? index : first;\n}\nconst validIndex = (index, max)=>index === null ? null : _limitValue(Math.round(index), 0, max);\nfunction _getLabelForValue(value) {\n    const labels = this.getLabels();\n    if (value >= 0 && value < labels.length) {\n        return labels[value];\n    }\n    return value;\n}\nclass CategoryScale extends Scale {\n    static id = 'category';\n static defaults = {\n        ticks: {\n            callback: _getLabelForValue\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this._startValue = undefined;\n        this._valueRange = 0;\n        this._addedLabels = [];\n    }\n    init(scaleOptions) {\n        const added = this._addedLabels;\n        if (added.length) {\n            const labels = this.getLabels();\n            for (const { index , label  } of added){\n                if (labels[index] === label) {\n                    labels.splice(index, 1);\n                }\n            }\n            this._addedLabels = [];\n        }\n        super.init(scaleOptions);\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        const labels = this.getLabels();\n        index = isFinite(index) && labels[index] === raw ? index : findOrAddLabel(labels, raw, valueOrDefault(index, raw), this._addedLabels);\n        return validIndex(index, labels.length - 1);\n    }\n    determineDataLimits() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this.getMinMax(true);\n        if (this.options.bounds === 'ticks') {\n            if (!minDefined) {\n                min = 0;\n            }\n            if (!maxDefined) {\n                max = this.getLabels().length - 1;\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const min = this.min;\n        const max = this.max;\n        const offset = this.options.offset;\n        const ticks = [];\n        let labels = this.getLabels();\n        labels = min === 0 && max === labels.length - 1 ? labels : labels.slice(min, max + 1);\n        this._valueRange = Math.max(labels.length - (offset ? 0 : 1), 1);\n        this._startValue = this.min - (offset ? 0.5 : 0);\n        for(let value = min; value <= max; value++){\n            ticks.push({\n                value\n            });\n        }\n        return ticks;\n    }\n    getLabelForValue(value) {\n        return _getLabelForValue.call(this, value);\n    }\n configure() {\n        super.configure();\n        if (!this.isHorizontal()) {\n            this._reversePixels = !this._reversePixels;\n        }\n    }\n    getPixelForValue(value) {\n        if (typeof value !== 'number') {\n            value = this.parse(value);\n        }\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getPixelForTick(index) {\n        const ticks = this.ticks;\n        if (index < 0 || index > ticks.length - 1) {\n            return null;\n        }\n        return this.getPixelForValue(ticks[index].value);\n    }\n    getValueForPixel(pixel) {\n        return Math.round(this._startValue + this.getDecimalForPixel(pixel) * this._valueRange);\n    }\n    getBasePixel() {\n        return this.bottom;\n    }\n}\n\nfunction generateTicks$1(generationOptions, dataRange) {\n    const ticks = [];\n    const MIN_SPACING = 1e-14;\n    const { bounds , step , min , max , precision , count , maxTicks , maxDigits , includeBounds  } = generationOptions;\n    const unit = step || 1;\n    const maxSpaces = maxTicks - 1;\n    const { min: rmin , max: rmax  } = dataRange;\n    const minDefined = !isNullOrUndef(min);\n    const maxDefined = !isNullOrUndef(max);\n    const countDefined = !isNullOrUndef(count);\n    const minSpacing = (rmax - rmin) / (maxDigits + 1);\n    let spacing = niceNum((rmax - rmin) / maxSpaces / unit) * unit;\n    let factor, niceMin, niceMax, numSpaces;\n    if (spacing < MIN_SPACING && !minDefined && !maxDefined) {\n        return [\n            {\n                value: rmin\n            },\n            {\n                value: rmax\n            }\n        ];\n    }\n    numSpaces = Math.ceil(rmax / spacing) - Math.floor(rmin / spacing);\n    if (numSpaces > maxSpaces) {\n        spacing = niceNum(numSpaces * spacing / maxSpaces / unit) * unit;\n    }\n    if (!isNullOrUndef(precision)) {\n        factor = Math.pow(10, precision);\n        spacing = Math.ceil(spacing * factor) / factor;\n    }\n    if (bounds === 'ticks') {\n        niceMin = Math.floor(rmin / spacing) * spacing;\n        niceMax = Math.ceil(rmax / spacing) * spacing;\n    } else {\n        niceMin = rmin;\n        niceMax = rmax;\n    }\n    if (minDefined && maxDefined && step && almostWhole((max - min) / step, spacing / 1000)) {\n        numSpaces = Math.round(Math.min((max - min) / spacing, maxTicks));\n        spacing = (max - min) / numSpaces;\n        niceMin = min;\n        niceMax = max;\n    } else if (countDefined) {\n        niceMin = minDefined ? min : niceMin;\n        niceMax = maxDefined ? max : niceMax;\n        numSpaces = count - 1;\n        spacing = (niceMax - niceMin) / numSpaces;\n    } else {\n        numSpaces = (niceMax - niceMin) / spacing;\n        if (almostEquals(numSpaces, Math.round(numSpaces), spacing / 1000)) {\n            numSpaces = Math.round(numSpaces);\n        } else {\n            numSpaces = Math.ceil(numSpaces);\n        }\n    }\n    const decimalPlaces = Math.max(_decimalPlaces(spacing), _decimalPlaces(niceMin));\n    factor = Math.pow(10, isNullOrUndef(precision) ? decimalPlaces : precision);\n    niceMin = Math.round(niceMin * factor) / factor;\n    niceMax = Math.round(niceMax * factor) / factor;\n    let j = 0;\n    if (minDefined) {\n        if (includeBounds && niceMin !== min) {\n            ticks.push({\n                value: min\n            });\n            if (niceMin < min) {\n                j++;\n            }\n            if (almostEquals(Math.round((niceMin + j * spacing) * factor) / factor, min, relativeLabelSize(min, minSpacing, generationOptions))) {\n                j++;\n            }\n        } else if (niceMin < min) {\n            j++;\n        }\n    }\n    for(; j < numSpaces; ++j){\n        const tickValue = Math.round((niceMin + j * spacing) * factor) / factor;\n        if (maxDefined && tickValue > max) {\n            break;\n        }\n        ticks.push({\n            value: tickValue\n        });\n    }\n    if (maxDefined && includeBounds && niceMax !== max) {\n        if (ticks.length && almostEquals(ticks[ticks.length - 1].value, max, relativeLabelSize(max, minSpacing, generationOptions))) {\n            ticks[ticks.length - 1].value = max;\n        } else {\n            ticks.push({\n                value: max\n            });\n        }\n    } else if (!maxDefined || niceMax === max) {\n        ticks.push({\n            value: niceMax\n        });\n    }\n    return ticks;\n}\nfunction relativeLabelSize(value, minSpacing, { horizontal , minRotation  }) {\n    const rad = toRadians(minRotation);\n    const ratio = (horizontal ? Math.sin(rad) : Math.cos(rad)) || 0.001;\n    const length = 0.75 * minSpacing * ('' + value).length;\n    return Math.min(minSpacing / ratio, length);\n}\nclass LinearScaleBase extends Scale {\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n         this._endValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        if (isNullOrUndef(raw)) {\n            return null;\n        }\n        if ((typeof raw === 'number' || raw instanceof Number) && !isFinite(+raw)) {\n            return null;\n        }\n        return +raw;\n    }\n    handleTickRangeOptions() {\n        const { beginAtZero  } = this.options;\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let { min , max  } = this;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (beginAtZero) {\n            const minSign = sign(min);\n            const maxSign = sign(max);\n            if (minSign < 0 && maxSign < 0) {\n                setMax(0);\n            } else if (minSign > 0 && maxSign > 0) {\n                setMin(0);\n            }\n        }\n        if (min === max) {\n            let offset = max === 0 ? 1 : Math.abs(max * 0.05);\n            setMax(max + offset);\n            if (!beginAtZero) {\n                setMin(min - offset);\n            }\n        }\n        this.min = min;\n        this.max = max;\n    }\n    getTickLimit() {\n        const tickOpts = this.options.ticks;\n        let { maxTicksLimit , stepSize  } = tickOpts;\n        let maxTicks;\n        if (stepSize) {\n            maxTicks = Math.ceil(this.max / stepSize) - Math.floor(this.min / stepSize) + 1;\n            if (maxTicks > 1000) {\n                console.warn(`scales.${this.id}.ticks.stepSize: ${stepSize} would result generating up to ${maxTicks} ticks. Limiting to 1000.`);\n                maxTicks = 1000;\n            }\n        } else {\n            maxTicks = this.computeTickLimit();\n            maxTicksLimit = maxTicksLimit || 11;\n        }\n        if (maxTicksLimit) {\n            maxTicks = Math.min(maxTicksLimit, maxTicks);\n        }\n        return maxTicks;\n    }\n computeTickLimit() {\n        return Number.POSITIVE_INFINITY;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        let maxTicks = this.getTickLimit();\n        maxTicks = Math.max(2, maxTicks);\n        const numericGeneratorOptions = {\n            maxTicks,\n            bounds: opts.bounds,\n            min: opts.min,\n            max: opts.max,\n            precision: tickOpts.precision,\n            step: tickOpts.stepSize,\n            count: tickOpts.count,\n            maxDigits: this._maxDigits(),\n            horizontal: this.isHorizontal(),\n            minRotation: tickOpts.minRotation || 0,\n            includeBounds: tickOpts.includeBounds !== false\n        };\n        const dataRange = this._range || this;\n        const ticks = generateTicks$1(numericGeneratorOptions, dataRange);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n configure() {\n        const ticks = this.ticks;\n        let start = this.min;\n        let end = this.max;\n        super.configure();\n        if (this.options.offset && ticks.length) {\n            const offset = (end - start) / Math.max(ticks.length - 1, 1) / 2;\n            start -= offset;\n            end += offset;\n        }\n        this._startValue = start;\n        this._endValue = end;\n        this._valueRange = end - start;\n    }\n    getLabelForValue(value) {\n        return formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n}\n\nclass LinearScale extends LinearScaleBase {\n    static id = 'linear';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.numeric\n        }\n    };\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? min : 0;\n        this.max = isNumberFinite(max) ? max : 1;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        const horizontal = this.isHorizontal();\n        const length = horizontal ? this.width : this.height;\n        const minRotation = toRadians(this.options.ticks.minRotation);\n        const ratio = (horizontal ? Math.sin(minRotation) : Math.cos(minRotation)) || 0.001;\n        const tickFont = this._resolveTickFontOptions(0);\n        return Math.ceil(length / Math.min(40, tickFont.lineHeight / ratio));\n    }\n    getPixelForValue(value) {\n        return value === null ? NaN : this.getPixelForDecimal((value - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        return this._startValue + this.getDecimalForPixel(pixel) * this._valueRange;\n    }\n}\n\nconst log10Floor = (v)=>Math.floor(log10(v));\nconst changeExponent = (v, m)=>Math.pow(10, log10Floor(v) + m);\nfunction isMajor(tickVal) {\n    const remain = tickVal / Math.pow(10, log10Floor(tickVal));\n    return remain === 1;\n}\nfunction steps(min, max, rangeExp) {\n    const rangeStep = Math.pow(10, rangeExp);\n    const start = Math.floor(min / rangeStep);\n    const end = Math.ceil(max / rangeStep);\n    return end - start;\n}\nfunction startExp(min, max) {\n    const range = max - min;\n    let rangeExp = log10Floor(range);\n    while(steps(min, max, rangeExp) > 10){\n        rangeExp++;\n    }\n    while(steps(min, max, rangeExp) < 10){\n        rangeExp--;\n    }\n    return Math.min(rangeExp, log10Floor(min));\n}\n function generateTicks(generationOptions, { min , max  }) {\n    min = finiteOrDefault(generationOptions.min, min);\n    const ticks = [];\n    const minExp = log10Floor(min);\n    let exp = startExp(min, max);\n    let precision = exp < 0 ? Math.pow(10, Math.abs(exp)) : 1;\n    const stepSize = Math.pow(10, exp);\n    const base = minExp > exp ? Math.pow(10, minExp) : 0;\n    const start = Math.round((min - base) * precision) / precision;\n    const offset = Math.floor((min - base) / stepSize / 10) * stepSize * 10;\n    let significand = Math.floor((start - offset) / Math.pow(10, exp));\n    let value = finiteOrDefault(generationOptions.min, Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision);\n    while(value < max){\n        ticks.push({\n            value,\n            major: isMajor(value),\n            significand\n        });\n        if (significand >= 10) {\n            significand = significand < 15 ? 15 : 20;\n        } else {\n            significand++;\n        }\n        if (significand >= 20) {\n            exp++;\n            significand = 2;\n            precision = exp >= 0 ? 1 : precision;\n        }\n        value = Math.round((base + offset + significand * Math.pow(10, exp)) * precision) / precision;\n    }\n    const lastTick = finiteOrDefault(generationOptions.max, value);\n    ticks.push({\n        value: lastTick,\n        major: isMajor(lastTick),\n        significand\n    });\n    return ticks;\n}\nclass LogarithmicScale extends Scale {\n    static id = 'logarithmic';\n static defaults = {\n        ticks: {\n            callback: Ticks.formatters.logarithmic,\n            major: {\n                enabled: true\n            }\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.start = undefined;\n         this.end = undefined;\n         this._startValue = undefined;\n        this._valueRange = 0;\n    }\n    parse(raw, index) {\n        const value = LinearScaleBase.prototype.parse.apply(this, [\n            raw,\n            index\n        ]);\n        if (value === 0) {\n            this._zero = true;\n            return undefined;\n        }\n        return isNumberFinite(value) && value > 0 ? value : null;\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(true);\n        this.min = isNumberFinite(min) ? Math.max(0, min) : null;\n        this.max = isNumberFinite(max) ? Math.max(0, max) : null;\n        if (this.options.beginAtZero) {\n            this._zero = true;\n        }\n        if (this._zero && this.min !== this._suggestedMin && !isNumberFinite(this._userMin)) {\n            this.min = min === changeExponent(this.min, 0) ? changeExponent(this.min, -1) : changeExponent(this.min, 0);\n        }\n        this.handleTickRangeOptions();\n    }\n    handleTickRangeOptions() {\n        const { minDefined , maxDefined  } = this.getUserBounds();\n        let min = this.min;\n        let max = this.max;\n        const setMin = (v)=>min = minDefined ? min : v;\n        const setMax = (v)=>max = maxDefined ? max : v;\n        if (min === max) {\n            if (min <= 0) {\n                setMin(1);\n                setMax(10);\n            } else {\n                setMin(changeExponent(min, -1));\n                setMax(changeExponent(max, +1));\n            }\n        }\n        if (min <= 0) {\n            setMin(changeExponent(max, -1));\n        }\n        if (max <= 0) {\n            setMax(changeExponent(min, +1));\n        }\n        this.min = min;\n        this.max = max;\n    }\n    buildTicks() {\n        const opts = this.options;\n        const generationOptions = {\n            min: this._userMin,\n            max: this._userMax\n        };\n        const ticks = generateTicks(generationOptions, this);\n        if (opts.bounds === 'ticks') {\n            _setMinAndMaxByKey(ticks, this, 'value');\n        }\n        if (opts.reverse) {\n            ticks.reverse();\n            this.start = this.max;\n            this.end = this.min;\n        } else {\n            this.start = this.min;\n            this.end = this.max;\n        }\n        return ticks;\n    }\n getLabelForValue(value) {\n        return value === undefined ? '0' : formatNumber(value, this.chart.options.locale, this.options.ticks.format);\n    }\n configure() {\n        const start = this.min;\n        super.configure();\n        this._startValue = log10(start);\n        this._valueRange = log10(this.max) - log10(start);\n    }\n    getPixelForValue(value) {\n        if (value === undefined || value === 0) {\n            value = this.min;\n        }\n        if (value === null || isNaN(value)) {\n            return NaN;\n        }\n        return this.getPixelForDecimal(value === this.min ? 0 : (log10(value) - this._startValue) / this._valueRange);\n    }\n    getValueForPixel(pixel) {\n        const decimal = this.getDecimalForPixel(pixel);\n        return Math.pow(10, this._startValue + decimal * this._valueRange);\n    }\n}\n\nfunction getTickBackdropHeight(opts) {\n    const tickOpts = opts.ticks;\n    if (tickOpts.display && opts.display) {\n        const padding = toPadding(tickOpts.backdropPadding);\n        return valueOrDefault(tickOpts.font && tickOpts.font.size, defaults.font.size) + padding.height;\n    }\n    return 0;\n}\nfunction measureLabelSize(ctx, font, label) {\n    label = isArray(label) ? label : [\n        label\n    ];\n    return {\n        w: _longestText(ctx, font.string, label),\n        h: label.length * font.lineHeight\n    };\n}\nfunction determineLimits(angle, pos, size, min, max) {\n    if (angle === min || angle === max) {\n        return {\n            start: pos - size / 2,\n            end: pos + size / 2\n        };\n    } else if (angle < min || angle > max) {\n        return {\n            start: pos - size,\n            end: pos\n        };\n    }\n    return {\n        start: pos,\n        end: pos + size\n    };\n}\n function fitWithPointLabels(scale) {\n    const orig = {\n        l: scale.left + scale._padding.left,\n        r: scale.right - scale._padding.right,\n        t: scale.top + scale._padding.top,\n        b: scale.bottom - scale._padding.bottom\n    };\n    const limits = Object.assign({}, orig);\n    const labelSizes = [];\n    const padding = [];\n    const valueCount = scale._pointLabels.length;\n    const pointLabelOpts = scale.options.pointLabels;\n    const additionalAngle = pointLabelOpts.centerPointLabels ? PI / valueCount : 0;\n    for(let i = 0; i < valueCount; i++){\n        const opts = pointLabelOpts.setContext(scale.getPointLabelContext(i));\n        padding[i] = opts.padding;\n        const pointPosition = scale.getPointPosition(i, scale.drawingArea + padding[i], additionalAngle);\n        const plFont = toFont(opts.font);\n        const textSize = measureLabelSize(scale.ctx, plFont, scale._pointLabels[i]);\n        labelSizes[i] = textSize;\n        const angleRadians = _normalizeAngle(scale.getIndexAngle(i) + additionalAngle);\n        const angle = Math.round(toDegrees(angleRadians));\n        const hLimits = determineLimits(angle, pointPosition.x, textSize.w, 0, 180);\n        const vLimits = determineLimits(angle, pointPosition.y, textSize.h, 90, 270);\n        updateLimits(limits, orig, angleRadians, hLimits, vLimits);\n    }\n    scale.setCenterPoint(orig.l - limits.l, limits.r - orig.r, orig.t - limits.t, limits.b - orig.b);\n    scale._pointLabelItems = buildPointLabelItems(scale, labelSizes, padding);\n}\nfunction updateLimits(limits, orig, angle, hLimits, vLimits) {\n    const sin = Math.abs(Math.sin(angle));\n    const cos = Math.abs(Math.cos(angle));\n    let x = 0;\n    let y = 0;\n    if (hLimits.start < orig.l) {\n        x = (orig.l - hLimits.start) / sin;\n        limits.l = Math.min(limits.l, orig.l - x);\n    } else if (hLimits.end > orig.r) {\n        x = (hLimits.end - orig.r) / sin;\n        limits.r = Math.max(limits.r, orig.r + x);\n    }\n    if (vLimits.start < orig.t) {\n        y = (orig.t - vLimits.start) / cos;\n        limits.t = Math.min(limits.t, orig.t - y);\n    } else if (vLimits.end > orig.b) {\n        y = (vLimits.end - orig.b) / cos;\n        limits.b = Math.max(limits.b, orig.b + y);\n    }\n}\nfunction createPointLabelItem(scale, index, itemOpts) {\n    const outerDistance = scale.drawingArea;\n    const { extra , additionalAngle , padding , size  } = itemOpts;\n    const pointLabelPosition = scale.getPointPosition(index, outerDistance + extra + padding, additionalAngle);\n    const angle = Math.round(toDegrees(_normalizeAngle(pointLabelPosition.angle + HALF_PI)));\n    const y = yForAngle(pointLabelPosition.y, size.h, angle);\n    const textAlign = getTextAlignForAngle(angle);\n    const left = leftForTextAlign(pointLabelPosition.x, size.w, textAlign);\n    return {\n        visible: true,\n        x: pointLabelPosition.x,\n        y,\n        textAlign,\n        left,\n        top: y,\n        right: left + size.w,\n        bottom: y + size.h\n    };\n}\nfunction isNotOverlapped(item, area) {\n    if (!area) {\n        return true;\n    }\n    const { left , top , right , bottom  } = item;\n    const apexesInArea = _isPointInArea({\n        x: left,\n        y: top\n    }, area) || _isPointInArea({\n        x: left,\n        y: bottom\n    }, area) || _isPointInArea({\n        x: right,\n        y: top\n    }, area) || _isPointInArea({\n        x: right,\n        y: bottom\n    }, area);\n    return !apexesInArea;\n}\nfunction buildPointLabelItems(scale, labelSizes, padding) {\n    const items = [];\n    const valueCount = scale._pointLabels.length;\n    const opts = scale.options;\n    const { centerPointLabels , display  } = opts.pointLabels;\n    const itemOpts = {\n        extra: getTickBackdropHeight(opts) / 2,\n        additionalAngle: centerPointLabels ? PI / valueCount : 0\n    };\n    let area;\n    for(let i = 0; i < valueCount; i++){\n        itemOpts.padding = padding[i];\n        itemOpts.size = labelSizes[i];\n        const item = createPointLabelItem(scale, i, itemOpts);\n        items.push(item);\n        if (display === 'auto') {\n            item.visible = isNotOverlapped(item, area);\n            if (item.visible) {\n                area = item;\n            }\n        }\n    }\n    return items;\n}\nfunction getTextAlignForAngle(angle) {\n    if (angle === 0 || angle === 180) {\n        return 'center';\n    } else if (angle < 180) {\n        return 'left';\n    }\n    return 'right';\n}\nfunction leftForTextAlign(x, w, align) {\n    if (align === 'right') {\n        x -= w;\n    } else if (align === 'center') {\n        x -= w / 2;\n    }\n    return x;\n}\nfunction yForAngle(y, h, angle) {\n    if (angle === 90 || angle === 270) {\n        y -= h / 2;\n    } else if (angle > 270 || angle < 90) {\n        y -= h;\n    }\n    return y;\n}\nfunction drawPointLabelBox(ctx, opts, item) {\n    const { left , top , right , bottom  } = item;\n    const { backdropColor  } = opts;\n    if (!isNullOrUndef(backdropColor)) {\n        const borderRadius = toTRBLCorners(opts.borderRadius);\n        const padding = toPadding(opts.backdropPadding);\n        ctx.fillStyle = backdropColor;\n        const backdropLeft = left - padding.left;\n        const backdropTop = top - padding.top;\n        const backdropWidth = right - left + padding.width;\n        const backdropHeight = bottom - top + padding.height;\n        if (Object.values(borderRadius).some((v)=>v !== 0)) {\n            ctx.beginPath();\n            addRoundedRectPath(ctx, {\n                x: backdropLeft,\n                y: backdropTop,\n                w: backdropWidth,\n                h: backdropHeight,\n                radius: borderRadius\n            });\n            ctx.fill();\n        } else {\n            ctx.fillRect(backdropLeft, backdropTop, backdropWidth, backdropHeight);\n        }\n    }\n}\nfunction drawPointLabels(scale, labelCount) {\n    const { ctx , options: { pointLabels  }  } = scale;\n    for(let i = labelCount - 1; i >= 0; i--){\n        const item = scale._pointLabelItems[i];\n        if (!item.visible) {\n            continue;\n        }\n        const optsAtIndex = pointLabels.setContext(scale.getPointLabelContext(i));\n        drawPointLabelBox(ctx, optsAtIndex, item);\n        const plFont = toFont(optsAtIndex.font);\n        const { x , y , textAlign  } = item;\n        renderText(ctx, scale._pointLabels[i], x, y + plFont.lineHeight / 2, plFont, {\n            color: optsAtIndex.color,\n            textAlign: textAlign,\n            textBaseline: 'middle'\n        });\n    }\n}\nfunction pathRadiusLine(scale, radius, circular, labelCount) {\n    const { ctx  } = scale;\n    if (circular) {\n        ctx.arc(scale.xCenter, scale.yCenter, radius, 0, TAU);\n    } else {\n        let pointPosition = scale.getPointPosition(0, radius);\n        ctx.moveTo(pointPosition.x, pointPosition.y);\n        for(let i = 1; i < labelCount; i++){\n            pointPosition = scale.getPointPosition(i, radius);\n            ctx.lineTo(pointPosition.x, pointPosition.y);\n        }\n    }\n}\nfunction drawRadiusLine(scale, gridLineOpts, radius, labelCount, borderOpts) {\n    const ctx = scale.ctx;\n    const circular = gridLineOpts.circular;\n    const { color , lineWidth  } = gridLineOpts;\n    if (!circular && !labelCount || !color || !lineWidth || radius < 0) {\n        return;\n    }\n    ctx.save();\n    ctx.strokeStyle = color;\n    ctx.lineWidth = lineWidth;\n    ctx.setLineDash(borderOpts.dash || []);\n    ctx.lineDashOffset = borderOpts.dashOffset;\n    ctx.beginPath();\n    pathRadiusLine(scale, radius, circular, labelCount);\n    ctx.closePath();\n    ctx.stroke();\n    ctx.restore();\n}\nfunction createPointLabelContext(parent, index, label) {\n    return createContext(parent, {\n        label,\n        index,\n        type: 'pointLabel'\n    });\n}\nclass RadialLinearScale extends LinearScaleBase {\n    static id = 'radialLinear';\n static defaults = {\n        display: true,\n        animate: true,\n        position: 'chartArea',\n        angleLines: {\n            display: true,\n            lineWidth: 1,\n            borderDash: [],\n            borderDashOffset: 0.0\n        },\n        grid: {\n            circular: false\n        },\n        startAngle: 0,\n        ticks: {\n            showLabelBackdrop: true,\n            callback: Ticks.formatters.numeric\n        },\n        pointLabels: {\n            backdropColor: undefined,\n            backdropPadding: 2,\n            display: true,\n            font: {\n                size: 10\n            },\n            callback (label) {\n                return label;\n            },\n            padding: 5,\n            centerPointLabels: false\n        }\n    };\n    static defaultRoutes = {\n        'angleLines.color': 'borderColor',\n        'pointLabels.color': 'color',\n        'ticks.color': 'color'\n    };\n    static descriptors = {\n        angleLines: {\n            _fallback: 'grid'\n        }\n    };\n    constructor(cfg){\n        super(cfg);\n         this.xCenter = undefined;\n         this.yCenter = undefined;\n         this.drawingArea = undefined;\n         this._pointLabels = [];\n        this._pointLabelItems = [];\n    }\n    setDimensions() {\n        const padding = this._padding = toPadding(getTickBackdropHeight(this.options) / 2);\n        const w = this.width = this.maxWidth - padding.width;\n        const h = this.height = this.maxHeight - padding.height;\n        this.xCenter = Math.floor(this.left + w / 2 + padding.left);\n        this.yCenter = Math.floor(this.top + h / 2 + padding.top);\n        this.drawingArea = Math.floor(Math.min(w, h) / 2);\n    }\n    determineDataLimits() {\n        const { min , max  } = this.getMinMax(false);\n        this.min = isNumberFinite(min) && !isNaN(min) ? min : 0;\n        this.max = isNumberFinite(max) && !isNaN(max) ? max : 0;\n        this.handleTickRangeOptions();\n    }\n computeTickLimit() {\n        return Math.ceil(this.drawingArea / getTickBackdropHeight(this.options));\n    }\n    generateTickLabels(ticks) {\n        LinearScaleBase.prototype.generateTickLabels.call(this, ticks);\n        this._pointLabels = this.getLabels().map((value, index)=>{\n            const label = callback(this.options.pointLabels.callback, [\n                value,\n                index\n            ], this);\n            return label || label === 0 ? label : '';\n        }).filter((v, i)=>this.chart.getDataVisibility(i));\n    }\n    fit() {\n        const opts = this.options;\n        if (opts.display && opts.pointLabels.display) {\n            fitWithPointLabels(this);\n        } else {\n            this.setCenterPoint(0, 0, 0, 0);\n        }\n    }\n    setCenterPoint(leftMovement, rightMovement, topMovement, bottomMovement) {\n        this.xCenter += Math.floor((leftMovement - rightMovement) / 2);\n        this.yCenter += Math.floor((topMovement - bottomMovement) / 2);\n        this.drawingArea -= Math.min(this.drawingArea / 2, Math.max(leftMovement, rightMovement, topMovement, bottomMovement));\n    }\n    getIndexAngle(index) {\n        const angleMultiplier = TAU / (this._pointLabels.length || 1);\n        const startAngle = this.options.startAngle || 0;\n        return _normalizeAngle(index * angleMultiplier + toRadians(startAngle));\n    }\n    getDistanceFromCenterForValue(value) {\n        if (isNullOrUndef(value)) {\n            return NaN;\n        }\n        const scalingFactor = this.drawingArea / (this.max - this.min);\n        if (this.options.reverse) {\n            return (this.max - value) * scalingFactor;\n        }\n        return (value - this.min) * scalingFactor;\n    }\n    getValueForDistanceFromCenter(distance) {\n        if (isNullOrUndef(distance)) {\n            return NaN;\n        }\n        const scaledDistance = distance / (this.drawingArea / (this.max - this.min));\n        return this.options.reverse ? this.max - scaledDistance : this.min + scaledDistance;\n    }\n    getPointLabelContext(index) {\n        const pointLabels = this._pointLabels || [];\n        if (index >= 0 && index < pointLabels.length) {\n            const pointLabel = pointLabels[index];\n            return createPointLabelContext(this.getContext(), index, pointLabel);\n        }\n    }\n    getPointPosition(index, distanceFromCenter, additionalAngle = 0) {\n        const angle = this.getIndexAngle(index) - HALF_PI + additionalAngle;\n        return {\n            x: Math.cos(angle) * distanceFromCenter + this.xCenter,\n            y: Math.sin(angle) * distanceFromCenter + this.yCenter,\n            angle\n        };\n    }\n    getPointPositionForValue(index, value) {\n        return this.getPointPosition(index, this.getDistanceFromCenterForValue(value));\n    }\n    getBasePosition(index) {\n        return this.getPointPositionForValue(index || 0, this.getBaseValue());\n    }\n    getPointLabelPosition(index) {\n        const { left , top , right , bottom  } = this._pointLabelItems[index];\n        return {\n            left,\n            top,\n            right,\n            bottom\n        };\n    }\n drawBackground() {\n        const { backgroundColor , grid: { circular  }  } = this.options;\n        if (backgroundColor) {\n            const ctx = this.ctx;\n            ctx.save();\n            ctx.beginPath();\n            pathRadiusLine(this, this.getDistanceFromCenterForValue(this._endValue), circular, this._pointLabels.length);\n            ctx.closePath();\n            ctx.fillStyle = backgroundColor;\n            ctx.fill();\n            ctx.restore();\n        }\n    }\n drawGrid() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const { angleLines , grid , border  } = opts;\n        const labelCount = this._pointLabels.length;\n        let i, offset, position;\n        if (opts.pointLabels.display) {\n            drawPointLabels(this, labelCount);\n        }\n        if (grid.display) {\n            this.ticks.forEach((tick, index)=>{\n                if (index !== 0 || index === 0 && this.min < 0) {\n                    offset = this.getDistanceFromCenterForValue(tick.value);\n                    const context = this.getContext(index);\n                    const optsAtIndex = grid.setContext(context);\n                    const optsAtIndexBorder = border.setContext(context);\n                    drawRadiusLine(this, optsAtIndex, offset, labelCount, optsAtIndexBorder);\n                }\n            });\n        }\n        if (angleLines.display) {\n            ctx.save();\n            for(i = labelCount - 1; i >= 0; i--){\n                const optsAtIndex = angleLines.setContext(this.getPointLabelContext(i));\n                const { color , lineWidth  } = optsAtIndex;\n                if (!lineWidth || !color) {\n                    continue;\n                }\n                ctx.lineWidth = lineWidth;\n                ctx.strokeStyle = color;\n                ctx.setLineDash(optsAtIndex.borderDash);\n                ctx.lineDashOffset = optsAtIndex.borderDashOffset;\n                offset = this.getDistanceFromCenterForValue(opts.reverse ? this.min : this.max);\n                position = this.getPointPosition(i, offset);\n                ctx.beginPath();\n                ctx.moveTo(this.xCenter, this.yCenter);\n                ctx.lineTo(position.x, position.y);\n                ctx.stroke();\n            }\n            ctx.restore();\n        }\n    }\n drawBorder() {}\n drawLabels() {\n        const ctx = this.ctx;\n        const opts = this.options;\n        const tickOpts = opts.ticks;\n        if (!tickOpts.display) {\n            return;\n        }\n        const startAngle = this.getIndexAngle(0);\n        let offset, width;\n        ctx.save();\n        ctx.translate(this.xCenter, this.yCenter);\n        ctx.rotate(startAngle);\n        ctx.textAlign = 'center';\n        ctx.textBaseline = 'middle';\n        this.ticks.forEach((tick, index)=>{\n            if (index === 0 && this.min >= 0 && !opts.reverse) {\n                return;\n            }\n            const optsAtIndex = tickOpts.setContext(this.getContext(index));\n            const tickFont = toFont(optsAtIndex.font);\n            offset = this.getDistanceFromCenterForValue(this.ticks[index].value);\n            if (optsAtIndex.showLabelBackdrop) {\n                ctx.font = tickFont.string;\n                width = ctx.measureText(tick.label).width;\n                ctx.fillStyle = optsAtIndex.backdropColor;\n                const padding = toPadding(optsAtIndex.backdropPadding);\n                ctx.fillRect(-width / 2 - padding.left, -offset - tickFont.size / 2 - padding.top, width + padding.width, tickFont.size + padding.height);\n            }\n            renderText(ctx, tick.label, 0, -offset, tickFont, {\n                color: optsAtIndex.color,\n                strokeColor: optsAtIndex.textStrokeColor,\n                strokeWidth: optsAtIndex.textStrokeWidth\n            });\n        });\n        ctx.restore();\n    }\n drawTitle() {}\n}\n\nconst INTERVALS = {\n    millisecond: {\n        common: true,\n        size: 1,\n        steps: 1000\n    },\n    second: {\n        common: true,\n        size: 1000,\n        steps: 60\n    },\n    minute: {\n        common: true,\n        size: 60000,\n        steps: 60\n    },\n    hour: {\n        common: true,\n        size: 3600000,\n        steps: 24\n    },\n    day: {\n        common: true,\n        size: 86400000,\n        steps: 30\n    },\n    week: {\n        common: false,\n        size: 604800000,\n        steps: 4\n    },\n    month: {\n        common: true,\n        size: 2.628e9,\n        steps: 12\n    },\n    quarter: {\n        common: false,\n        size: 7.884e9,\n        steps: 4\n    },\n    year: {\n        common: true,\n        size: 3.154e10\n    }\n};\n const UNITS =  /* #__PURE__ */ Object.keys(INTERVALS);\n function sorter(a, b) {\n    return a - b;\n}\n function parse(scale, input) {\n    if (isNullOrUndef(input)) {\n        return null;\n    }\n    const adapter = scale._adapter;\n    const { parser , round , isoWeekday  } = scale._parseOpts;\n    let value = input;\n    if (typeof parser === 'function') {\n        value = parser(value);\n    }\n    if (!isNumberFinite(value)) {\n        value = typeof parser === 'string' ? adapter.parse(value, parser) : adapter.parse(value);\n    }\n    if (value === null) {\n        return null;\n    }\n    if (round) {\n        value = round === 'week' && (isNumber(isoWeekday) || isoWeekday === true) ? adapter.startOf(value, 'isoWeek', isoWeekday) : adapter.startOf(value, round);\n    }\n    return +value;\n}\n function determineUnitForAutoTicks(minUnit, min, max, capacity) {\n    const ilen = UNITS.length;\n    for(let i = UNITS.indexOf(minUnit); i < ilen - 1; ++i){\n        const interval = INTERVALS[UNITS[i]];\n        const factor = interval.steps ? interval.steps : Number.MAX_SAFE_INTEGER;\n        if (interval.common && Math.ceil((max - min) / (factor * interval.size)) <= capacity) {\n            return UNITS[i];\n        }\n    }\n    return UNITS[ilen - 1];\n}\n function determineUnitForFormatting(scale, numTicks, minUnit, min, max) {\n    for(let i = UNITS.length - 1; i >= UNITS.indexOf(minUnit); i--){\n        const unit = UNITS[i];\n        if (INTERVALS[unit].common && scale._adapter.diff(max, min, unit) >= numTicks - 1) {\n            return unit;\n        }\n    }\n    return UNITS[minUnit ? UNITS.indexOf(minUnit) : 0];\n}\n function determineMajorUnit(unit) {\n    for(let i = UNITS.indexOf(unit) + 1, ilen = UNITS.length; i < ilen; ++i){\n        if (INTERVALS[UNITS[i]].common) {\n            return UNITS[i];\n        }\n    }\n}\n function addTick(ticks, time, timestamps) {\n    if (!timestamps) {\n        ticks[time] = true;\n    } else if (timestamps.length) {\n        const { lo , hi  } = _lookup(timestamps, time);\n        const timestamp = timestamps[lo] >= time ? timestamps[lo] : timestamps[hi];\n        ticks[timestamp] = true;\n    }\n}\n function setMajorTicks(scale, ticks, map, majorUnit) {\n    const adapter = scale._adapter;\n    const first = +adapter.startOf(ticks[0].value, majorUnit);\n    const last = ticks[ticks.length - 1].value;\n    let major, index;\n    for(major = first; major <= last; major = +adapter.add(major, 1, majorUnit)){\n        index = map[major];\n        if (index >= 0) {\n            ticks[index].major = true;\n        }\n    }\n    return ticks;\n}\n function ticksFromTimestamps(scale, values, majorUnit) {\n    const ticks = [];\n     const map = {};\n    const ilen = values.length;\n    let i, value;\n    for(i = 0; i < ilen; ++i){\n        value = values[i];\n        map[value] = i;\n        ticks.push({\n            value,\n            major: false\n        });\n    }\n    return ilen === 0 || !majorUnit ? ticks : setMajorTicks(scale, ticks, map, majorUnit);\n}\nclass TimeScale extends Scale {\n    static id = 'time';\n static defaults = {\n bounds: 'data',\n        adapters: {},\n        time: {\n            parser: false,\n            unit: false,\n            round: false,\n            isoWeekday: false,\n            minUnit: 'millisecond',\n            displayFormats: {}\n        },\n        ticks: {\n source: 'auto',\n            callback: false,\n            major: {\n                enabled: false\n            }\n        }\n    };\n constructor(props){\n        super(props);\n         this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n         this._unit = 'day';\n         this._majorUnit = undefined;\n        this._offsets = {};\n        this._normalized = false;\n        this._parseOpts = undefined;\n    }\n    init(scaleOpts, opts = {}) {\n        const time = scaleOpts.time || (scaleOpts.time = {});\n         const adapter = this._adapter = new adapters._date(scaleOpts.adapters.date);\n        adapter.init(opts);\n        mergeIf(time.displayFormats, adapter.formats());\n        this._parseOpts = {\n            parser: time.parser,\n            round: time.round,\n            isoWeekday: time.isoWeekday\n        };\n        super.init(scaleOpts);\n        this._normalized = opts.normalized;\n    }\n parse(raw, index) {\n        if (raw === undefined) {\n            return null;\n        }\n        return parse(this, raw);\n    }\n    beforeLayout() {\n        super.beforeLayout();\n        this._cache = {\n            data: [],\n            labels: [],\n            all: []\n        };\n    }\n    determineDataLimits() {\n        const options = this.options;\n        const adapter = this._adapter;\n        const unit = options.time.unit || 'day';\n        let { min , max , minDefined , maxDefined  } = this.getUserBounds();\n function _applyBounds(bounds) {\n            if (!minDefined && !isNaN(bounds.min)) {\n                min = Math.min(min, bounds.min);\n            }\n            if (!maxDefined && !isNaN(bounds.max)) {\n                max = Math.max(max, bounds.max);\n            }\n        }\n        if (!minDefined || !maxDefined) {\n            _applyBounds(this._getLabelBounds());\n            if (options.bounds !== 'ticks' || options.ticks.source !== 'labels') {\n                _applyBounds(this.getMinMax(false));\n            }\n        }\n        min = isNumberFinite(min) && !isNaN(min) ? min : +adapter.startOf(Date.now(), unit);\n        max = isNumberFinite(max) && !isNaN(max) ? max : +adapter.endOf(Date.now(), unit) + 1;\n        this.min = Math.min(min, max - 1);\n        this.max = Math.max(min + 1, max);\n    }\n _getLabelBounds() {\n        const arr = this.getLabelTimestamps();\n        let min = Number.POSITIVE_INFINITY;\n        let max = Number.NEGATIVE_INFINITY;\n        if (arr.length) {\n            min = arr[0];\n            max = arr[arr.length - 1];\n        }\n        return {\n            min,\n            max\n        };\n    }\n buildTicks() {\n        const options = this.options;\n        const timeOpts = options.time;\n        const tickOpts = options.ticks;\n        const timestamps = tickOpts.source === 'labels' ? this.getLabelTimestamps() : this._generate();\n        if (options.bounds === 'ticks' && timestamps.length) {\n            this.min = this._userMin || timestamps[0];\n            this.max = this._userMax || timestamps[timestamps.length - 1];\n        }\n        const min = this.min;\n        const max = this.max;\n        const ticks = _filterBetween(timestamps, min, max);\n        this._unit = timeOpts.unit || (tickOpts.autoSkip ? determineUnitForAutoTicks(timeOpts.minUnit, this.min, this.max, this._getLabelCapacity(min)) : determineUnitForFormatting(this, ticks.length, timeOpts.minUnit, this.min, this.max));\n        this._majorUnit = !tickOpts.major.enabled || this._unit === 'year' ? undefined : determineMajorUnit(this._unit);\n        this.initOffsets(timestamps);\n        if (options.reverse) {\n            ticks.reverse();\n        }\n        return ticksFromTimestamps(this, ticks, this._majorUnit);\n    }\n    afterAutoSkip() {\n        if (this.options.offsetAfterAutoskip) {\n            this.initOffsets(this.ticks.map((tick)=>+tick.value));\n        }\n    }\n initOffsets(timestamps = []) {\n        let start = 0;\n        let end = 0;\n        let first, last;\n        if (this.options.offset && timestamps.length) {\n            first = this.getDecimalForValue(timestamps[0]);\n            if (timestamps.length === 1) {\n                start = 1 - first;\n            } else {\n                start = (this.getDecimalForValue(timestamps[1]) - first) / 2;\n            }\n            last = this.getDecimalForValue(timestamps[timestamps.length - 1]);\n            if (timestamps.length === 1) {\n                end = last;\n            } else {\n                end = (last - this.getDecimalForValue(timestamps[timestamps.length - 2])) / 2;\n            }\n        }\n        const limit = timestamps.length < 3 ? 0.5 : 0.25;\n        start = _limitValue(start, 0, limit);\n        end = _limitValue(end, 0, limit);\n        this._offsets = {\n            start,\n            end,\n            factor: 1 / (start + 1 + end)\n        };\n    }\n _generate() {\n        const adapter = this._adapter;\n        const min = this.min;\n        const max = this.max;\n        const options = this.options;\n        const timeOpts = options.time;\n        const minor = timeOpts.unit || determineUnitForAutoTicks(timeOpts.minUnit, min, max, this._getLabelCapacity(min));\n        const stepSize = valueOrDefault(options.ticks.stepSize, 1);\n        const weekday = minor === 'week' ? timeOpts.isoWeekday : false;\n        const hasWeekday = isNumber(weekday) || weekday === true;\n        const ticks = {};\n        let first = min;\n        let time, count;\n        if (hasWeekday) {\n            first = +adapter.startOf(first, 'isoWeek', weekday);\n        }\n        first = +adapter.startOf(first, hasWeekday ? 'day' : minor);\n        if (adapter.diff(max, min, minor) > 100000 * stepSize) {\n            throw new Error(min + ' and ' + max + ' are too far apart with stepSize of ' + stepSize + ' ' + minor);\n        }\n        const timestamps = options.ticks.source === 'data' && this.getDataTimestamps();\n        for(time = first, count = 0; time < max; time = +adapter.add(time, stepSize, minor), count++){\n            addTick(ticks, time, timestamps);\n        }\n        if (time === max || options.bounds === 'ticks' || count === 1) {\n            addTick(ticks, time, timestamps);\n        }\n        return Object.keys(ticks).sort(sorter).map((x)=>+x);\n    }\n getLabelForValue(value) {\n        const adapter = this._adapter;\n        const timeOpts = this.options.time;\n        if (timeOpts.tooltipFormat) {\n            return adapter.format(value, timeOpts.tooltipFormat);\n        }\n        return adapter.format(value, timeOpts.displayFormats.datetime);\n    }\n format(value, format) {\n        const options = this.options;\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const fmt = format || formats[unit];\n        return this._adapter.format(value, fmt);\n    }\n _tickFormatFunction(time, index, ticks, format) {\n        const options = this.options;\n        const formatter = options.ticks.callback;\n        if (formatter) {\n            return callback(formatter, [\n                time,\n                index,\n                ticks\n            ], this);\n        }\n        const formats = options.time.displayFormats;\n        const unit = this._unit;\n        const majorUnit = this._majorUnit;\n        const minorFormat = unit && formats[unit];\n        const majorFormat = majorUnit && formats[majorUnit];\n        const tick = ticks[index];\n        const major = majorUnit && majorFormat && tick && tick.major;\n        return this._adapter.format(time, format || (major ? majorFormat : minorFormat));\n    }\n generateTickLabels(ticks) {\n        let i, ilen, tick;\n        for(i = 0, ilen = ticks.length; i < ilen; ++i){\n            tick = ticks[i];\n            tick.label = this._tickFormatFunction(tick.value, i, ticks);\n        }\n    }\n getDecimalForValue(value) {\n        return value === null ? NaN : (value - this.min) / (this.max - this.min);\n    }\n getPixelForValue(value) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForValue(value);\n        return this.getPixelForDecimal((offsets.start + pos) * offsets.factor);\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const pos = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return this.min + pos * (this.max - this.min);\n    }\n _getLabelSize(label) {\n        const ticksOpts = this.options.ticks;\n        const tickLabelWidth = this.ctx.measureText(label).width;\n        const angle = toRadians(this.isHorizontal() ? ticksOpts.maxRotation : ticksOpts.minRotation);\n        const cosRotation = Math.cos(angle);\n        const sinRotation = Math.sin(angle);\n        const tickFontSize = this._resolveTickFontOptions(0).size;\n        return {\n            w: tickLabelWidth * cosRotation + tickFontSize * sinRotation,\n            h: tickLabelWidth * sinRotation + tickFontSize * cosRotation\n        };\n    }\n _getLabelCapacity(exampleTime) {\n        const timeOpts = this.options.time;\n        const displayFormats = timeOpts.displayFormats;\n        const format = displayFormats[timeOpts.unit] || displayFormats.millisecond;\n        const exampleLabel = this._tickFormatFunction(exampleTime, 0, ticksFromTimestamps(this, [\n            exampleTime\n        ], this._majorUnit), format);\n        const size = this._getLabelSize(exampleLabel);\n        const capacity = Math.floor(this.isHorizontal() ? this.width / size.w : this.height / size.h) - 1;\n        return capacity > 0 ? capacity : 1;\n    }\n getDataTimestamps() {\n        let timestamps = this._cache.data || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const metas = this.getMatchingVisibleMetas();\n        if (this._normalized && metas.length) {\n            return this._cache.data = metas[0].controller.getAllParsedValues(this);\n        }\n        for(i = 0, ilen = metas.length; i < ilen; ++i){\n            timestamps = timestamps.concat(metas[i].controller.getAllParsedValues(this));\n        }\n        return this._cache.data = this.normalize(timestamps);\n    }\n getLabelTimestamps() {\n        const timestamps = this._cache.labels || [];\n        let i, ilen;\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const labels = this.getLabels();\n        for(i = 0, ilen = labels.length; i < ilen; ++i){\n            timestamps.push(parse(this, labels[i]));\n        }\n        return this._cache.labels = this._normalized ? timestamps : this.normalize(timestamps);\n    }\n normalize(values) {\n        return _arrayUnique(values.sort(sorter));\n    }\n}\n\nfunction interpolate(table, val, reverse) {\n    let lo = 0;\n    let hi = table.length - 1;\n    let prevSource, nextSource, prevTarget, nextTarget;\n    if (reverse) {\n        if (val >= table[lo].pos && val <= table[hi].pos) {\n            ({ lo , hi  } = _lookupByKey(table, 'pos', val));\n        }\n        ({ pos: prevSource , time: prevTarget  } = table[lo]);\n        ({ pos: nextSource , time: nextTarget  } = table[hi]);\n    } else {\n        if (val >= table[lo].time && val <= table[hi].time) {\n            ({ lo , hi  } = _lookupByKey(table, 'time', val));\n        }\n        ({ time: prevSource , pos: prevTarget  } = table[lo]);\n        ({ time: nextSource , pos: nextTarget  } = table[hi]);\n    }\n    const span = nextSource - prevSource;\n    return span ? prevTarget + (nextTarget - prevTarget) * (val - prevSource) / span : prevTarget;\n}\nclass TimeSeriesScale extends TimeScale {\n    static id = 'timeseries';\n static defaults = TimeScale.defaults;\n constructor(props){\n        super(props);\n         this._table = [];\n         this._minPos = undefined;\n         this._tableRange = undefined;\n    }\n initOffsets() {\n        const timestamps = this._getTimestampsForTable();\n        const table = this._table = this.buildLookupTable(timestamps);\n        this._minPos = interpolate(table, this.min);\n        this._tableRange = interpolate(table, this.max) - this._minPos;\n        super.initOffsets(timestamps);\n    }\n buildLookupTable(timestamps) {\n        const { min , max  } = this;\n        const items = [];\n        const table = [];\n        let i, ilen, prev, curr, next;\n        for(i = 0, ilen = timestamps.length; i < ilen; ++i){\n            curr = timestamps[i];\n            if (curr >= min && curr <= max) {\n                items.push(curr);\n            }\n        }\n        if (items.length < 2) {\n            return [\n                {\n                    time: min,\n                    pos: 0\n                },\n                {\n                    time: max,\n                    pos: 1\n                }\n            ];\n        }\n        for(i = 0, ilen = items.length; i < ilen; ++i){\n            next = items[i + 1];\n            prev = items[i - 1];\n            curr = items[i];\n            if (Math.round((next + prev) / 2) !== curr) {\n                table.push({\n                    time: curr,\n                    pos: i / (ilen - 1)\n                });\n            }\n        }\n        return table;\n    }\n _generate() {\n        const min = this.min;\n        const max = this.max;\n        let timestamps = super.getDataTimestamps();\n        if (!timestamps.includes(min) || !timestamps.length) {\n            timestamps.splice(0, 0, min);\n        }\n        if (!timestamps.includes(max) || timestamps.length === 1) {\n            timestamps.push(max);\n        }\n        return timestamps.sort((a, b)=>a - b);\n    }\n _getTimestampsForTable() {\n        let timestamps = this._cache.all || [];\n        if (timestamps.length) {\n            return timestamps;\n        }\n        const data = this.getDataTimestamps();\n        const label = this.getLabelTimestamps();\n        if (data.length && label.length) {\n            timestamps = this.normalize(data.concat(label));\n        } else {\n            timestamps = data.length ? data : label;\n        }\n        timestamps = this._cache.all = timestamps;\n        return timestamps;\n    }\n getDecimalForValue(value) {\n        return (interpolate(this._table, value) - this._minPos) / this._tableRange;\n    }\n getValueForPixel(pixel) {\n        const offsets = this._offsets;\n        const decimal = this.getDecimalForPixel(pixel) / offsets.factor - offsets.end;\n        return interpolate(this._table, decimal * this._tableRange + this._minPos, true);\n    }\n}\n\nvar scales = /*#__PURE__*/Object.freeze({\n__proto__: null,\nCategoryScale: CategoryScale,\nLinearScale: LinearScale,\nLogarithmicScale: LogarithmicScale,\nRadialLinearScale: RadialLinearScale,\nTimeScale: TimeScale,\nTimeSeriesScale: TimeSeriesScale\n});\n\nconst registerables = [\n    controllers,\n    elements,\n    plugins,\n    scales\n];\n\nexport { Animation, Animations, ArcElement, BarController, BarElement, BasePlatform, BasicPlatform, BubbleController, CategoryScale, Chart, plugin_colors as Colors, DatasetController, plugin_decimation as Decimation, DomPlatform, DoughnutController, Element, index as Filler, Interaction, plugin_legend as Legend, LineController, LineElement, LinearScale, LogarithmicScale, PieController, PointElement, PolarAreaController, RadarController, RadialLinearScale, Scale, ScatterController, plugin_subtitle as SubTitle, Ticks, TimeScale, TimeSeriesScale, plugin_title as Title, plugin_tooltip as Tooltip, adapters as _adapters, _detectPlatform, animator, controllers, defaults, elements, layouts, plugins, registerables, registry, scales };\n//# sourceMappingURL=chart.js.map\n","/*!\n * chartjs-plugin-datalabels v2.2.0\n * https://chartjs-plugin-datalabels.netlify.app\n * (c) 2017-2022 chartjs-plugin-datalabels contributors\n * Released under the MIT license\n */\nimport { isNullOrUndef, merge, toFont, resolve, toPadding, valueOrDefault, callback, isObject, each } from 'chart.js/helpers';\nimport { defaults as defaults$1, ArcElement, PointElement, BarElement } from 'chart.js';\n\nvar devicePixelRatio = (function() {\n  if (typeof window !== 'undefined') {\n    if (window.devicePixelRatio) {\n      return window.devicePixelRatio;\n    }\n\n    // devicePixelRatio is undefined on IE10\n    // https://stackoverflow.com/a/20204180/8837887\n    // https://github.com/chartjs/chartjs-plugin-datalabels/issues/85\n    var screen = window.screen;\n    if (screen) {\n      return (screen.deviceXDPI || 1) / (screen.logicalXDPI || 1);\n    }\n  }\n\n  return 1;\n}());\n\nvar utils = {\n  // @todo move this in Chart.helpers.toTextLines\n  toTextLines: function(inputs) {\n    var lines = [];\n    var input;\n\n    inputs = [].concat(inputs);\n    while (inputs.length) {\n      input = inputs.pop();\n      if (typeof input === 'string') {\n        lines.unshift.apply(lines, input.split('\\n'));\n      } else if (Array.isArray(input)) {\n        inputs.push.apply(inputs, input);\n      } else if (!isNullOrUndef(inputs)) {\n        lines.unshift('' + input);\n      }\n    }\n\n    return lines;\n  },\n\n  // @todo move this in Chart.helpers.canvas.textSize\n  // @todo cache calls of measureText if font doesn't change?!\n  textSize: function(ctx, lines, font) {\n    var items = [].concat(lines);\n    var ilen = items.length;\n    var prev = ctx.font;\n    var width = 0;\n    var i;\n\n    ctx.font = font.string;\n\n    for (i = 0; i < ilen; ++i) {\n      width = Math.max(ctx.measureText(items[i]).width, width);\n    }\n\n    ctx.font = prev;\n\n    return {\n      height: ilen * font.lineHeight,\n      width: width\n    };\n  },\n\n  /**\n   * Returns value bounded by min and max. This is equivalent to max(min, min(value, max)).\n   * @todo move this method in Chart.helpers.bound\n   * https://doc.qt.io/qt-5/qtglobal.html#qBound\n   */\n  bound: function(min, value, max) {\n    return Math.max(min, Math.min(value, max));\n  },\n\n  /**\n   * Returns an array of pair [value, state] where state is:\n   * * -1: value is only in a0 (removed)\n   * *  1: value is only in a1 (added)\n   */\n  arrayDiff: function(a0, a1) {\n    var prev = a0.slice();\n    var updates = [];\n    var i, j, ilen, v;\n\n    for (i = 0, ilen = a1.length; i < ilen; ++i) {\n      v = a1[i];\n      j = prev.indexOf(v);\n\n      if (j === -1) {\n        updates.push([v, 1]);\n      } else {\n        prev.splice(j, 1);\n      }\n    }\n\n    for (i = 0, ilen = prev.length; i < ilen; ++i) {\n      updates.push([prev[i], -1]);\n    }\n\n    return updates;\n  },\n\n  /**\n   * https://github.com/chartjs/chartjs-plugin-datalabels/issues/70\n   */\n  rasterize: function(v) {\n    return Math.round(v * devicePixelRatio) / devicePixelRatio;\n  }\n};\n\nfunction orient(point, origin) {\n  var x0 = origin.x;\n  var y0 = origin.y;\n\n  if (x0 === null) {\n    return {x: 0, y: -1};\n  }\n  if (y0 === null) {\n    return {x: 1, y: 0};\n  }\n\n  var dx = point.x - x0;\n  var dy = point.y - y0;\n  var ln = Math.sqrt(dx * dx + dy * dy);\n\n  return {\n    x: ln ? dx / ln : 0,\n    y: ln ? dy / ln : -1\n  };\n}\n\nfunction aligned(x, y, vx, vy, align) {\n  switch (align) {\n  case 'center':\n    vx = vy = 0;\n    break;\n  case 'bottom':\n    vx = 0;\n    vy = 1;\n    break;\n  case 'right':\n    vx = 1;\n    vy = 0;\n    break;\n  case 'left':\n    vx = -1;\n    vy = 0;\n    break;\n  case 'top':\n    vx = 0;\n    vy = -1;\n    break;\n  case 'start':\n    vx = -vx;\n    vy = -vy;\n    break;\n  case 'end':\n    // keep natural orientation\n    break;\n  default:\n    // clockwise rotation (in degree)\n    align *= (Math.PI / 180);\n    vx = Math.cos(align);\n    vy = Math.sin(align);\n    break;\n  }\n\n  return {\n    x: x,\n    y: y,\n    vx: vx,\n    vy: vy\n  };\n}\n\n// Line clipping (Cohen–Sutherland algorithm)\n// https://en.wikipedia.org/wiki/Cohen–Sutherland_algorithm\n\nvar R_INSIDE = 0;\nvar R_LEFT = 1;\nvar R_RIGHT = 2;\nvar R_BOTTOM = 4;\nvar R_TOP = 8;\n\nfunction region(x, y, rect) {\n  var res = R_INSIDE;\n\n  if (x < rect.left) {\n    res |= R_LEFT;\n  } else if (x > rect.right) {\n    res |= R_RIGHT;\n  }\n  if (y < rect.top) {\n    res |= R_TOP;\n  } else if (y > rect.bottom) {\n    res |= R_BOTTOM;\n  }\n\n  return res;\n}\n\nfunction clipped(segment, area) {\n  var x0 = segment.x0;\n  var y0 = segment.y0;\n  var x1 = segment.x1;\n  var y1 = segment.y1;\n  var r0 = region(x0, y0, area);\n  var r1 = region(x1, y1, area);\n  var r, x, y;\n\n  // eslint-disable-next-line no-constant-condition\n  while (true) {\n    if (!(r0 | r1) || (r0 & r1)) {\n      // both points inside or on the same side: no clipping\n      break;\n    }\n\n    // at least one point is outside\n    r = r0 || r1;\n\n    if (r & R_TOP) {\n      x = x0 + (x1 - x0) * (area.top - y0) / (y1 - y0);\n      y = area.top;\n    } else if (r & R_BOTTOM) {\n      x = x0 + (x1 - x0) * (area.bottom - y0) / (y1 - y0);\n      y = area.bottom;\n    } else if (r & R_RIGHT) {\n      y = y0 + (y1 - y0) * (area.right - x0) / (x1 - x0);\n      x = area.right;\n    } else if (r & R_LEFT) {\n      y = y0 + (y1 - y0) * (area.left - x0) / (x1 - x0);\n      x = area.left;\n    }\n\n    if (r === r0) {\n      x0 = x;\n      y0 = y;\n      r0 = region(x0, y0, area);\n    } else {\n      x1 = x;\n      y1 = y;\n      r1 = region(x1, y1, area);\n    }\n  }\n\n  return {\n    x0: x0,\n    x1: x1,\n    y0: y0,\n    y1: y1\n  };\n}\n\nfunction compute$1(range, config) {\n  var anchor = config.anchor;\n  var segment = range;\n  var x, y;\n\n  if (config.clamp) {\n    segment = clipped(segment, config.area);\n  }\n\n  if (anchor === 'start') {\n    x = segment.x0;\n    y = segment.y0;\n  } else if (anchor === 'end') {\n    x = segment.x1;\n    y = segment.y1;\n  } else {\n    x = (segment.x0 + segment.x1) / 2;\n    y = (segment.y0 + segment.y1) / 2;\n  }\n\n  return aligned(x, y, range.vx, range.vy, config.align);\n}\n\nvar positioners = {\n  arc: function(el, config) {\n    var angle = (el.startAngle + el.endAngle) / 2;\n    var vx = Math.cos(angle);\n    var vy = Math.sin(angle);\n    var r0 = el.innerRadius;\n    var r1 = el.outerRadius;\n\n    return compute$1({\n      x0: el.x + vx * r0,\n      y0: el.y + vy * r0,\n      x1: el.x + vx * r1,\n      y1: el.y + vy * r1,\n      vx: vx,\n      vy: vy\n    }, config);\n  },\n\n  point: function(el, config) {\n    var v = orient(el, config.origin);\n    var rx = v.x * el.options.radius;\n    var ry = v.y * el.options.radius;\n\n    return compute$1({\n      x0: el.x - rx,\n      y0: el.y - ry,\n      x1: el.x + rx,\n      y1: el.y + ry,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  bar: function(el, config) {\n    var v = orient(el, config.origin);\n    var x = el.x;\n    var y = el.y;\n    var sx = 0;\n    var sy = 0;\n\n    if (el.horizontal) {\n      x = Math.min(el.x, el.base);\n      sx = Math.abs(el.base - el.x);\n    } else {\n      y = Math.min(el.y, el.base);\n      sy = Math.abs(el.base - el.y);\n    }\n\n    return compute$1({\n      x0: x,\n      y0: y + sy,\n      x1: x + sx,\n      y1: y,\n      vx: v.x,\n      vy: v.y\n    }, config);\n  },\n\n  fallback: function(el, config) {\n    var v = orient(el, config.origin);\n\n    return compute$1({\n      x0: el.x,\n      y0: el.y,\n      x1: el.x + (el.width || 0),\n      y1: el.y + (el.height || 0),\n      vx: v.x,\n      vy: v.y\n    }, config);\n  }\n};\n\nvar rasterize = utils.rasterize;\n\nfunction boundingRects(model) {\n  var borderWidth = model.borderWidth || 0;\n  var padding = model.padding;\n  var th = model.size.height;\n  var tw = model.size.width;\n  var tx = -tw / 2;\n  var ty = -th / 2;\n\n  return {\n    frame: {\n      x: tx - padding.left - borderWidth,\n      y: ty - padding.top - borderWidth,\n      w: tw + padding.width + borderWidth * 2,\n      h: th + padding.height + borderWidth * 2\n    },\n    text: {\n      x: tx,\n      y: ty,\n      w: tw,\n      h: th\n    }\n  };\n}\n\nfunction getScaleOrigin(el, context) {\n  var scale = context.chart.getDatasetMeta(context.datasetIndex).vScale;\n\n  if (!scale) {\n    return null;\n  }\n\n  if (scale.xCenter !== undefined && scale.yCenter !== undefined) {\n    return {x: scale.xCenter, y: scale.yCenter};\n  }\n\n  var pixel = scale.getBasePixel();\n  return el.horizontal ?\n    {x: pixel, y: null} :\n    {x: null, y: pixel};\n}\n\nfunction getPositioner(el) {\n  if (el instanceof ArcElement) {\n    return positioners.arc;\n  }\n  if (el instanceof PointElement) {\n    return positioners.point;\n  }\n  if (el instanceof BarElement) {\n    return positioners.bar;\n  }\n  return positioners.fallback;\n}\n\nfunction drawRoundedRect(ctx, x, y, w, h, radius) {\n  var HALF_PI = Math.PI / 2;\n\n  if (radius) {\n    var r = Math.min(radius, h / 2, w / 2);\n    var left = x + r;\n    var top = y + r;\n    var right = x + w - r;\n    var bottom = y + h - r;\n\n    ctx.moveTo(x, top);\n    if (left < right && top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, -HALF_PI);\n      ctx.arc(right, top, r, -HALF_PI, 0);\n      ctx.arc(right, bottom, r, 0, HALF_PI);\n      ctx.arc(left, bottom, r, HALF_PI, Math.PI);\n    } else if (left < right) {\n      ctx.moveTo(left, y);\n      ctx.arc(right, top, r, -HALF_PI, HALF_PI);\n      ctx.arc(left, top, r, HALF_PI, Math.PI + HALF_PI);\n    } else if (top < bottom) {\n      ctx.arc(left, top, r, -Math.PI, 0);\n      ctx.arc(left, bottom, r, 0, Math.PI);\n    } else {\n      ctx.arc(left, top, r, -Math.PI, Math.PI);\n    }\n    ctx.closePath();\n    ctx.moveTo(x, y);\n  } else {\n    ctx.rect(x, y, w, h);\n  }\n}\n\nfunction drawFrame(ctx, rect, model) {\n  var bgColor = model.backgroundColor;\n  var borderColor = model.borderColor;\n  var borderWidth = model.borderWidth;\n\n  if (!bgColor && (!borderColor || !borderWidth)) {\n    return;\n  }\n\n  ctx.beginPath();\n\n  drawRoundedRect(\n    ctx,\n    rasterize(rect.x) + borderWidth / 2,\n    rasterize(rect.y) + borderWidth / 2,\n    rasterize(rect.w) - borderWidth,\n    rasterize(rect.h) - borderWidth,\n    model.borderRadius);\n\n  ctx.closePath();\n\n  if (bgColor) {\n    ctx.fillStyle = bgColor;\n    ctx.fill();\n  }\n\n  if (borderColor && borderWidth) {\n    ctx.strokeStyle = borderColor;\n    ctx.lineWidth = borderWidth;\n    ctx.lineJoin = 'miter';\n    ctx.stroke();\n  }\n}\n\nfunction textGeometry(rect, align, font) {\n  var h = font.lineHeight;\n  var w = rect.w;\n  var x = rect.x;\n  var y = rect.y + h / 2;\n\n  if (align === 'center') {\n    x += w / 2;\n  } else if (align === 'end' || align === 'right') {\n    x += w;\n  }\n\n  return {\n    h: h,\n    w: w,\n    x: x,\n    y: y\n  };\n}\n\nfunction drawTextLine(ctx, text, cfg) {\n  var shadow = ctx.shadowBlur;\n  var stroked = cfg.stroked;\n  var x = rasterize(cfg.x);\n  var y = rasterize(cfg.y);\n  var w = rasterize(cfg.w);\n\n  if (stroked) {\n    ctx.strokeText(text, x, y, w);\n  }\n\n  if (cfg.filled) {\n    if (shadow && stroked) {\n      // Prevent drawing shadow on both the text stroke and fill, so\n      // if the text is stroked, remove the shadow for the text fill.\n      ctx.shadowBlur = 0;\n    }\n\n    ctx.fillText(text, x, y, w);\n\n    if (shadow && stroked) {\n      ctx.shadowBlur = shadow;\n    }\n  }\n}\n\nfunction drawText(ctx, lines, rect, model) {\n  var align = model.textAlign;\n  var color = model.color;\n  var filled = !!color;\n  var font = model.font;\n  var ilen = lines.length;\n  var strokeColor = model.textStrokeColor;\n  var strokeWidth = model.textStrokeWidth;\n  var stroked = strokeColor && strokeWidth;\n  var i;\n\n  if (!ilen || (!filled && !stroked)) {\n    return;\n  }\n\n  // Adjust coordinates based on text alignment and line height\n  rect = textGeometry(rect, align, font);\n\n  ctx.font = font.string;\n  ctx.textAlign = align;\n  ctx.textBaseline = 'middle';\n  ctx.shadowBlur = model.textShadowBlur;\n  ctx.shadowColor = model.textShadowColor;\n\n  if (filled) {\n    ctx.fillStyle = color;\n  }\n  if (stroked) {\n    ctx.lineJoin = 'round';\n    ctx.lineWidth = strokeWidth;\n    ctx.strokeStyle = strokeColor;\n  }\n\n  for (i = 0, ilen = lines.length; i < ilen; ++i) {\n    drawTextLine(ctx, lines[i], {\n      stroked: stroked,\n      filled: filled,\n      w: rect.w,\n      x: rect.x,\n      y: rect.y + rect.h * i\n    });\n  }\n}\n\nvar Label = function(config, ctx, el, index) {\n  var me = this;\n\n  me._config = config;\n  me._index = index;\n  me._model = null;\n  me._rects = null;\n  me._ctx = ctx;\n  me._el = el;\n};\n\nmerge(Label.prototype, {\n  /**\n   * @private\n   */\n  _modelize: function(display, lines, config, context) {\n    var me = this;\n    var index = me._index;\n    var font = toFont(resolve([config.font, {}], context, index));\n    var color = resolve([config.color, defaults$1.color], context, index);\n\n    return {\n      align: resolve([config.align, 'center'], context, index),\n      anchor: resolve([config.anchor, 'center'], context, index),\n      area: context.chart.chartArea,\n      backgroundColor: resolve([config.backgroundColor, null], context, index),\n      borderColor: resolve([config.borderColor, null], context, index),\n      borderRadius: resolve([config.borderRadius, 0], context, index),\n      borderWidth: resolve([config.borderWidth, 0], context, index),\n      clamp: resolve([config.clamp, false], context, index),\n      clip: resolve([config.clip, false], context, index),\n      color: color,\n      display: display,\n      font: font,\n      lines: lines,\n      offset: resolve([config.offset, 4], context, index),\n      opacity: resolve([config.opacity, 1], context, index),\n      origin: getScaleOrigin(me._el, context),\n      padding: toPadding(resolve([config.padding, 4], context, index)),\n      positioner: getPositioner(me._el),\n      rotation: resolve([config.rotation, 0], context, index) * (Math.PI / 180),\n      size: utils.textSize(me._ctx, lines, font),\n      textAlign: resolve([config.textAlign, 'start'], context, index),\n      textShadowBlur: resolve([config.textShadowBlur, 0], context, index),\n      textShadowColor: resolve([config.textShadowColor, color], context, index),\n      textStrokeColor: resolve([config.textStrokeColor, color], context, index),\n      textStrokeWidth: resolve([config.textStrokeWidth, 0], context, index)\n    };\n  },\n\n  update: function(context) {\n    var me = this;\n    var model = null;\n    var rects = null;\n    var index = me._index;\n    var config = me._config;\n    var value, label, lines;\n\n    // We first resolve the display option (separately) to avoid computing\n    // other options in case the label is hidden (i.e. display: false).\n    var display = resolve([config.display, true], context, index);\n\n    if (display) {\n      value = context.dataset.data[index];\n      label = valueOrDefault(callback(config.formatter, [value, context]), value);\n      lines = isNullOrUndef(label) ? [] : utils.toTextLines(label);\n\n      if (lines.length) {\n        model = me._modelize(display, lines, config, context);\n        rects = boundingRects(model);\n      }\n    }\n\n    me._model = model;\n    me._rects = rects;\n  },\n\n  geometry: function() {\n    return this._rects ? this._rects.frame : {};\n  },\n\n  rotation: function() {\n    return this._model ? this._model.rotation : 0;\n  },\n\n  visible: function() {\n    return this._model && this._model.opacity;\n  },\n\n  model: function() {\n    return this._model;\n  },\n\n  draw: function(chart, center) {\n    var me = this;\n    var ctx = chart.ctx;\n    var model = me._model;\n    var rects = me._rects;\n    var area;\n\n    if (!this.visible()) {\n      return;\n    }\n\n    ctx.save();\n\n    if (model.clip) {\n      area = model.area;\n      ctx.beginPath();\n      ctx.rect(\n        area.left,\n        area.top,\n        area.right - area.left,\n        area.bottom - area.top);\n      ctx.clip();\n    }\n\n    ctx.globalAlpha = utils.bound(0, model.opacity, 1);\n    ctx.translate(rasterize(center.x), rasterize(center.y));\n    ctx.rotate(model.rotation);\n\n    drawFrame(ctx, rects.frame, model);\n    drawText(ctx, model.lines, rects.text, model);\n\n    ctx.restore();\n  }\n});\n\nvar MIN_INTEGER = Number.MIN_SAFE_INTEGER || -9007199254740991; // eslint-disable-line es/no-number-minsafeinteger\nvar MAX_INTEGER = Number.MAX_SAFE_INTEGER || 9007199254740991;  // eslint-disable-line es/no-number-maxsafeinteger\n\nfunction rotated(point, center, angle) {\n  var cos = Math.cos(angle);\n  var sin = Math.sin(angle);\n  var cx = center.x;\n  var cy = center.y;\n\n  return {\n    x: cx + cos * (point.x - cx) - sin * (point.y - cy),\n    y: cy + sin * (point.x - cx) + cos * (point.y - cy)\n  };\n}\n\nfunction projected(points, axis) {\n  var min = MAX_INTEGER;\n  var max = MIN_INTEGER;\n  var origin = axis.origin;\n  var i, pt, vx, vy, dp;\n\n  for (i = 0; i < points.length; ++i) {\n    pt = points[i];\n    vx = pt.x - origin.x;\n    vy = pt.y - origin.y;\n    dp = axis.vx * vx + axis.vy * vy;\n    min = Math.min(min, dp);\n    max = Math.max(max, dp);\n  }\n\n  return {\n    min: min,\n    max: max\n  };\n}\n\nfunction toAxis(p0, p1) {\n  var vx = p1.x - p0.x;\n  var vy = p1.y - p0.y;\n  var ln = Math.sqrt(vx * vx + vy * vy);\n\n  return {\n    vx: (p1.x - p0.x) / ln,\n    vy: (p1.y - p0.y) / ln,\n    origin: p0,\n    ln: ln\n  };\n}\n\nvar HitBox = function() {\n  this._rotation = 0;\n  this._rect = {\n    x: 0,\n    y: 0,\n    w: 0,\n    h: 0\n  };\n};\n\nmerge(HitBox.prototype, {\n  center: function() {\n    var r = this._rect;\n    return {\n      x: r.x + r.w / 2,\n      y: r.y + r.h / 2\n    };\n  },\n\n  update: function(center, rect, rotation) {\n    this._rotation = rotation;\n    this._rect = {\n      x: rect.x + center.x,\n      y: rect.y + center.y,\n      w: rect.w,\n      h: rect.h\n    };\n  },\n\n  contains: function(point) {\n    var me = this;\n    var margin = 1;\n    var rect = me._rect;\n\n    point = rotated(point, me.center(), -me._rotation);\n\n    return !(point.x < rect.x - margin\n      || point.y < rect.y - margin\n      || point.x > rect.x + rect.w + margin * 2\n      || point.y > rect.y + rect.h + margin * 2);\n  },\n\n  // Separating Axis Theorem\n  // https://gamedevelopment.tutsplus.com/tutorials/collision-detection-using-the-separating-axis-theorem--gamedev-169\n  intersects: function(other) {\n    var r0 = this._points();\n    var r1 = other._points();\n    var axes = [\n      toAxis(r0[0], r0[1]),\n      toAxis(r0[0], r0[3])\n    ];\n    var i, pr0, pr1;\n\n    if (this._rotation !== other._rotation) {\n      // Only separate with r1 axis if the rotation is different,\n      // else it's enough to separate r0 and r1 with r0 axis only!\n      axes.push(\n        toAxis(r1[0], r1[1]),\n        toAxis(r1[0], r1[3])\n      );\n    }\n\n    for (i = 0; i < axes.length; ++i) {\n      pr0 = projected(r0, axes[i]);\n      pr1 = projected(r1, axes[i]);\n\n      if (pr0.max < pr1.min || pr1.max < pr0.min) {\n        return false;\n      }\n    }\n\n    return true;\n  },\n\n  /**\n   * @private\n   */\n  _points: function() {\n    var me = this;\n    var rect = me._rect;\n    var angle = me._rotation;\n    var center = me.center();\n\n    return [\n      rotated({x: rect.x, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y}, center, angle),\n      rotated({x: rect.x + rect.w, y: rect.y + rect.h}, center, angle),\n      rotated({x: rect.x, y: rect.y + rect.h}, center, angle)\n    ];\n  }\n});\n\nfunction coordinates(el, model, geometry) {\n  var point = model.positioner(el, model);\n  var vx = point.vx;\n  var vy = point.vy;\n\n  if (!vx && !vy) {\n    // if aligned center, we don't want to offset the center point\n    return {x: point.x, y: point.y};\n  }\n\n  var w = geometry.w;\n  var h = geometry.h;\n\n  // take in account the label rotation\n  var rotation = model.rotation;\n  var dx = Math.abs(w / 2 * Math.cos(rotation)) + Math.abs(h / 2 * Math.sin(rotation));\n  var dy = Math.abs(w / 2 * Math.sin(rotation)) + Math.abs(h / 2 * Math.cos(rotation));\n\n  // scale the unit vector (vx, vy) to get at least dx or dy equal to\n  // w or h respectively (else we would calculate the distance to the\n  // ellipse inscribed in the bounding rect)\n  var vs = 1 / Math.max(Math.abs(vx), Math.abs(vy));\n  dx *= vx * vs;\n  dy *= vy * vs;\n\n  // finally, include the explicit offset\n  dx += model.offset * vx;\n  dy += model.offset * vy;\n\n  return {\n    x: point.x + dx,\n    y: point.y + dy\n  };\n}\n\nfunction collide(labels, collider) {\n  var i, j, s0, s1;\n\n  // IMPORTANT Iterate in the reverse order since items at the end of the\n  // list have an higher weight/priority and thus should be less impacted\n  // by the overlapping strategy.\n\n  for (i = labels.length - 1; i >= 0; --i) {\n    s0 = labels[i].$layout;\n\n    for (j = i - 1; j >= 0 && s0._visible; --j) {\n      s1 = labels[j].$layout;\n\n      if (s1._visible && s0._box.intersects(s1._box)) {\n        collider(s0, s1);\n      }\n    }\n  }\n\n  return labels;\n}\n\nfunction compute(labels) {\n  var i, ilen, label, state, geometry, center, proxy;\n\n  // Initialize labels for overlap detection\n  for (i = 0, ilen = labels.length; i < ilen; ++i) {\n    label = labels[i];\n    state = label.$layout;\n\n    if (state._visible) {\n      // Chart.js 3 removed el._model in favor of getProps(), making harder to\n      // abstract reading values in positioners. Also, using string arrays to\n      // read values (i.e. var {a,b,c} = el.getProps([\"a\",\"b\",\"c\"])) would make\n      // positioners inefficient in the normal case (i.e. not the final values)\n      // and the code a bit ugly, so let's use a Proxy instead.\n      proxy = new Proxy(label._el, {get: (el, p) => el.getProps([p], true)[p]});\n\n      geometry = label.geometry();\n      center = coordinates(proxy, label.model(), geometry);\n      state._box.update(center, geometry, label.rotation());\n    }\n  }\n\n  // Auto hide overlapping labels\n  return collide(labels, function(s0, s1) {\n    var h0 = s0._hidable;\n    var h1 = s1._hidable;\n\n    if ((h0 && h1) || h1) {\n      s1._visible = false;\n    } else if (h0) {\n      s0._visible = false;\n    }\n  });\n}\n\nvar layout = {\n  prepare: function(datasets) {\n    var labels = [];\n    var i, j, ilen, jlen, label;\n\n    for (i = 0, ilen = datasets.length; i < ilen; ++i) {\n      for (j = 0, jlen = datasets[i].length; j < jlen; ++j) {\n        label = datasets[i][j];\n        labels.push(label);\n        label.$layout = {\n          _box: new HitBox(),\n          _hidable: false,\n          _visible: true,\n          _set: i,\n          _idx: label._index\n        };\n      }\n    }\n\n    // TODO New `z` option: labels with a higher z-index are drawn\n    // of top of the ones with a lower index. Lowest z-index labels\n    // are also discarded first when hiding overlapping labels.\n    labels.sort(function(a, b) {\n      var sa = a.$layout;\n      var sb = b.$layout;\n\n      return sa._idx === sb._idx\n        ? sb._set - sa._set\n        : sb._idx - sa._idx;\n    });\n\n    this.update(labels);\n\n    return labels;\n  },\n\n  update: function(labels) {\n    var dirty = false;\n    var i, ilen, label, model, state;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      model = label.model();\n      state = label.$layout;\n      state._hidable = model && model.display === 'auto';\n      state._visible = label.visible();\n      dirty |= state._hidable;\n    }\n\n    if (dirty) {\n      compute(labels);\n    }\n  },\n\n  lookup: function(labels, point) {\n    var i, state;\n\n    // IMPORTANT Iterate in the reverse order since items at the end of\n    // the list have an higher z-index, thus should be picked first.\n\n    for (i = labels.length - 1; i >= 0; --i) {\n      state = labels[i].$layout;\n\n      if (state && state._visible && state._box.contains(point)) {\n        return labels[i];\n      }\n    }\n\n    return null;\n  },\n\n  draw: function(chart, labels) {\n    var i, ilen, label, state, geometry, center;\n\n    for (i = 0, ilen = labels.length; i < ilen; ++i) {\n      label = labels[i];\n      state = label.$layout;\n\n      if (state._visible) {\n        geometry = label.geometry();\n        center = coordinates(label._el, label.model(), geometry);\n        state._box.update(center, geometry, label.rotation());\n        label.draw(chart, center);\n      }\n    }\n  }\n};\n\nvar formatter = function(value) {\n  if (isNullOrUndef(value)) {\n    return null;\n  }\n\n  var label = value;\n  var keys, klen, k;\n  if (isObject(value)) {\n    if (!isNullOrUndef(value.label)) {\n      label = value.label;\n    } else if (!isNullOrUndef(value.r)) {\n      label = value.r;\n    } else {\n      label = '';\n      keys = Object.keys(value);\n      for (k = 0, klen = keys.length; k < klen; ++k) {\n        label += (k !== 0 ? ', ' : '') + keys[k] + ': ' + value[keys[k]];\n      }\n    }\n  }\n\n  return '' + label;\n};\n\n/**\n * IMPORTANT: make sure to also update tests and TypeScript definition\n * files (`/test/specs/defaults.spec.js` and `/types/options.d.ts`)\n */\n\nvar defaults = {\n  align: 'center',\n  anchor: 'center',\n  backgroundColor: null,\n  borderColor: null,\n  borderRadius: 0,\n  borderWidth: 0,\n  clamp: false,\n  clip: false,\n  color: undefined,\n  display: true,\n  font: {\n    family: undefined,\n    lineHeight: 1.2,\n    size: undefined,\n    style: undefined,\n    weight: null\n  },\n  formatter: formatter,\n  labels: undefined,\n  listeners: {},\n  offset: 4,\n  opacity: 1,\n  padding: {\n    top: 4,\n    right: 4,\n    bottom: 4,\n    left: 4\n  },\n  rotation: 0,\n  textAlign: 'start',\n  textStrokeColor: undefined,\n  textStrokeWidth: 0,\n  textShadowBlur: 0,\n  textShadowColor: undefined\n};\n\n/**\n * @see https://github.com/chartjs/Chart.js/issues/4176\n */\n\nvar EXPANDO_KEY = '$datalabels';\nvar DEFAULT_KEY = '$default';\n\nfunction configure(dataset, options) {\n  var override = dataset.datalabels;\n  var listeners = {};\n  var configs = [];\n  var labels, keys;\n\n  if (override === false) {\n    return null;\n  }\n  if (override === true) {\n    override = {};\n  }\n\n  options = merge({}, [options, override]);\n  labels = options.labels || {};\n  keys = Object.keys(labels);\n  delete options.labels;\n\n  if (keys.length) {\n    keys.forEach(function(key) {\n      if (labels[key]) {\n        configs.push(merge({}, [\n          options,\n          labels[key],\n          {_key: key}\n        ]));\n      }\n    });\n  } else {\n    // Default label if no \"named\" label defined.\n    configs.push(options);\n  }\n\n  // listeners: {<event-type>: {<label-key>: <fn>}}\n  listeners = configs.reduce(function(target, config) {\n    each(config.listeners || {}, function(fn, event) {\n      target[event] = target[event] || {};\n      target[event][config._key || DEFAULT_KEY] = fn;\n    });\n\n    delete config.listeners;\n    return target;\n  }, {});\n\n  return {\n    labels: configs,\n    listeners: listeners\n  };\n}\n\nfunction dispatchEvent(chart, listeners, label, event) {\n  if (!listeners) {\n    return;\n  }\n\n  var context = label.$context;\n  var groups = label.$groups;\n  var callback$1;\n\n  if (!listeners[groups._set]) {\n    return;\n  }\n\n  callback$1 = listeners[groups._set][groups._key];\n  if (!callback$1) {\n    return;\n  }\n\n  if (callback(callback$1, [context, event]) === true) {\n    // Users are allowed to tweak the given context by injecting values that can be\n    // used in scriptable options to display labels differently based on the current\n    // event (e.g. highlight an hovered label). That's why we update the label with\n    // the output context and schedule a new chart render by setting it dirty.\n    chart[EXPANDO_KEY]._dirty = true;\n    label.update(context);\n  }\n}\n\nfunction dispatchMoveEvents(chart, listeners, previous, label, event) {\n  var enter, leave;\n\n  if (!previous && !label) {\n    return;\n  }\n\n  if (!previous) {\n    enter = true;\n  } else if (!label) {\n    leave = true;\n  } else if (previous !== label) {\n    leave = enter = true;\n  }\n\n  if (leave) {\n    dispatchEvent(chart, listeners.leave, previous, event);\n  }\n  if (enter) {\n    dispatchEvent(chart, listeners.enter, label, event);\n  }\n}\n\nfunction handleMoveEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var listeners = expando._listeners;\n  var previous, label;\n\n  if (!listeners.enter && !listeners.leave) {\n    return;\n  }\n\n  if (event.type === 'mousemove') {\n    label = layout.lookup(expando._labels, event);\n  } else if (event.type !== 'mouseout') {\n    return;\n  }\n\n  previous = expando._hovered;\n  expando._hovered = label;\n  dispatchMoveEvents(chart, listeners, previous, label, event);\n}\n\nfunction handleClickEvents(chart, event) {\n  var expando = chart[EXPANDO_KEY];\n  var handlers = expando._listeners.click;\n  var label = handlers && layout.lookup(expando._labels, event);\n  if (label) {\n    dispatchEvent(chart, handlers, label, event);\n  }\n}\n\nvar plugin = {\n  id: 'datalabels',\n\n  defaults: defaults,\n\n  beforeInit: function(chart) {\n    chart[EXPANDO_KEY] = {\n      _actives: []\n    };\n  },\n\n  beforeUpdate: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    expando._listened = false;\n    expando._listeners = {};     // {<event-type>: {<dataset-index>: {<label-key>: <fn>}}}\n    expando._datasets = [];      // per dataset labels: [Label[]]\n    expando._labels = [];        // layouted labels: Label[]\n  },\n\n  afterDatasetUpdate: function(chart, args, options) {\n    var datasetIndex = args.index;\n    var expando = chart[EXPANDO_KEY];\n    var labels = expando._datasets[datasetIndex] = [];\n    var visible = chart.isDatasetVisible(datasetIndex);\n    var dataset = chart.data.datasets[datasetIndex];\n    var config = configure(dataset, options);\n    var elements = args.meta.data || [];\n    var ctx = chart.ctx;\n    var i, j, ilen, jlen, cfg, key, el, label;\n\n    ctx.save();\n\n    for (i = 0, ilen = elements.length; i < ilen; ++i) {\n      el = elements[i];\n      el[EXPANDO_KEY] = [];\n\n      if (visible && el && chart.getDataVisibility(i) && !el.skip) {\n        for (j = 0, jlen = config.labels.length; j < jlen; ++j) {\n          cfg = config.labels[j];\n          key = cfg._key;\n\n          label = new Label(cfg, ctx, el, i);\n          label.$groups = {\n            _set: datasetIndex,\n            _key: key || DEFAULT_KEY\n          };\n          label.$context = {\n            active: false,\n            chart: chart,\n            dataIndex: i,\n            dataset: dataset,\n            datasetIndex: datasetIndex\n          };\n\n          label.update(label.$context);\n          el[EXPANDO_KEY].push(label);\n          labels.push(label);\n        }\n      }\n    }\n\n    ctx.restore();\n\n    // Store listeners at the chart level and per event type to optimize\n    // cases where no listeners are registered for a specific event.\n    merge(expando._listeners, config.listeners, {\n      merger: function(event, target, source) {\n        target[event] = target[event] || {};\n        target[event][args.index] = source[event];\n        expando._listened = true;\n      }\n    });\n  },\n\n  afterUpdate: function(chart) {\n    chart[EXPANDO_KEY]._labels = layout.prepare(chart[EXPANDO_KEY]._datasets);\n  },\n\n  // Draw labels on top of all dataset elements\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/29\n  // https://github.com/chartjs/chartjs-plugin-datalabels/issues/32\n  afterDatasetsDraw: function(chart) {\n    layout.draw(chart, chart[EXPANDO_KEY]._labels);\n  },\n\n  beforeEvent: function(chart, args) {\n    // If there is no listener registered for this chart, `listened` will be false,\n    // meaning we can immediately ignore the incoming event and avoid useless extra\n    // computation for users who don't implement label interactions.\n    if (chart[EXPANDO_KEY]._listened) {\n      var event = args.event;\n      switch (event.type) {\n      case 'mousemove':\n      case 'mouseout':\n        handleMoveEvents(chart, event);\n        break;\n      case 'click':\n        handleClickEvents(chart, event);\n        break;\n      }\n    }\n  },\n\n  afterEvent: function(chart) {\n    var expando = chart[EXPANDO_KEY];\n    var previous = expando._actives;\n    var actives = expando._actives = chart.getActiveElements();\n    var updates = utils.arrayDiff(previous, actives);\n    var i, ilen, j, jlen, update, label, labels;\n\n    for (i = 0, ilen = updates.length; i < ilen; ++i) {\n      update = updates[i];\n      if (update[1]) {\n        labels = update[0].element[EXPANDO_KEY] || [];\n        for (j = 0, jlen = labels.length; j < jlen; ++j) {\n          label = labels[j];\n          label.$context.active = (update[1] === 1);\n          label.update(label.$context);\n        }\n      }\n    }\n\n    if (expando._dirty || updates.length) {\n      layout.update(expando._labels);\n      chart.render();\n    }\n\n    delete expando._dirty;\n  }\n};\n\nexport { plugin as default };\n","<script setup>\r\nimport { ref, onMounted, nextTick, defineExpose } from \"vue\";\r\nimport { Chart, registerables } from \"chart.js\";\r\nimport ChartDataLabels from \"chartjs-plugin-datalabels\";\r\nimport axios from \"axios\";\r\n\r\nChart.register(...registerables, ChartDataLabels);\r\n\r\nconst props = defineProps({\r\n  settings: {\r\n    type: Object,\r\n    required: true,\r\n  },\r\n});\r\n\r\nconst colors = {\r\n  green: \"#10b981\",\r\n  orange: \"#ffa600\",\r\n  red: \"#ef4444\",\r\n};\r\n\r\nconst chart = ref(null);\r\nconst chartRef = ref(null);\r\n\r\nconst fetchData = async () => {\r\n    let response;\r\n    if(props.settings.api.params){\r\n        response = await axios.get(props.settings.api.url, {\r\n            params: {\r\n                params: props.settings.api.params,\r\n            },\r\n        });\r\n    } else{\r\n        response = await axios.get(props.settings.api.url);\r\n    }\r\n    let labels;\r\n    if(props.settings.columns.label){\r\n        labels = response.data.map(\r\n            (row) => row[props.settings.columns.label]\r\n        );\r\n    } else {\r\n        labels = props.settings.labels\r\n    }\r\n    const values = {};\r\n\r\n    props.settings.columns.datas.forEach((col) => {\r\n        values[col] = response.data.map((row) => parseInt(row[col], 10) || 0);\r\n    });\r\n    return { labels, values };\r\n};\r\n\r\nconst generateDatasets = (datas) => {\r\n    if(props.settings.type === 'line'){\r\n        return props.settings.columns.datas.map((column, index) => ({\r\n            label: props.settings.labels[index],\r\n            data: datas[column],\r\n            borderColor: colors[props.settings.colors[index]],\r\n            tension: 0,\r\n            fill: false,\r\n        }));\r\n    } else if(props.settings.type === 'bar'){\r\n        return props.settings.columns.datas.map((column, index) => ({\r\n            label: props.settings.labels[index],\r\n            data: datas[column],\r\n            backgroundColor: colors[props.settings.colors[index]],\r\n        }));\r\n    } else if(props.settings.type === 'pie'){\r\n        let dataset = {\r\n            data: [],\r\n            backgroundColor: []\r\n        };\r\n        props.settings.columns.datas.forEach((column, index) => {\r\n            dataset.data.push(datas[column][0]);\r\n            dataset.backgroundColor.push(props.settings.colors[index]);\r\n        });\r\n        return [dataset];\r\n    }\r\n};\r\nconst generateOptions = () => {\r\n    if([\"line\", \"bar\"].includes(props.settings.type)){\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n                datalabels: {\r\n                    display: false,\r\n                },\r\n            },\r\n        }\r\n    } else if([\"pie\"].includes(props.settings.type)){\r\n        return {\r\n            responsive: true,\r\n            maintainAspectRatio: false,\r\n            plugins: {\r\n                datalabels: {\r\n                color: \"#fff\",\r\n                font: { weight: \"bold\", size: 14 },\r\n                formatter: (value) => value,\r\n                },\r\n            },\r\n        }\r\n    }\r\n}\r\n\r\nconst generatePlugins = () => {\r\n    if([\"line\", \"bar\"].includes(props.settings.type)) return null;\r\n    else if([\"pie\"].includes(props.settings.type)) return [ChartDataLabels];\r\n}\r\n\r\nconst renderChart = async () => {\r\n  await nextTick();\r\n  if (!chartRef.value) return;\r\n\r\n  const { labels, values } = await fetchData();\r\n  console.log(\"values : \", values);\r\n\r\n  if (chart.value) {\r\n    chart.value.destroy();\r\n  }\r\n\r\n  chart.value = new Chart(chartRef.value.getContext(\"2d\"), {\r\n    type: props.settings.type,\r\n    data: {\r\n      labels: labels,\r\n      datasets: generateDatasets(values),\r\n    },\r\n    options: generateOptions(),\r\n    plugins: generatePlugins()\r\n  });\r\n};\r\n\r\ndefineExpose({\r\n  renderChart,\r\n})\r\n\r\nonMounted(() => {\r\n  renderChart();\r\n});\r\n</script>\r\n\r\n<template>\r\n    <div class=\"card h-100\">\r\n        <div class=\"card-body\">\r\n        <h5 class=\"card-title text-danger\">{{ props.settings.title }}</h5>\r\n        <canvas ref=\"chartRef\" class=\"w-100\" style=\"height: 300px;\"></canvas>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n<style scoped>\r\ncanvas {\r\n  width: 100% !important;\r\n  max-height: 300px;\r\n}\r\n.nav-tabs .nav-link.active {\r\n  background-color: #dc3545;\r\n  color: #fff;\r\n}\r\n.nav-tabs .nav-link {\r\n  color: #000; /* Warna hitam untuk text tab tidak aktif */\r\n}\r\n.card {\r\n  width: 100%;\r\n}\r\n</style>"],"names":["round","v","lim","l","h","Math","max","min","p2b","n2b","b2n","n2p","map$1","A","B","C","D","E","F","a","b","c","d","e","f","hex","h1","h2","eq","hexString","r","g","isShort","alpha","HUE_RE","hsl2rgbn","s","n","k","hsv2rgbn","hwb2rgbn","w","rgb","i","rgb2hsl","hueValue","calln","Array","isArray","map","hsl2rgb","hue","hueParse","str","m","exec","p1","p2","hwb2rgb","hsv2rgb","x","Z","Y","X","W","V","U","T","S","R","Q","P","O","N","M","L","K","G","H","I","J","names$1","OiceXe","antiquewEte","aqua","aquamarRe","azuY","beige","bisque","black","blanKedOmond","Xe","XeviTet","bPwn","burlywood","caMtXe","KartYuse","KocTate","cSO","cSnflowerXe","cSnsilk","crimson","cyan","xXe","xcyan","xgTMnPd","xWay","xgYF","xgYy","xkhaki","xmagFta","xTivegYF","xSange","xScEd","xYd","xsOmon","xsHgYF","xUXe","xUWay","xUgYy","xQe","xviTet","dAppRk","dApskyXe","dimWay","dimgYy","dodgerXe","fiYbrick","flSOwEte","foYstWAn","fuKsia","gaRsbSo","ghostwEte","gTd","gTMnPd","Way","gYF","gYFLw","gYy","honeyMw","hotpRk","RdianYd","Rdigo","ivSy","khaki","lavFMr","lavFMrXsh","lawngYF","NmoncEffon","ZXe","ZcSO","Zcyan","ZgTMnPdLw","ZWay","ZgYF","ZgYy","ZpRk","ZsOmon","ZsHgYF","ZskyXe","ZUWay","ZUgYy","ZstAlXe","ZLw","lime","limegYF","lRF","magFta","maPon","VaquamarRe","VXe","VScEd","VpurpN","VsHgYF","VUXe","VsprRggYF","VQe","VviTetYd","midnightXe","mRtcYam","mistyPse","moccasR","navajowEte","navy","Tdlace","Tive","TivedBb","Sange","SangeYd","ScEd","pOegTMnPd","pOegYF","pOeQe","pOeviTetYd","papayawEp","pHKpuff","peru","pRk","plum","powMrXe","purpN","YbeccapurpN","Yd","Psybrown","PyOXe","saddNbPwn","sOmon","sandybPwn","sHgYF","sHshell","siFna","silver","skyXe","UXe","UWay","UgYy","snow","sprRggYF","stAlXe","tan","teO","tEstN","tomato","Qe","viTet","JHt","wEte","wEtesmoke","Lw","LwgYF","names","nameParse","unpacked","keys","Object","tkeys","j","ok","nk","length","replace","parseInt","unpack","transparent","toLowerCase","RGB_RE","to","pow","from","modHSL","ratio","tmp","clone","proto","assign","fromObject","input","functionParse","charAt","rgbParse","Color","constructor","type","ret","len","this","_rgb","_valid","valid","obj","rgbString","hslString","mix","color","weight","c1","c2","w2","p","w1","interpolate","t","rgb1","rgb2","clearer","greyscale","val","opaquer","negate","lighten","darken","saturate","desaturate","rotate","deg","noop","uid","id","isNullOrUndef","value","prototype","toString","call","slice","isObject","isNumberFinite","Number","isFinite","finiteOrDefault","defaultValue","valueOrDefault","toDimension","dimension","endsWith","parseFloat","callback","fn","args","thisArg","apply","each","loopable","reverse","_elementsEqual","a0","a1","ilen","v0","v1","datasetIndex","index","source","target","create","klen","isValidKey","key","indexOf","_merger","options","tval","sval","merge","sources","merger","current","mergeIf","_mergerIf","hasOwnProperty","keyResolvers","o","y","resolveObjectKey","resolver","parts","split","part","push","_splitKey","_getKeyResolver","_capitalize","toUpperCase","defined","isFunction","setsEqual","size","item","has","PI","TAU","PITAU","INFINITY","POSITIVE_INFINITY","RAD_PER_DEG","HALF_PI","QUARTER_PI","TWO_THIRDS_PI","log10","sign","almostEquals","epsilon","abs","niceNum","range","roundedRange","niceRange","floor","fraction","isNumber","Symbol","toPrimitive","isNonPrimitive","isNaN","_setMinAndMaxByKey","array","property","toRadians","degrees","toDegrees","radians","_decimalPlaces","getAngleFromPoint","centrePoint","anglePoint","distanceFromXCenter","distanceFromYCenter","radialDistanceFromCenter","sqrt","angle","atan2","distance","distanceBetweenPoints","pt1","pt2","_angleDiff","_normalizeAngle","_angleBetween","start","end","sameAngleIsFullCircle","angleToStart","angleToEnd","startToAngle","endToAngle","_limitValue","_isBetween","_lookup","table","cmp","mid","hi","lo","_lookupByKey","last","ti","_rlookupByKey","arrayEvents","unlistenArrayEvents","listener","stub","_chartjs","listeners","splice","forEach","_arrayUnique","items","set","Set","requestAnimFrame","window","requestAnimationFrame","throttled","argsToUse","ticking","_toLeftRightCenter","align","_alignStartEnd","_getStartAndCountOfVisiblePoints","meta","points","animationsDisabled","pointCount","count","_sorted","iScale","vScale","_parsed","spanGaps","dataset","axis","minDefined","maxDefined","getUserBounds","getPixelForValue","distanceToDefinedLo","findIndex","point","distanceToDefinedHi","_scaleRangesChanged","xScale","yScale","_scaleRanges","newRanges","xmin","xmax","ymin","ymax","changed","atEdge","elasticIn","sin","elasticOut","effects","linear","easeInQuad","easeOutQuad","easeInOutQuad","easeInCubic","easeOutCubic","easeInOutCubic","easeInQuart","easeOutQuart","easeInOutQuart","easeInQuint","easeOutQuint","easeInOutQuint","easeInSine","cos","easeOutSine","easeInOutSine","easeInExpo","easeOutExpo","easeInOutExpo","easeInCirc","easeOutCirc","easeInOutCirc","easeInElastic","easeOutElastic","easeInOutElastic","easeInBack","easeOutBack","easeInOutBack","easeInBounce","easeOutBounce","easeInOutBounce","isPatternOrGradient","getHoverColor","numbers","colors","intlCache","Map","formatNumber","num","locale","cacheKey","JSON","stringify","formatter","get","Intl","NumberFormat","getNumberFormat","format","formatters","values","numeric","tickValue","ticks","chart","notation","delta","maxTick","calculateDelta","logDelta","numDecimal","minimumFractionDigits","maximumFractionDigits","logarithmic","remain","significand","includes","Ticks","overrides","descriptors","getScope$1","node","root","scope","Defaults","_descriptors","_appliers","animation","backgroundColor","borderColor","datasets","devicePixelRatio","context","platform","getDevicePixelRatio","elements","events","font","family","style","lineHeight","hover","hoverBackgroundColor","ctx","hoverBorderColor","hoverColor","indexAxis","interaction","mode","intersect","includeInvisible","maintainAspectRatio","onHover","onClick","parsing","plugins","responsive","scale","scales","showLine","drawActiveElementsOnTop","describe","override","route","name","targetScope","targetName","scopeObject","targetScopeObject","privateName","defineProperties","writable","enumerable","local","appliers","defaults","_scriptable","startsWith","_indexable","_fallback","delay","duration","easing","loop","properties","active","resize","show","animations","visible","hide","autoPadding","padding","top","right","bottom","left","display","offset","beginAtZero","bounds","clip","grace","grid","lineWidth","drawOnChartArea","drawTicks","tickLength","tickWidth","_ctx","tickColor","border","dash","dashOffset","width","title","text","minRotation","maxRotation","mirror","textStrokeWidth","textStrokeColor","autoSkip","autoSkipPadding","labelOffset","minor","major","crossAlign","showLabelBackdrop","backdropColor","backdropPadding","_measureText","data","gc","longest","string","textWidth","measureText","_longestText","arrayOfThings","cache","garbageCollect","save","jlen","thing","nestedThing","restore","gcLen","_alignPixel","pixel","currentDevicePixelRatio","halfWidth","clearCanvas","canvas","getContext","resetTransform","clearRect","height","drawPoint","drawPointLegend","xOffset","yOffset","cornerRadius","xOffsetW","yOffsetW","pointStyle","rotation","radius","rad","translate","drawImage","beginPath","ellipse","arc","closePath","moveTo","lineTo","SQRT1_2","rect","fill","borderWidth","stroke","_isPointInArea","area","margin","clipArea","unclipArea","_steppedLineTo","previous","flip","midpoint","_bezierCurveTo","bezierCurveTo","cp1x","cp2x","cp1y","cp2y","decorateText","line","opts","strikethrough","underline","metrics","actualBoundingBoxLeft","actualBoundingBoxRight","actualBoundingBoxAscent","actualBoundingBoxDescent","yDecoration","strokeStyle","fillStyle","decorationWidth","drawBackdrop","oldColor","fillRect","renderText","lines","strokeWidth","strokeColor","translation","textAlign","textBaseline","setRenderOpts","backdrop","strokeText","maxWidth","fillText","addRoundedRectPath","topLeft","bottomLeft","bottomRight","topRight","LINE_HEIGHT","FONT_STYLE","toLineHeight","matches","match","_readValueToProps","props","objProps","read","prop","toTRBL","toTRBLCorners","toPadding","toFont","fallback","toFontString","resolve","inputs","info","createContext","parentContext","_createResolver","scopes","prefixes","rootScopes","getTarget","finalRootScopes","_resolve","toStringTag","_cacheable","_scopes","_rootScopes","_getTarget","Proxy","deleteProperty","_keys","_cached","proxy","prefix","readKey","needsSubResolver","createSubResolver","_resolveWithPrefixes","getOwnPropertyDescriptor","Reflect","getPrototypeOf","getKeysFromAllScopes","ownKeys","storage","_storage","_attachContext","subProxy","descriptorDefaults","_proxy","_context","_subProxy","_stack","setContext","receiver","isScriptable","getValue","Error","join","add","delete","_resolveScriptable","isIndexable","arr","filter","_resolveArray","_resolveWithContext","allKeys","configurable","scriptable","indexable","_allKeys","resolveFallback","getScope","parent","addScopes","parentScopes","parentFallback","allScopes","addScopesFromKey","subGetTarget","resolveKeysFromAllScopes","_parseObjectDataRadialScale","_parsing","parsed","parse","EPSILON","getPoint","skip","getValueAxis","splineCurve","firstPoint","middlePoint","afterPoint","next","d01","d12","s01","s12","fa","fb","splineCurveMonotone","valueAxis","pointsLen","deltaK","mK","pointBefore","pointCurrent","pointAfter","slopeDelta","alphaK","betaK","tauK","squaredMagnitude","monotoneAdjust","iPixel","vPixel","monotoneCompute","capControlPoint","pt","_updateBezierControlPoints","controlPoints","cubicInterpolationMode","prev","tension","capBezierPoints","inArea","inAreaPrev","inAreaNext","_isDomSupported","document","_getParentNode","domNode","parentNode","host","parseMaxStyle","styleValue","parentProperty","valueInPixels","getComputedStyle","element","ownerDocument","defaultView","positions","getPositionedStyle","styles","suffix","result","pos","getRelativePosition","event","borderBox","boxSizing","paddings","borders","box","touches","offsetX","offsetY","shadowRoot","useOffsetPos","getBoundingClientRect","clientX","clientY","getCanvasPosition","round1","getMaximumSize","bbWidth","bbHeight","aspectRatio","margins","maxHeight","containerSize","container","containerStyle","containerBorder","containerPadding","clientWidth","clientHeight","getContainerSize","retinaScale","forceRatio","forceStyle","pixelRatio","deviceHeight","deviceWidth","setTransform","supportsEventListenerOptions","passiveSupported","passive","addEventListener","removeEventListener","readUsedSize","el","getPropertyValue","getStyle","_pointInLine","_steppedInterpolation","_bezierInterpolation","cp1","cp2","getRtlAdapter","rtl","rectX","setWidth","xPlus","leftForLtr","itemWidth","getRightToLeftAdapter","_itemWidth","overrideTextDirection","direction","original","getPropertyPriority","setProperty","prevTextDirection","restoreTextDirection","propertyFn","between","compare","normalize","normalizeSegment","_boundSegment","segment","startBound","endBound","getSegment","prevValue","inside","subStart","shouldStart","shouldStop","_boundSegments","segments","sub","splitByStyles","segmentOptions","chartContext","_chart","baseStyle","readStyle","_datasetIndex","prevStyle","addStyle","st","dir","p0","p0DataIndex","p1DataIndex","styleChanged","doSplitByStyles","borderCapStyle","borderDash","borderDashOffset","borderJoinStyle","replacer","getSizeForArea","chartArea","field","getDatasetClipArea","_clip","disabled","getDatasetArea","Animator","_request","_charts","_running","_lastDate","_notify","anims","date","callbacks","numSteps","initial","currentStep","_refresh","_update","Date","now","remaining","running","draw","_active","_total","tick","pop","_getAnims","charts","complete","progress","listen","cb","reduce","acc","cur","_duration","stop","cancel","remove","animator","interpolators","boolean","factor","c0","number","Animation","cfg","currentValue","_fn","_easing","_start","_loop","_target","_prop","_from","_to","_promises","update","elapsed","wait","promises","Promise","res","rej","resolved","method","Animations","config","_properties","configure","animationOptions","animatedProps","getOwnPropertyNames","option","_animateOptions","newOptions","$shared","$animations","resolveTargetOptions","_createAnimations","anim","all","awaitAll","then","scaleClip","allowedOverflow","getSortedDatasetIndices","filterVisible","metasets","_getSortedDatasetMetas","applyStack","stack","dsIndex","singleMode","otherValue","found","isStacked","stacked","getOrCreateStack","stacks","stackKey","indexValue","subStack","getLastIndexInStack","positive","getMatchingVisibleMetas","updateStacks","controller","_cachedMeta","_stacks","iAxis","vAxis","indexScale","valueScale","getStackKey","_top","_bottom","_visualValues","getFirstScaleId","shift","clearStacks","isDirectUpdateMode","cloneIfNotShared","cached","shared","DatasetController","_cachedDataOpts","getMeta","_type","_data","_objectData","_sharedOptions","_drawStart","_drawCount","enableOptionSharing","supportsDecimation","$context","_syncList","datasetElementType","dataElementType","initialize","linkScales","_stacked","addElements","isPluginEnabled","updateIndex","getDataset","chooseId","xid","xAxisID","yid","yAxisID","rid","rAxisID","iid","iAxisID","vid","vAxisID","getScaleForId","rScale","getDatasetMeta","scaleID","_getOtherScale","reset","_destroy","_dataCheck","iAxisKey","vAxisKey","adata","convertObjectDataToArray","isExtensible","defineProperty","base","object","buildOrUpdateElements","resetNewElements","stackChanged","oldStacked","_resyncElements","scopeKeys","datasetScopeKeys","getOptionScopes","createResolver","sorted","parseArrayData","parseObjectData","parsePrimitiveData","isNotInOrderComparedToPrev","labels","getLabels","singleScale","xAxisKey","yAxisKey","getParsed","getDataElement","updateRangeFromParsed","parsedValue","NaN","getMinMax","canStack","otherScale","hidden","createStack","NEGATIVE_INFINITY","otherMin","otherMax","_skip","getAllParsedValues","getMaxOverflow","getLabelAndValue","label","getLabelForValue","toClip","defaultClip","resolveDatasetElementOptions","resolveDataElementOptions","dataIndex","raw","createDataContext","createDatasetContext","_resolveElementOptions","elementType","sharing","datasetElementScopeKeys","resolveNamedOptions","freeze","_resolveAnimations","transition","datasetAnimationScopeKeys","getSharedOptions","includeOptions","sharedOptions","_animationsDisabled","_getSharedOptions","firstOpts","previouslySharedOptions","updateSharedOptions","updateElement","_setStyle","removeHoverStyle","setHoverStyle","_removeDatasetHoverStyle","_setDatasetHoverStyle","arg1","arg2","numMeta","numData","_insertElements","_removeElements","move","updateElements","removed","_sync","_dataChanges","_onDataPush","arguments","_onDataPop","_onDataShift","_onDataSplice","newCount","_onDataUnshift","computeMinSampleSize","_cache","$bar","visibleMetas","concat","sort","getAllScaleValues","curr","_length","updateMinAndPrev","getPixelForTick","parseValue","entry","startValue","endValue","barStart","barEnd","_custom","parseFloatBar","parseArrayOrPrimitive","isFloatBar","custom","setBorderSkipped","edge","borderSkipped","horizontal","borderProps","enableBorderRadius","parseEdge","orig","v2","startEnd","setInflateAmount","inflateAmount","__publicField","BarController","super","bars","getBasePixel","isHorizontal","ruler","_getRuler","vpixels","head","_calculateBarValuePixels","ipixels","_calculateBarIndexPixels","center","_getStacks","grouped","currentParsed","iScaleValue","skipNull","find","_getStackCount","_getStackIndex","pixels","barThickness","_startPixel","_endPixel","stackCount","categoryPercentage","barPercentage","baseValue","minBarLength","actualBase","floating","getDataVisibility","barSign","startPixel","getPixelForDecimal","endPixel","getValueForPixel","halfGrid","getLineWidthForValue","maxBarThickness","Infinity","percent","chunk","computeFlexCategoryTraits","thickness","computeFitCategoryTraits","stackIndex","rects","_index_","_value_","BubbleController","DoughnutController","innerRadius","outerRadius","getter","_getRotation","_getCircumference","circumference","_getRotationExtents","isDatasetVisible","arcs","spacing","getMaxBorderWidth","getMaxOffset","maxSize","cutout","chartWeight","_getRingWeight","ratioX","ratioY","startAngle","endAngle","startX","startY","endX","endY","calcMax","calcMin","maxX","maxY","minX","minY","getRatioAndOffset","maxRadius","radiusLength","_getVisibleDatasetWeightTotal","total","calculateTotal","_getRingWeightOffset","_circumference","animateRotate","calculateCircumference","animationOpts","centerX","centerY","animateScale","metaData","borderAlign","hoverBorderWidth","hoverOffset","ringWeightOffset","legend","generateLabels","fontColor","legendItem","toggleDataVisibility","LineController","_dataset","_decimated","animated","maxGapLength","directUpdate","pointsCount","prevParsed","nullData","lastPoint","updateControlPoints","PolarAreaController","bind","_updateRadius","minSize","cutoutPercentage","getVisibleDatasetCount","xCenter","yCenter","datasetStartAngle","getIndexAngle","defaultAngle","countVisibleElements","_computeAngle","getDistanceFromCenterForValue","angleLines","circular","pointLabels","PieController","RadarController","_fullLoop","pointPosition","getPointPositionForValue","ScatterController","registry","getElement","controllers","__proto__","abstract","DateAdapterBase","members","init","formats","diff","startOf","endOf","adapters","binarySearch","metaset","lookupMethod","_reversePixels","getRange","evaluateInteractionItems","position","handler","getSortedVisibleDatasetMetas","getIntersectItems","useFinalPosition","isPointInArea","inRange","getNearestCartesianItems","distanceMetric","useX","useY","deltaX","deltaY","getDistanceMetricForAxis","minDistance","getCenterPoint","getNearestItems","getProps","getNearestRadialItems","getAxisItems","rangeMethod","intersectsItem","Interaction","modes","nearest","STATIC_POSITIONS","filterByPosition","filterDynamicPositionByAxis","sortByWeight","setLayoutDims","layouts","params","wrap","stackWeight","placed","buildStacks","vBoxMaxWidth","hBoxMaxHeight","layout","fullSize","availableWidth","availableHeight","getCombinedMax","maxPadding","updateMaxPadding","boxPadding","updateDims","getPadding","newWidth","outerWidth","newHeight","outerHeight","widthChanged","heightChanged","same","other","getMargins","marginForPositions","fitBoxes","boxes","refitBoxes","refit","setBoxDims","placeBoxes","userPadding","addBox","_layers","z","removeBox","layoutItem","minPadding","layoutBoxes","wrapBoxes","centerHorizontal","centerVertical","leftAndTop","rightAndBottom","vertical","buildLayoutBoxes","verticalBoxes","horizontalBoxes","beforeLayout","visibleVerticalBoxCount","updatePos","change","handleMaxPadding","BasePlatform","acquireContext","releaseContext","isAttached","updateConfig","BasicPlatform","EXPANDO_KEY","EVENT_TYPES","touchstart","touchmove","touchend","pointerenter","pointerdown","pointermove","pointerup","pointerleave","pointerout","isNullOrEmpty","eventListenerOptions","removeListener","nodeListContains","nodeList","contains","createAttachObserver","observer","MutationObserver","entries","trigger","addedNodes","removedNodes","observe","childList","subtree","createDetachObserver","drpListeningCharts","oldDevicePixelRatio","onWindowResize","dpr","createResizeObserver","ResizeObserver","contentRect","listenDevicePixelRatioChanges","releaseObserver","disconnect","unlistenDevicePixelRatioChanges","createProxyAndListen","native","fromNativeEvent","addListener","DomPlatform","renderHeight","getAttribute","renderWidth","displayWidth","displayHeight","initCanvas","removeAttribute","setAttribute","proxies","$proxies","attach","detach","isConnected","Element","tooltipPosition","hasValue","final","tickOpts","determinedMaxTicks","_tickSize","maxScale","maxChart","_maxLength","determineMaxTicks","ticksLimit","maxTicksLimit","majorIndices","enabled","getMajorIndices","numMajorIndices","first","newTicks","ceil","skipMajors","evenMajorSpacing","getEvenSpacing","factors","_factorize","calculateSpacing","avgMajorSpacing","majorStart","majorEnd","offsetFromEdge","getTicksLimit","ticksLength","sample","numItems","increment","getPixelForGridLine","offsetGridLines","validIndex","lineValue","getTickMarkLength","getTitleHeight","titleAlign","reverseAlign","Scale","_margins","paddingTop","paddingBottom","paddingLeft","paddingRight","labelRotation","_range","_gridLineItems","_labelItems","_labelSizes","_longestTextCache","_userMax","_userMin","_suggestedMax","_suggestedMin","_ticksLength","_borderValue","_dataLimitsCached","suggestedMin","suggestedMax","metas","getTicks","xLabels","yLabels","getLabelItems","_computeLabelItems","beforeUpdate","sampleSize","beforeSetDimensions","setDimensions","afterSetDimensions","beforeDataLimits","determineDataLimits","afterDataLimits","minmax","keepZero","_addGrace","beforeBuildTicks","buildTicks","afterBuildTicks","samplingEnabled","_convertTicksToLabels","beforeCalculateLabelRotation","calculateLabelRotation","afterCalculateLabelRotation","afterAutoSkip","beforeFit","fit","afterFit","afterUpdate","reversePixels","_alignToPixels","alignToPixels","_callHooks","notifyPlugins","beforeTickToLabelConversion","generateTickLabels","afterTickToLabelConversion","numTicks","maxLabelDiagonal","_isVisible","labelSizes","_getLabelSizes","maxLabelWidth","widest","maxLabelHeight","highest","asin","titleOpts","gridOpts","titleHeight","tickPadding","angleRadians","labelHeight","labelWidth","_calculatePadding","_handleMargins","isRotated","labelsBelowTicks","offsetLeft","offsetRight","isFullSize","_computeLabelSizes","caches","widths","heights","tickFont","fontString","nestedLabel","widestLabelSize","highestLabelSize","_resolveTickFontOptions","valueAt","idx","decimal","getDecimalForPixel","getBaseValue","createTickContext","optionTicks","rot","_computeGridLineItems","tl","borderOpts","axisWidth","axisHalfWidth","alignBorderValue","borderValue","alignedLineValue","tx1","ty1","tx2","ty2","x1","y1","x2","y2","positionAxisID","limit","step","optsAtIndex","optsAtIndexBorder","lineColor","tickBorderDash","tickBorderDashOffset","tickAndPadding","hTickAndPadding","lineCount","textOffset","_getXAxisLabelAlignment","_getYAxisLabelAlignment","halfCount","tickTextAlign","labelPadding","_computeLabelArea","drawBackground","drawGrid","drawLine","setLineDash","lineDashOffset","drawBorder","lastLineWidth","drawLabels","renderTextOptions","drawTitle","titleX","titleY","titleArgs","tz","gz","bz","axisID","_maxDigits","fontSize","TypedRegistry","isForType","isPrototypeOf","register","parentScope","isIChartComponent","itemDefaults","defaults$1","defaultRoutes","routes","propertyParts","sourceName","sourceScope","routeDefaults","registerDefaults","unregister","Registry","_typedRegistries","_each","addControllers","addPlugins","addScales","getController","_get","getPlugin","getScale","removeControllers","removeElements","removePlugins","removeScales","typedRegistry","arg","reg","_getRegistryForType","_exec","itemReg","component","camelMethod","PluginService","_init","notify","hook","_createDescriptors","descriptor","plugin","cancelable","invalidate","_oldCache","_notifyStateChanges","localIds","allPlugins","getOpts","pluginOpts","createDescriptors","previousDescriptors","some","pluginScopeKeys","getIndexAxis","datasetDefaults","idMatchesAxis","determineAxis","scaleOptions","getAxisFromDataset","mergeScaleConfig","chartDefaults","configScales","chartIndexAxis","scaleConf","boundDs","retrieveAxisFromDatasets","defaultId","getDefaultScaleIDFromAxis","defaultScaleOptions","defaultID","getAxisFromDefaultScaleID","initOptions","initData","keyCache","keysCached","cachedKeys","generate","addIfFound","Config","_config","initConfig","_scopeCache","_resolverCache","clearCache","clear","datasetType","additionalOptionScopes","_cachedScopes","mainScope","resetCache","keyLists","chartOptionScopes","subPrefixes","getResolver","hasFunction","needContext","resolverCache","KNOWN_POSITIONS","positionIsHorizontal","compare2Level","l1","l2","onAnimationsComplete","onComplete","onAnimationProgress","onProgress","getCanvas","getElementById","instances","getChart","moveNumericKeys","intKey","Chart","invalidatePlugins","userConfig","initialCanvas","existingChart","OffscreenCanvas","_detectPlatform","_options","_aspectRatio","_metasets","_lastEvent","_listeners","_responsiveListeners","_sortedMetasets","_plugins","_hiddenIndices","attached","_doResize","timeout","clearTimeout","setTimeout","debounce","resizeDelay","_initialize","bindEvents","_resizeBeforeDraw","_resize","newSize","newRatio","onResize","render","ensureScalesHaveIDs","axisOptions","buildOrUpdateScales","scaleOpts","updated","isRadial","dposition","dtype","scaleType","hasUpdated","_updateMetasets","_destroyDatasetMeta","_removeUnreferencedMetasets","buildOrUpdateControllers","newControllers","order","ControllerClass","_resetElements","animsDisabled","_updateScales","_checkEventBindings","_updateHiddenIndices","_minPadding","_updateLayout","_updateDatasets","_eventHandler","_updateHoverStyles","existingEvents","newEvents","unbindEvents","changes","_getUniformDataChanges","datasetCount","makeSet","changeSet","noArea","_idx","_updateDataset","layers","_drawDatasets","_drawDataset","getElementsAtEventForMode","setDatasetVisibility","_updateVisibility","_stop","destroy","toBase64Image","toDataURL","bindUserEvents","bindResponsiveEvents","_add","_remove","detached","updateHoverStyle","getActiveElements","setActiveElements","activeElements","lastActive","pluginId","replay","hoverOptions","deactivated","activated","inChartArea","eventFilter","_handleEvent","_getActiveElements","isClick","_isClickEvent","lastEvent","determineLastEvent","parseBorderRadius$1","angleDelta","borderRadius","halfThickness","innerLimit","computeOuterLimit","outerArcLimit","outerStart","outerEnd","innerStart","innerEnd","rThetaToXY","theta","pathArc","pixelMargin","innerR","spacingOffset","avNogSpacingRadius","angleOffset","outerStartAdjustedRadius","outerEndAdjustedRadius","outerStartAdjustedAngle","outerEndAdjustedAngle","innerStartAdjustedRadius","innerEndAdjustedRadius","innerStartAdjustedAngle","innerEndAdjustedAngle","outerMidAdjustedAngle","pCenter","p4","innerMidAdjustedAngle","p8","outerStartX","outerStartY","outerEndX","outerEndY","fullCircles","inner","lineJoin","angleMargin","clipArc","ArcElement","chartX","chartY","rAdjust","nonZeroBetween","betweenAngles","withinRadius","halfAngle","halfRadius","radiusOffset","drawArc","setStyle","lineCap","pathVars","paramsStart","paramsEnd","segmentStart","segmentEnd","outside","pathSegment","lineMethod","stepped","getLineMethod","fastPathSegment","prevX","lastY","avgX","countX","pointIndex","drawX","truncX","_getSegmentMethod","usePath2D","Path2D","path","_path","strokePathWithCache","segmentMethod","strokePathDirect","LineElement","_points","_segments","_pointsUpdated","findStartAndEnd","solidSegments","_computeSegments","_interpolate","_getInterpolationMethod","interpolated","inRange$1","hitRadius","PointElement","mouseX","mouseY","inXRange","inYRange","hoverRadius","getBarBounds","bar","half","skipOrLimit","boundingRects","maxW","maxH","parseBorderWidth","maxR","enableBorder","parseBorderRadius","outer","skipX","skipY","addNormalRectPath","inflateRect","amount","refRect","BarElement","addRectPath","BORDER_COLORS","BACKGROUND_COLORS","getBorderColor","getBackgroundColor","getColorizer","colorizeDoughnutDataset","colorizePolarAreaDataset","colorizeDefaultDataset","containsColorsDefinitions","plugin_colors","forceOverride","_args","chartOptions","containsColorDefenition","colorizer","cleanDecimatedDataset","cleanDecimatedData","plugin_decimation","algorithm","beforeElementsUpdate","xAxis","getStartAndCountOfVisiblePointsSimplified","threshold","decimated","samples","bucketWidth","sampledIndex","endIndex","maxAreaPoint","maxArea","nextA","avgY","avgRangeStart","avgRangeEnd","avgRangeLength","rangeOffs","rangeTo","pointAx","pointAy","lttbDecimation","minIndex","maxIndex","startIndex","xMin","dx","lastIndex","intermediateIndex1","intermediateIndex2","minMaxDecimation","_getBounds","_findSegmentEnd","_getEdge","_createBoundaryLine","boundary","linePoints","_pointsFromSegments","_shouldApplyFill","_resolveTarget","propagate","visited","_decodeFill","fillOption","parseFillOption","firstCh","decodeTargetIndex","addPointsBelow","sourcePoint","linesBelow","postponed","findPoint","unshift","pointValue","firstValue","lastValue","simpleArc","getLineByIndex","sourcePoints","below","getLinesBelow","_buildStackLine","_getTargetValue","computeCircularBoundary","_getTargetPixel","computeLinearBoundary","computeBoundary","_drawfill","lineOpts","above","clipVertical","doFill","clipY","lineLoop","tpoints","targetSegments","tgt","subBounds","fillSources","fillSource","src","notShape","clipBounds","interpolatedLineTo","targetLoop","interpolatedPoint","afterDatasetsUpdate","$filler","beforeDraw","drawTime","beforeDatasetsDraw","beforeDatasetDraw","getBoxSize","labelOpts","boxHeight","boxWidth","usePointStyle","pointStyleWidth","itemHeight","Legend","_added","legendHitBoxes","_hoveredItem","doughnutMode","legendItems","columnSizes","lineWidths","buildLabels","labelFont","_computeTitleHeight","_fitRows","_fitCols","hitboxes","totalHeight","row","_itemHeight","heightLimit","totalWidth","currentColWidth","currentColHeight","col","legendItemText","calculateItemWidth","fontLineHeight","calculateLegendItemHeight","calculateItemHeight","calculateItemSize","adjustHitBoxes","rtlHelper","hitbox","_draw","defaultColor","halfFontSize","cursor","textDirection","lineDash","drawOptions","SQRT2","yBoxTop","xBoxLeft","drawLegendBox","_textX","titleFont","titlePadding","topPaddingPlusHalfFontSize","_getLegendItemAt","hitBox","lh","handleEvent","onLeave","isListened","hoveredItem","sameItem","plugin_legend","_element","afterEvent","ci","useBorderRadius","Title","_padding","textSize","_drawArgs","fontOpts","plugin_title","titleBlock","createTitle","WeakMap","plugin_subtitle","positioners","average","xSet","eventPosition","nearestElement","tp","pushOrConcat","toPush","splitNewlines","String","createTooltipItem","formattedValue","getTooltipSize","tooltip","body","footer","bodyFont","footerFont","titleLineCount","footerLineCount","bodyLineItemCount","combinedBodyLength","bodyItem","before","after","beforeBody","afterBody","titleSpacing","titleMarginBottom","displayColors","bodySpacing","footerMarginTop","footerSpacing","widthPadding","maxLineWidth","determineXAlign","yAlign","chartWidth","xAlign","caret","caretSize","caretPadding","doesNotFitWithAlign","determineAlignment","determineYAlign","getBackgroundPoint","alignment","paddingAndSize","alignX","alignY","getAlignedX","getBeforeAfterBodyLines","overrideCallbacks","defaultCallbacks","beforeTitle","tooltipItems","labelCount","afterTitle","beforeLabel","tooltipItem","labelColor","labelTextColor","bodyColor","labelPointStyle","afterLabel","beforeFooter","afterFooter","invokeCallbackWithFallback","Tooltip","opacity","_eventPosition","_size","_cachedAnimations","_tooltipItems","dataPoints","caretX","caretY","labelColors","labelPointStyles","labelTextColors","getTitle","getBeforeBody","getBody","bodyItems","scoped","getAfterBody","getFooter","_createItems","itemSort","positionAndSize","backgroundPoint","external","drawCaret","tooltipPoint","caretPosition","getCaretPosition","x3","y3","ptX","ptY","titleColor","_drawColorBox","colorX","rtlColorX","yOffSet","colorY","multiKeyBackground","outerX","innerX","strokeRect","drawBody","bodyAlign","bodyLineHeight","xLinePadding","fillLineOfText","bodyAlignForCalculation","textColor","drawFooter","footerAlign","footerColor","tooltipSize","quadraticCurveTo","_updateAnimationTarget","animX","animY","_willRender","hasTooltipContent","globalAlpha","positionChanged","_positionChanged","_ignoreReplayEvents","plugin_tooltip","afterInit","afterDraw","Colors","Decimation","Filler","SubTitle","findOrAddLabel","addedLabels","addIfString","lastIndexOf","_getLabelForValue","CategoryScale","_startValue","_valueRange","_addedLabels","added","generateTicks$1","generationOptions","dataRange","precision","maxTicks","maxDigits","includeBounds","unit","maxSpaces","rmin","rmax","countDefined","minSpacing","niceMin","niceMax","numSpaces","rounded","almostWhole","decimalPlaces","relativeLabelSize","LinearScaleBase","_endValue","handleTickRangeOptions","setMin","setMax","minSign","maxSign","getTickLimit","stepSize","computeTickLimit","LinearScale","log10Floor","changeExponent","isMajor","tickVal","steps","rangeExp","rangeStep","generateTicks","minExp","exp","startExp","lastTick","LogarithmicScale","_zero","getTickBackdropHeight","determineLimits","fitWithPointLabels","limits","valueCount","_pointLabels","pointLabelOpts","additionalAngle","centerPointLabels","getPointLabelContext","getPointPosition","drawingArea","plFont","updateLimits","setCenterPoint","_pointLabelItems","itemOpts","extra","createPointLabelItem","isNotOverlapped","buildPointLabelItems","hLimits","vLimits","outerDistance","pointLabelPosition","yForAngle","getTextAlignForAngle","leftForTextAlign","drawPointLabelBox","backdropLeft","backdropTop","backdropWidth","backdropHeight","pathRadiusLine","RadialLinearScale","leftMovement","rightMovement","topMovement","bottomMovement","scalingFactor","getValueForDistanceFromCenter","scaledDistance","pointLabel","createPointLabelContext","distanceFromCenter","getBasePosition","getPointLabelPosition","drawPointLabels","gridLineOpts","drawRadiusLine","animate","INTERVALS","millisecond","common","second","minute","hour","day","week","month","quarter","year","UNITS","sorter","adapter","_adapter","parser","isoWeekday","_parseOpts","determineUnitForAutoTicks","minUnit","capacity","interval","MAX_SAFE_INTEGER","addTick","time","timestamps","ticksFromTimestamps","majorUnit","setMajorTicks","TimeScale","_unit","_majorUnit","_offsets","_normalized","displayFormats","normalized","_applyBounds","_getLabelBounds","getLabelTimestamps","timeOpts","_generate","_filterBetween","_getLabelCapacity","determineUnitForFormatting","determineMajorUnit","initOffsets","offsetAfterAutoskip","getDecimalForValue","weekday","hasWeekday","getDataTimestamps","tooltipFormat","datetime","fmt","_tickFormatFunction","minorFormat","majorFormat","offsets","_getLabelSize","ticksOpts","tickLabelWidth","cosRotation","sinRotation","tickFontSize","exampleTime","exampleLabel","prevSource","nextSource","prevTarget","nextTarget","span","TimeSeriesScale","_table","_minPos","_tableRange","_getTimestampsForTable","buildLookupTable","registerables","screen","deviceXDPI","logicalXDPI","utils","updates","orient","origin","x0","y0","dy","ln","region","compute$1","anchor","clamp","r0","r1","clipped","vx","vy","aligned","rx","ry","sx","sy","rasterize","getScaleOrigin","drawFrame","model","bgColor","drawRoundedRect","drawTextLine","shadow","shadowBlur","stroked","filled","Label","me","_index","_model","_rects","_el","_modelize","positioner","textShadowBlur","textShadowColor","th","tw","tx","ty","frame","geometry","textGeometry","shadowColor","drawText","MIN_INTEGER","MIN_SAFE_INTEGER","MAX_INTEGER","rotated","cx","cy","projected","dp","toAxis","HitBox","_rotation","_rect","coordinates","vs","intersects","pr0","pr1","axes","prepare","$layout","_box","_hidable","_visible","_set","sa","sb","state","dirty","collider","s0","s1","collide","h0","compute","lookup","DEFAULT_KEY","dispatchEvent","callback$1","groups","$groups","_key","_dirty","handleMoveEvents","expando","enter","leave","_labels","_hovered","dispatchMoveEvents","beforeInit","_actives","_listened","_datasets","afterDatasetUpdate","datalabels","configs","afterDatasetsDraw","beforeEvent","handlers","click","handleClickEvents","actives","ChartDataLabels","__props","green","orange","red","ref","chartRef","generateDatasets","datas","settings","columns","column","renderChart","async","nextTick","response","api","axios","url","fetchData","__expose","onMounted"],"mappings":"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","x_google_ignoreList":[0,1,2,3]}