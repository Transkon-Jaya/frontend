{"version":3,"file":"MarketingViewE-DwUs7Q03.js","sources":["../../src/views/MarketingViewE.vue"],"sourcesContent":["<script setup>\r\nimport { ref, computed, onMounted } from \"vue\";\r\nimport axios from \"axios\";\r\nimport { VueGoodTable } from \"vue-good-table-next\";\r\nimport \"vue-good-table-next/dist/vue-good-table-next.css\";\r\nimport * as XLSX from \"xlsx\";\r\n\r\nconst apiUrl = \"https://www.transkon-rent.com/api/marketing\";\r\nconst marketingData = ref([]);\r\nconst loading = ref(true);\r\nconst error = ref(null);\r\n\r\n// Form Data for New Entry\r\nconst newEntry = ref({\r\n  name_customer: \"\",\r\n  location: \"\",\r\n  plan_hub: \"\",\r\n  number_quot: \"\",\r\n  no_spk_po_customer: \"\",\r\n});\r\n\r\n// Fetch Data from API\r\nconst fetchMarketingData = async () => {\r\n  try {\r\n    loading.value = true;\r\n    const response = await axios.get(apiUrl);\r\n    marketingData.value = response.data.map((item) => ({\r\n      ...item,\r\n      id: parseInt(item.id, 10),\r\n      isEditing: false,\r\n    }));\r\n  } catch (err) {\r\n    error.value = \"Failed to fetch data\";\r\n    console.error(err);\r\n  } finally {\r\n    loading.value = false;\r\n  }\r\n};\r\n\r\n// Update Data via API\r\nconst updateMarketingData = async (item) => {\r\n  try {\r\n    await axios.put(`${apiUrl}`, {\r\n      id: item.id,\r\n      name_customer: item.name_customer,\r\n      location: item.location,\r\n      plan_hub: item.plan_hub,\r\n      number_quot: item.number_quot,\r\n      no_spk_po_customer: item.no_spk_po_customer,\r\n    });\r\n\r\n    item.isEditing = false;\r\n    alert(\"Updated successfully!\");\r\n  } catch (err) {\r\n    console.error(\"Update failed:\", err);\r\n    alert(\"Failed to update\");\r\n  }\r\n};\r\n\r\n// Insert New Data via API\r\nconst insertMarketingData = async () => {\r\n  try {\r\n    const response = await axios.post(apiUrl, {\r\n      name_customer: newEntry.value.name_customer,\r\n      location: newEntry.value.location,\r\n      plan_hub: newEntry.value.plan_hub,\r\n      number_quot: newEntry.value.number_quot,\r\n      no_spk_po_customer: newEntry.value.no_spk_po_customer,\r\n    });\r\n\r\n    // Add the new row to the table dynamically\r\n    marketingData.value.push({\r\n      ...response.data,\r\n      id: parseInt(response.data.id, 10),\r\n      isEditing: false,\r\n    });\r\n\r\n    // Reset form fields\r\n    newEntry.value = {\r\n      name_customer: \"\",\r\n      location: \"\",\r\n      plan_hub: \"\",\r\n      number_quot: \"\",\r\n      no_spk_po_customer: \"\",\r\n    };\r\n\r\n    alert(\"Inserted successfully!\");\r\n  } catch (err) {\r\n    console.error(\"Insertion failed:\", err);\r\n    alert(\"Failed to insert\");\r\n  }\r\n};\r\n\r\n// Export to Excel\r\nconst exportToExcel = () => {\r\n  const worksheet = XLSX.utils.json_to_sheet(marketingData.value);\r\n  const workbook = XLSX.utils.book_new();\r\n  XLSX.utils.book_append_sheet(workbook, worksheet, \"Marketing Data\");\r\n  XLSX.writeFile(workbook, \"Marketing_Data.xlsx\");\r\n};\r\n\r\n// Define Table Columns\r\nconst columns = ref([\r\n  { label: \"Actions\", field: \"actions\" },\r\n  { label: \"ID\", field: \"id\", sortable: true, filterable: true },\r\n  {\r\n    label: \"Customer Name\",\r\n    field: \"name_customer\",\r\n    sortable: true,\r\n    filterable: true,\r\n  },\r\n  { label: \"Location\", field: \"location\", sortable: true, filterable: true },\r\n  { label: \"Plan Hub\", field: \"plan_hub\", sortable: true, filterable: true },\r\n  {\r\n    label: \"Number Quot\",\r\n    field: \"number_quot\",\r\n    sortable: true,\r\n    filterable: true,\r\n  },\r\n  {\r\n    label: \"No SPK PO Customer\",\r\n    field: \"no_spk_po_customer\",\r\n    sortable: true,\r\n    filterable: true,\r\n  },\r\n]);\r\n\r\n// Computed Property for Table Data\r\nconst formattedData = computed(() => {\r\n  return marketingData.value.map((item) => ({\r\n    ...item,\r\n    actions: item.isEditing ? \"Save\" : \"Edit\",\r\n  }));\r\n});\r\n\r\n// Fetch data on mount\r\nonMounted(fetchMarketingData);\r\n</script>\r\n\r\n<template>\r\n  <div>\r\n    <h2>Marketing Data (Editable, Exportable, & Insertable)</h2>\r\n\r\n    <!-- Add New Data Form -->\r\n    <div class=\"form-container\">\r\n      <h3>Add New Entry</h3>\r\n      <input v-model=\"newEntry.name_customer\" placeholder=\"Customer Name\" />\r\n      <input v-model=\"newEntry.location\" placeholder=\"Location\" />\r\n      <input v-model=\"newEntry.plan_hub\" placeholder=\"Plan Hub\" />\r\n      <input v-model=\"newEntry.number_quot\" placeholder=\"Number Quot\" />\r\n      <input\r\n        v-model=\"newEntry.no_spk_po_customer\"\r\n        placeholder=\"No SPK PO Customer\"\r\n      />\r\n      <button @click=\"insertMarketingData\">Add New Entry</button>\r\n    </div>\r\n\r\n    <button @click=\"exportToExcel\">Export to Excel</button>\r\n\r\n    <p v-if=\"loading\">Loading...</p>\r\n    <p v-if=\"error\" class=\"error\">{{ error }}</p>\r\n\r\n    <vue-good-table\r\n      v-if=\"!loading && !error\"\r\n      :columns=\"columns\"\r\n      :rows=\"formattedData\"\r\n      :pagination-options=\"{ enabled: true, mode: 'pages', perPage: 10 }\"\r\n      :search-options=\"{ enabled: true }\"\r\n      :sort-options=\"{ enabled: true }\"\r\n    >\r\n      <template v-slot:table-row=\"props\">\r\n        <span v-if=\"props.column.field === 'id'\">\r\n          {{ props.row.id }}\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'name_customer'\">\r\n          <input v-if=\"props.row.isEditing\" v-model=\"props.row.name_customer\" />\r\n          <span v-else>{{ props.row.name_customer }}</span>\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'location'\">\r\n          <input v-if=\"props.row.isEditing\" v-model=\"props.row.location\" />\r\n          <span v-else>{{ props.row.location }}</span>\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'plan_hub'\">\r\n          <input v-if=\"props.row.isEditing\" v-model=\"props.row.plan_hub\" />\r\n          <span v-else>{{ props.row.plan_hub }}</span>\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'number_quot'\">\r\n          <input v-if=\"props.row.isEditing\" v-model=\"props.row.number_quot\" />\r\n          <span v-else>{{ props.row.number_quot }}</span>\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'no_spk_po_customer'\">\r\n          <input\r\n            v-if=\"props.row.isEditing\"\r\n            v-model=\"props.row.no_spk_po_customer\"\r\n          />\r\n          <span v-else>{{ props.row.no_spk_po_customer }}</span>\r\n        </span>\r\n\r\n        <span v-else-if=\"props.column.field === 'actions'\">\r\n          <button\r\n            @click=\"\r\n              props.row.isEditing\r\n                ? updateMarketingData(props.row)\r\n                : (props.row.isEditing = true)\r\n            \"\r\n          >\r\n            {{ props.row.isEditing ? \"Save\" : \"Edit\" }}\r\n          </button>\r\n        </span>\r\n      </template>\r\n    </vue-good-table>\r\n  </div>\r\n</template>\r\n\r\n<style>\r\n.error {\r\n  color: red;\r\n}\r\ninput {\r\n  padding: 5px;\r\n  width: 100%;\r\n  margin: 5px 0;\r\n}\r\nbutton {\r\n  padding: 6px 10px;\r\n  margin: 5px;\r\n  background-color: #28a745;\r\n  color: white;\r\n  border: none;\r\n  cursor: pointer;\r\n}\r\nbutton:hover {\r\n  background-color: #218838;\r\n}\r\n.form-container {\r\n  margin-bottom: 20px;\r\n  border: 1px solid #ccc;\r\n  padding: 10px;\r\n}\r\n</style>\r\n"],"names":["apiUrl","marketingData","ref","loading","error","newEntry","name_customer","location","plan_hub","number_quot","no_spk_po_customer","insertMarketingData","async","response","axios","post","value","push","data","id","parseInt","isEditing","alert","err","exportToExcel","worksheet","XLSX.utils","json_to_sheet","workbook","book_new","utils","book_append_sheet","XLSX.writeFile","columns","label","field","sortable","filterable","formattedData","computed","map","item","actions","onMounted","get","put"],"mappings":"mgBAOMA,EAAS,kFACT,MAAAC,EAAgBC,EAAI,IACpBC,EAAUD,GAAI,GACdE,EAAQF,EAAI,MAGZG,EAAWH,EAAI,CACnBI,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,YAAa,GACbC,mBAAoB,KA0ChBC,EAAsBC,UACtB,IACF,MAAMC,QAAiBC,EAAMC,KAAKf,EAAQ,CACxCM,cAAeD,EAASW,MAAMV,cAC9BC,SAAUF,EAASW,MAAMT,SACzBC,SAAUH,EAASW,MAAMR,SACzBC,YAAaJ,EAASW,MAAMP,YAC5BC,mBAAoBL,EAASW,MAAMN,qBAIrCT,EAAce,MAAMC,KAAK,IACpBJ,EAASK,KACZC,GAAIC,SAASP,EAASK,KAAKC,GAAI,IAC/BE,WAAW,IAIbhB,EAASW,MAAQ,CACfV,cAAe,GACfC,SAAU,GACVC,SAAU,GACVC,YAAa,GACbC,mBAAoB,IAGtBY,MAAM,yBACP,OAAQC,GAEPD,MAAM,mBACP,GAIGE,EAAgB,KACpB,MAAMC,EAAYC,EAAWC,cAAc1B,EAAce,OACnDY,EAAWF,EAAWG,WACjBC,EAAAC,kBAAkBH,EAAUH,EAAW,kBAClDO,EAAeJ,EAAU,sBAAqB,EAI1CK,EAAU/B,EAAI,CAClB,CAAEgC,MAAO,UAAWC,MAAO,WAC3B,CAAED,MAAO,KAAMC,MAAO,KAAMC,UAAU,EAAMC,YAAY,GACxD,CACEH,MAAO,gBACPC,MAAO,gBACPC,UAAU,EACVC,YAAY,GAEd,CAAEH,MAAO,WAAYC,MAAO,WAAYC,UAAU,EAAMC,YAAY,GACpE,CAAEH,MAAO,WAAYC,MAAO,WAAYC,UAAU,EAAMC,YAAY,GACpE,CACEH,MAAO,cACPC,MAAO,cACPC,UAAU,EACVC,YAAY,GAEd,CACEH,MAAO,qBACPC,MAAO,qBACPC,UAAU,EACVC,YAAY,KAKVC,EAAgBC,GAAS,IACtBtC,EAAce,MAAMwB,KAAKC,IAAU,IACrCA,EACHC,QAASD,EAAKpB,UAAY,OAAS,oBAKvCsB,GAlH2B/B,UACrB,IACFT,EAAQa,OAAQ,EAChB,MAAMH,QAAiBC,EAAM8B,IAAI5C,GACjCC,EAAce,MAAQH,EAASK,KAAKsB,KAAKC,IAAU,IAC9CA,EACHtB,GAAIC,SAASqB,EAAKtB,GAAI,IACtBE,WAAW,KAEd,OAAQE,GACPnB,EAAMY,MAAQ,sBAElB,CAAY,QACRb,EAAQa,OAAQ,CACjB,o6EAIyBJ,OAAO6B,IAC7B,UACI3B,EAAM+B,IAAI,GAAG7C,IAAU,CAC3BmB,GAAIsB,EAAKtB,GACTb,cAAemC,EAAKnC,cACpBC,SAAUkC,EAAKlC,SACfC,SAAUiC,EAAKjC,SACfC,YAAagC,EAAKhC,YAClBC,mBAAoB+B,EAAK/B,qBAG3B+B,EAAKpB,WAAY,EACjBC,MAAM,wBACP,OAAQC,GAEPD,MAAM,mBACP"}