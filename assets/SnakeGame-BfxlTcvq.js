import{_ as b,c as o,a as r,q as h,t as u,F as m,j as f,s as c,g as a,z as v}from"./index-BZPVUeNE.js";const w={name:"SnakeGame",data(){return{boardSize:15,board:[],snake:[],direction:"right",nextDirection:"right",food:null,gameStarted:!1,gameOver:!1,score:0,highScore:0,gameInterval:null,speed:200,isMobile:!1}},created(){this.initializeBoard(),this.highScore=localStorage.getItem("snakeHighScore")||0,this.checkIfMobile()},mounted(){window.addEventListener("resize",this.checkIfMobile)},beforeUnmount(){window.removeEventListener("resize",this.checkIfMobile),clearInterval(this.gameInterval)},methods:{initializeBoard(){this.board=Array(this.boardSize).fill().map(()=>Array(this.boardSize).fill(0))},checkIfMobile(){this.isMobile=window.innerWidth<=768},startGame(){this.initializeBoard(),this.gameStarted=!0,this.gameOver=!1,this.score=0;const t=Math.floor(this.boardSize/2),e=Math.floor(this.boardSize/2);this.snake=[{x:t,y:e},{x:t-1,y:e},{x:t-2,y:e}],this.direction="right",this.nextDirection="right",this.generateFood(),this.updateBoard(),this.$nextTick(()=>{this.$refs.gameBoard.focus()}),this.gameInterval&&clearInterval(this.gameInterval),this.gameInterval=setInterval(this.gameLoop,this.speed)},resetGame(){this.startGame()},gameLoop(){this.direction=this.nextDirection,this.moveSnake(),this.updateBoard()},moveSnake(){const t={...this.snake[0]};switch(this.direction){case"up":t.y-=1;break;case"down":t.y+=1;break;case"left":t.x-=1;break;case"right":t.x+=1;break}if(t.x<0||t.x>=this.boardSize||t.y<0||t.y>=this.boardSize||this.snake.some(e=>e.x===t.x&&e.y===t.y)){this.endGame();return}this.snake.unshift(t),t.x===this.food.x&&t.y===this.food.y?(this.score+=10,this.score>this.highScore&&(this.highScore=this.score,localStorage.setItem("snakeHighScore",this.highScore)),this.generateFood()):this.snake.pop()},generateFood(){let t;do t={x:Math.floor(Math.random()*this.boardSize),y:Math.floor(Math.random()*this.boardSize)};while(this.snake.some(e=>e.x===t.x&&e.y===t.y));this.food=t},updateBoard(){this.initializeBoard();for(let e=1;e<this.snake.length;e++){const d=this.snake[e];this.board[d.y][d.x]=1}const t=this.snake[0];this.board[t.y][t.x]=2,this.board[this.food.y][this.food.x]=3},handleKeyDown(t){if(!this.gameStarted||this.gameOver)return;const e=t.key.toLowerCase();switch(["arrowup","arrowdown","arrowleft","arrowright","w","a","s","d"].includes(e)&&t.preventDefault(),e){case"arrowup":case"w":this.direction!=="down"&&(this.nextDirection="up");break;case"arrowdown":case"s":this.direction!=="up"&&(this.nextDirection="down");break;case"arrowleft":case"a":this.direction!=="right"&&(this.nextDirection="left");break;case"arrowright":case"d":this.direction!=="left"&&(this.nextDirection="right");break}},setNextDirection(t){!this.gameStarted||this.gameOver||(t==="up"&&this.direction!=="down"&&(this.nextDirection="up"),t==="down"&&this.direction!=="up"&&(this.nextDirection="down"),t==="left"&&this.direction!=="right"&&(this.nextDirection="left"),t==="right"&&this.direction!=="left"&&(this.nextDirection="right"))},clearTouch(){},endGame(){clearInterval(this.gameInterval),this.gameOver=!0,this.gameStarted=!1}}},x={class:"snake-game"},y={class:"game-info"},S={class:"score"},D={class:"high-score"},p={class:"game-container"},T={key:0,class:"touch-controls"},z={class:"control-row"},I={class:"control-row"},M={key:1,class:"game-over"},G={class:"instructions"},B={key:0},_={key:1};function O(t,e,d,N,n,s){return a(),o("div",x,[e[11]||(e[11]=r("h1",null,"Classic Snake Game",-1)),r("div",y,[r("div",S,"Score: "+u(n.score),1),r("div",D,"High Score: "+u(n.highScore),1),n.gameStarted?h("",!0):(a(),o("button",{key:0,onClick:e[0]||(e[0]=(...i)=>s.startGame&&s.startGame(...i))},"Start Game")),n.gameOver?(a(),o("button",{key:1,onClick:e[1]||(e[1]=(...i)=>s.resetGame&&s.resetGame(...i))},"Play Again")):h("",!0)]),r("div",p,[r("div",{class:"game-board",ref:"gameBoard",tabindex:"0",onKeydown:e[2]||(e[2]=(...i)=>s.handleKeyDown&&s.handleKeyDown(...i))},[(a(!0),o(m,null,f(n.board,(i,g)=>(a(),o("div",{key:g,class:"row"},[(a(!0),o(m,null,f(i,(l,k)=>(a(),o("div",{key:k,class:v(["cell",{"snake-body":l===1,"snake-head":l===2,food:l===3}])},null,2))),128))]))),128))],544)]),n.isMobile?(a(),o("div",T,[r("div",z,[r("button",{class:"control-btn",onTouchstart:e[3]||(e[3]=c(i=>s.setNextDirection("up"),["prevent"])),onTouchend:e[4]||(e[4]=(...i)=>s.clearTouch&&s.clearTouch(...i))},"↑",32)]),r("div",I,[r("button",{class:"control-btn",onTouchstart:e[5]||(e[5]=c(i=>s.setNextDirection("left"),["prevent"])),onTouchend:e[6]||(e[6]=(...i)=>s.clearTouch&&s.clearTouch(...i))},"←",32),r("button",{class:"control-btn",onTouchstart:e[7]||(e[7]=c(i=>s.setNextDirection("down"),["prevent"])),onTouchend:e[8]||(e[8]=(...i)=>s.clearTouch&&s.clearTouch(...i))},"↓",32),r("button",{class:"control-btn",onTouchstart:e[9]||(e[9]=c(i=>s.setNextDirection("right"),["prevent"])),onTouchend:e[10]||(e[10]=(...i)=>s.clearTouch&&s.clearTouch(...i))},"→",32)])])):h("",!0),n.gameOver?(a(),o("div",M," Game Over! Your score: "+u(n.score),1)):h("",!0),r("div",G,[n.isMobile?(a(),o("p",_,"Use the buttons below to control the snake")):(a(),o("p",B,"Use arrow keys or WASD to control the snake"))])])}const L=b(w,[["render",O],["__scopeId","data-v-0007e932"]]);export{L as default};
